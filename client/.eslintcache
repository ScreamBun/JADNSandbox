[{"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/converter/index.js":"1","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/docs/index.js":"2","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/docs/jadn_api.js":"3","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/docs/templates.js":"4","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/index.js":"5","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/index.js":"6","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/arrayOf.js":"7","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/basicField.js":"8","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/choice.js":"9","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/enumerated.js":"10","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/map.js":"11","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/record.js":"12","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/index.js":"13","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/utils.js":"14","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/index.js":"15","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/index.js":"16","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/field.js":"17","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/index.js":"18","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/key_array.js":"19","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/key_object.js":"20","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/key_value.js":"21","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/primitive.js":"22","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/structure.js":"23","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/index.js":"24","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/meta.js":"25","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/types.js":"26","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/static/error.js":"27","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/static/index.js":"28","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/static/nav.js":"29","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/cbor.js":"30","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/index.js":"31","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/jadn.js":"32","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/loadURL.js":"33","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/multiKey.js":"34","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/validator/index.js":"35","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/convert.ts":"36","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/generate.ts":"37","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/index.ts":"38","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/interfaces.ts":"39","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/util.ts":"40","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/validate.ts":"41","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/app.tsx":"42","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/index.jsx":"43","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/reducers/convert.ts":"44","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/reducers/generate.ts":"45","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/reducers/index.ts":"46","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/reducers/util.ts":"47","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/reducers/validate.ts":"48","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/store.ts":"49","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/registerServiceWorker.d.ts":"50","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/jadn-editor.tsx":"51"},{"size":22475,"mtime":1642521934598,"results":"52","hashOfConfig":"53"},{"size":3826,"mtime":1641913708341,"results":"54","hashOfConfig":"53"},{"size":11494,"mtime":1641913665905,"results":"55","hashOfConfig":"53"},{"size":3690,"mtime":1641914392194,"results":"56","hashOfConfig":"53"},{"size":15831,"mtime":1641923342601,"results":"57","hashOfConfig":"53"},{"size":1992,"mtime":1641924008864,"results":"58","hashOfConfig":"53"},{"size":4610,"mtime":1641926064905,"results":"59","hashOfConfig":"53"},{"size":1664,"mtime":1641926684430,"results":"60","hashOfConfig":"53"},{"size":2362,"mtime":1641927228232,"results":"61","hashOfConfig":"53"},{"size":1485,"mtime":1641927551151,"results":"62","hashOfConfig":"53"},{"size":1244,"mtime":1641998956942,"results":"63","hashOfConfig":"53"},{"size":1250,"mtime":1641998966013,"results":"64","hashOfConfig":"53"},{"size":219,"mtime":1641927986772,"results":"65","hashOfConfig":"53"},{"size":254,"mtime":1641928044208,"results":"66","hashOfConfig":"53"},{"size":133,"mtime":1641928126300,"results":"67","hashOfConfig":"53"},{"size":11836,"mtime":1641929944475,"results":"68","hashOfConfig":"53"},{"size":3553,"mtime":1641932253847,"results":"69","hashOfConfig":"53"},{"size":319,"mtime":1641932241351,"results":"70","hashOfConfig":"53"},{"size":2274,"mtime":1641932702018,"results":"71","hashOfConfig":"53"},{"size":2761,"mtime":1641933194182,"results":"72","hashOfConfig":"53"},{"size":1235,"mtime":1641933422626,"results":"73","hashOfConfig":"53"},{"size":2283,"mtime":1641933840534,"results":"74","hashOfConfig":"53"},{"size":6592,"mtime":1641935670766,"results":"75","hashOfConfig":"53"},{"size":119,"mtime":1641935709491,"results":"76","hashOfConfig":"53"},{"size":1368,"mtime":1641935874290,"results":"77","hashOfConfig":"53"},{"size":2196,"mtime":1641936194328,"results":"78","hashOfConfig":"53"},{"size":2349,"mtime":1641936767267,"results":"79","hashOfConfig":"53"},{"size":82,"mtime":1641936786044,"results":"80","hashOfConfig":"53"},{"size":9654,"mtime":1641938630287,"results":"81","hashOfConfig":"53"},{"size":1094,"mtime":1641994128527,"results":"82","hashOfConfig":"53"},{"size":385,"mtime":1641994315198,"results":"83","hashOfConfig":"53"},{"size":3689,"mtime":1641997165271,"results":"84","hashOfConfig":"53"},{"size":2161,"mtime":1641847958891,"results":"85","hashOfConfig":"53"},{"size":793,"mtime":1641847236895,"results":"86","hashOfConfig":"53"},{"size":22448,"mtime":1642521750943,"results":"87","hashOfConfig":"53"},{"size":2003,"mtime":1641848641390,"results":"88","hashOfConfig":"53"},{"size":1831,"mtime":1641848634170,"results":"89","hashOfConfig":"53"},{"size":623,"mtime":1641572726067,"results":"90","hashOfConfig":"53"},{"size":786,"mtime":1641579230510,"results":"91","hashOfConfig":"53"},{"size":1757,"mtime":1641848620823,"results":"92","hashOfConfig":"53"},{"size":2844,"mtime":1641848715897,"results":"93","hashOfConfig":"53"},{"size":3132,"mtime":1641849194873,"results":"94","hashOfConfig":"53"},{"size":1044,"mtime":1641825982636,"results":"95","hashOfConfig":"53"},{"size":892,"mtime":1641588602537,"results":"96","hashOfConfig":"53"},{"size":925,"mtime":1641588531891,"results":"97","hashOfConfig":"53"},{"size":832,"mtime":1641588435673,"results":"98","hashOfConfig":"53"},{"size":1042,"mtime":1641588357737,"results":"99","hashOfConfig":"53"},{"size":1207,"mtime":1641588180702,"results":"100","hashOfConfig":"53"},{"size":1557,"mtime":1641588138140,"results":"101","hashOfConfig":"53"},{"size":78,"mtime":1641571038139,"results":"102","hashOfConfig":"53"},{"size":36315,"mtime":1642521562069,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":80,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":4,"fixableWarningCount":0,"source":null},"aor99g",{"filePath":"106","messages":"107","errorCount":20,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":31,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":44,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":2,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":23,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":1,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":12,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":22,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":3,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":15,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":17,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":17,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":1,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":24,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":5,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":13,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":2,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":10,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":12,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":1,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":7,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":11,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":15,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":3,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":45,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":36,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":8,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":3,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":25,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":7,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":10,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":4,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":1,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":53,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":2,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":36,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":16,"fixableWarningCount":0,"source":"244"},"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/converter/index.js",["245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330"],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/docs/index.js",["331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\n\nimport JADN_API from './jadn_api';\nimport {\n  Card_Template, Constructor_Template, Enum_Template, Function_Template, Toggle_Template, under_escape\n} from './templates';\n\n\nfunction mapStateToProps(state) {\n  return {\n    siteTitle: state.Util.site_title\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nclass Converter extends Component {\n  constructor(props) {\n    super(props);\n\n    const { siteTitle } = this.props;\n    this.meta = {\n      title: `${siteTitle} | API Docs`,\n      canonical: `${window.location.origin}${window.location.pathname}`\n    };\n  }\n\n  body_format(body) {\n    return Object.keys(body).map((n, i) => {\n      const data = body[n];\n\n      const dataConstructor = Object.hasOwnProperty(data, 'constructor') ? <Constructor_Template { ...data.constructor } /> : '';\n      const dataEnum = Object.hasOwnProperty(data, 'enum') ? <Enum_Template en={ data.enum } /> : '';\n      const dataFunction = Object.hasOwnProperty(data, 'function') ? <Function_Template fun={ data.function } /> : '';\n\n      const tmpData = {\n        ...data,\n        body: (\n          <div className=\"m-0 p-0 w-100\">\n            { dataConstructor }\n            { dataEnum }\n            { dataFunction }\n          </div>\n        )\n      };\n\n      return <Card_Template key={ i } { ...tmpData } />;\n    });\n  }\n\n  pkg_format(pkg, i) {\n    let bodyPkg = '';\n    let bodyEnum = '';\n    let bodyClass = '';\n    let bodyFunction = '';\n\n    if (pkg.hasOwnProperty('body')) {\n      if (pkg.body.hasOwnProperty('package')) {\n        bodyPkg = Object.keys(pkg.body.package).map((n, j) => {\n          const data = pkg.body.package[n];\n          data.header = n;\n          return this.pkg_format(data, j);\n        });\n      }\n\n      if (pkg.body.hasOwnProperty('enum')) {\n        bodyEnum = this.body_format(pkg.body.enum);\n      }\n\n      if (pkg.body.hasOwnProperty('class')) {\n        bodyClass = this.body_format(pkg.body.class);\n      }\n\n      if (pkg.body.hasOwnProperty('function')) {\n        bodyFunction = <Function_Template fun={ pkg.body.function } />;\n      }\n    }\n\n    const tmpPkg = {\n      ...pkg,\n      header: <Toggle_Template header={ pkg.header } />,\n      body: (\n        <div id={ `${under_escape(pkg.header)}-api` } className=\"row collapse px-2\">\n          { bodyPkg }\n          { bodyEnum }\n          { bodyClass }\n          { bodyFunction }\n        </div>\n      )\n    };\n\n    return <Card_Template key={ i } { ...tmpPkg } />;\n  }\n\n  render() {\n    const { canonical, title } = this.meta;\n    const api = Object.keys(JADN_API).map((pkg, i) => {\n      const data = JADN_API[pkg];\n\t\t\tdata.header = pkg;\n      return this.pkg_format(data, i);\n    });\n\n    return (\n      <div className='row mx-auto'>\n        <Helmet>\n          <title>{ title }</title>\n          <link rel=\"canonical\" href={ canonical } />\n        </Helmet>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1 className=\"text-center\">JADN</h1>\n            <p>\n              JSON Abstract Data Notation (JADN) is a language-neutral, platform-neutral, and format-neutral mechanism for serializing structured data. See\n              &nbsp;\n              <a href=\"docs/jadn-overview.md\">docs</a>\n              for information about the JADN language.\n            </p>\n          </div>\n          <div className=\"col-12\">\n            <h3>Python API</h3>\n            <p>\n              The JADN Python API (\n              <a href=\"jadn\">libs</a>\n              ) is for v1.0\n            </p>\n          </div>\n        </div>\n        <div id=\"api\" className=\"row p-3\">\n          { api }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Converter);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/docs/jadn_api.js",["353","354"],"const jadnApi = {\n\tjadn: {\n\t\ttitle: 'JADN Base',\n\t\ttext: [\n\t\t\t'Base JADN functions and objects'\n\t\t],\n\t\tbody: {\n\t\t\tenum: [\n\t\t\t\t{\n\t\t\t\t\theader: 'CommentLevels',\n\t\t\t\t\tenum: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'ALL',\n\t\t\t\t\t\t\tinfo: {\n\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t'Show all comment for conversion'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'NONE',\n\t\t\t\t\t\t\tinfo: {\n\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t'Show no comment for conversion'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\tfunction: [\n\t\t\t\t{\n\t\t\t\t\treturn: {\n\t\t\t\t\t\ttype: 'SET ME',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'SET ME'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\tdef: 'jadn_analyze(...)',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'SET ME'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\treturn: {\n\t\t\t\t\t\ttype: 'dict',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'JADN formatted dictionary'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\tdef: 'jadn_check(schema)',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'Validate JADN structure against JSON schema',\n    \t\t\t\t\t\t'Validate JADN structure against JADN schema',\n    \t\t\t\t\t\t'Perform additional checks on type definitions'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\treturn: {\n\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t},\n\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\tdef: 'jadn_dump(schema, fname, source, strip)',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'Convert a JADN schema to a JADN formatted string',\n\t\t\t\t\t\t\t'Write string to the given file'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\treturn: {\n\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'JADN string'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\tdef: 'jadn_dumps(schema, level, indent, strip, nlevel)',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'Convert a JADN schema to a JADN formatted string'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\treturn: {\n\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'JADN formatted string'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\tdef: 'jadn_format(schema)',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'Convert a JADN schema to a JADN formatted string'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\treturn: {\n\t\t\t\t\t\ttype: 'dict',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'JADN formatted dictionary'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\tdef: 'jadn_load(fname)',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'Load and check a jadn schema from a JADN file'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\treturn: {\n\t\t\t\t\t\ttype: 'dict',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'JADN formatted dictionary'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\tdef: 'jadn_loads(jadn_str)',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'Load and check a jadn schema from a JADN string'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\treturn: {\n\t\t\t\t\t\ttype: 'dict',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'JADN formatted dictionary'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\tdef: 'jadn_merge(base, imp, nsid)',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'Merge an imported schema into a base schema'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\treturn: {\n\t\t\t\t\t\ttype: 'dict',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'JADN formatted dictionary'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\tdef: 'jadn_strip(schema)',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'Strip comments from schema'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t'jadn.codec': {\n\t\ttitle: 'Validate messages against JADN schema, serialize and deserialize messages',\n\t\ttext: [\n\t\t\t'codec.py - Message encoder and decoder',\n\t\t\t'codec_format.py - Validation routines usable with the \\'format\\' option',\n\t\t\t'codec_utils.py - Utility routines used with the Codec class',\n\t\t\t'jadn-defs.py - Constant definitions for the JADN file format',\n\t\t\t'jadn.py - Load, validate, and save JADN schemas'\n\t\t],\n\t\tbody: {\n\t\t\tclass: [\n\t\t\t\t{\n\t\t\t\t\theader: 'Codec',\n\t\t\t\t\ttitle: 'Serialize (encode) and De-serialize (decode) values based on JADN syntax.',\n\t\t\t\t\tconstructor: {\n\t\t\t\t\t\tdef: 'Codec(schema, verbose_rec, verbose_str)',\n\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t'SET ME'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tfunction: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\ttype: 'SET ME',\n\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t'SET ME'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\tdef: 'decode(self, datatype, sval)',\n\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t'Decode serialized value into API value'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\ttype: 'SET ME',\n\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t'SET ME'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\tdef: 'encode(self, datatype, aval)',\n\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t'Encode API value into serialized value'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\ttype: 'SET ME',\n\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t'SET ME'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\tdef: 'set_mode(verbose_rec, verbose_str)',\n\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t'Encode API value into serialized value'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t'jadn.convert': {\n\t\ttitle: 'JADN conversion related functions',\n\t\ttext: [\n\t\t\t'Conversion classes, enums, and functions'\n\t\t],\n\t\tbody: {\n\t\t\tpackage: {\n\t\t\t\t'jadn.convert.message': {\n\t\t\t\t\ttitle: 'JADN Message related classes, enums, and functions',\n\t\t\t\t\tbody: {\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'jadn.convert.schema': {\n\t\t\t\t\ttitle: 'JADN Schema related classes, enums, and functions',\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tfunction: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'html_dump(jadn, fname, source, styles)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to HTML and write output to the specified file',\n\t\t\t\t\t\t\t\t\t\t'jadn - JADN formatted string, dictionary, file location',\n\t\t\t\t\t\t\t\t\t\t'fname - File location to write output',\n\t\t\t\t\t\t\t\t\t\t'source - Name of file being converted (optional)',\n\t\t\t\t\t\t\t\t\t\t'styles - file location of styles to use for HTML/PDF conversion (optional)'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'HTML string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'html_dumps(jadn, styles)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to HTML',\n\t\t\t\t\t\t\t\t\t\t'jadn - JADN formatted string, dictionary, file location',\n\t\t\t\t\t\t\t\t\t\t'styles - file location of styles to use for HTML/PDF conversion (optional)'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'md_dump(jadn, fname, source)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to MarkDown and write output to the specified file'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'MarkDown string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'md_dumps(jadn, styles)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to MarkDown'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'cddl_dump(jadn, fname, source, comm)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to CDDL and write output to the specified file'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'CDDL string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'cddl_dumps(jadn, comm)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to CDDL'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'cddl_load(cddl, fname, source)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given CDDL to JADN and write output to the specified file'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'JADN string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'cddl_loads(cddl)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given CDDL to JADN'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'jas_dump(jas, fname, source)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to JAS and write output to the specified file'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'JAS string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'jas_dumps(jas, comm)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to JAS'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'jas_load(jas, fname, source)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JAS to JADN and write output to the specified file'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'JADN string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'jas_loads(jas)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JAS to JADN'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'proto_dump(proto, fname, source)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to ProtoBuf3 and write output to the specified file'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'ProtoBuf3 string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'proto_dumps(proto, comm)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to ProtoBuf3'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'proto_load(proto, fname, source)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given ProtoBuf3 to JADN and write output to the specified file'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'JADN string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'proto_loads(proto)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given ProtoBuf3 to JADN'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'relax_dump(relax, fname, source)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to Relax-NG and write output to the specified file'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Relax-NG string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'relax_dumps(relax, comm)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to Relax-NG'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'relax_load(relax, fname, source)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given Relax-NG to JADN and write output to the specified file'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'JADN string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'relax_loads(relax)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given Relax-NG to JADN<'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'thrift_dump(thrift, fname, source)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to Thrift and write output to the specified file'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Thrift string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'thrift_dumps(thrift, comm)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given JADN to Thrift'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'void'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'thrift_load(thrift, fname, source)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given Thrift to JADN and write output to the specified file'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn: {\n\t\t\t\t\t\t\t\t\ttype: 'str',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'JADN string'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfun_desc: {\n\t\t\t\t\t\t\t\t\tdef: 'thrift_loads(thrift)',\n\t\t\t\t\t\t\t\t\tinfo: [\n\t\t\t\t\t\t\t\t\t\t'Convert the given Thrift to JADN'\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default jadnApi;","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/docs/templates.js",["355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386"],"import React from 'react';\nimport {\n  Button, Card, CardBody, CardHeader, CardText, CardTitle, Table\n} from 'reactstrap';\n\nexport const under_escape = val => val.replace(/\\./g, '_');\n\nconst JADN_Table = ({children=[]}={}) => (\n  <Table hover striped responsive size=\"sm\">\n    { children }\n  </Table>\n);\n\nexport const Toggle_Template = ({header=''}={}) => {\n  const escHeader = under_escape(header);\n  return (\n    <span>\n      { header }\n      <Button\n        className=\"float-right\"\n        color=\"info\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target={ `#${escHeader}-api` }\n        aria-expanded=\"false\"\n        aria-controls={ `${escHeader}-api` }\n      >\n        API\n      </Button>\n    </span>\n  );\n};\n\nexport const Card_Template = ({\n  id=null, header='', title=null, text=null, body=null\n}={}) => {\n  const cardArgs = {\n    id: '',\n    className: 'mb-3 w-100'\n  };\n  if (id != null) {\n    cardArgs.id = under_escape(id);\n    cardArgs.className += ' collapse';\n  }\n\n  return (\n    <Card { ...cardArgs } >\n      <CardHeader><h3>{ header }</h3></CardHeader>\n      <CardBody>\n        { title != null ? <CardTitle>{ title }</CardTitle> : '' }\n        { text != null ? text.map((t, i) => <CardText key={ i }>{ t }</CardText>) : '' }\n        { body != null ? body : '' }\n      </CardBody>\n    </Card>\n  );\n};\n\nexport const Constructor_Template = ({def='', info=null}={}) => {\n  return (\n    <div className=\"m-0 p-0 w-100\">\n      <h5 className=\"mt-4\">Constructor</h5>\n      <JADN_Table>\n        <thead>\n          <tr>\n            <th scope=\"col\">Constructor and Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <p><strong>{ def }</strong></p>\n              { info ? info.map((t, i) => <p key={ i }>{ t }</p>) : '' }\n            </td>\n          </tr>\n        </tbody>\n      </JADN_Table>\n    </div>\n  );\n};\n\nexport const Enum_Template = ({name='', en=null}={}) => {\n  return (\n    <div className=\"m-0 p-0 w-100\">\n      <h5 className=\"mt-4\">Enumeration</h5>\n      <JADN_Table>\n        <thead>\n          <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Value and Info</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            en.map((e, i) => (\n              <tr key={ i }>\n                <td>\n                  { e.name ? <p><strong>{ e.name }</strong></p> : '' }\n                </td>\n                <td>\n                  { e.info.value ? <p><strong>{ e.info.value }</strong></p> : '' }\n                  { e.info.info ? e.info.info.map((t, k) => <p key={ k }>{ t }</p>) : ''}\n                </td>\n              </tr>\n            ))\n          }\n        </tbody>\n      </JADN_Table>\n    </div>\n  );\n};\n\nexport const Function_Template = ({fun=null}={}) => {\n  return (\n    <div className=\"m-0 p-0 w-100\">\n      <h5 className=\"mt-4\">Functions</h5>\n      <JADN_Table>\n        <thead>\n          <tr>\n            <th scope=\"col\">Return type and Info</th>\n            <th scope=\"col\">Function and Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            fun.map((f, i) => (\n              <tr key={ i }>\n                <td>\n                  { f.return.type ? <p><strong>{ f.return.type }</strong></p> : '' }\n                  { f.return.info ? f.return.info.map((t, j) => <p key={ j }>{ t }</p>) : '' }\n                </td>\n                <td>\n                  <p><strong>{ f.fun_desc.def }</strong></p>\n                  { f.fun_desc.info ? f.fun_desc.info.map((t, k) => <p key={ k }>{ t }</p>) : '' }\n                </td>\n              </tr>\n            ))\n          }\n        </tbody>\n      </JADN_Table>\n    </div>\n  );\n};","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/index.js",["387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { toast } from 'react-toastify';\nimport JSONPretty from 'react-json-pretty';\nimport {\n  Button, ButtonGroup, Form, FormGroup, Input, FormText, Tooltip\n} from 'reactstrap';\n\nimport { Field, delMultiKey, setMultiKey } from './lib';\nimport {\n  escaped2cbor, hexify, loadURL, validURL\n} from '../../utils';\nimport JADNInput from '../../utils/jadn-editor';\nimport locale from '../../utils/jadn-editor/locale/en';\nimport * as ValidateActions from '../../../actions/validate';\nimport * as UtilActions from '../../../actions/util';\nimport * as GenActions from '../../../actions/generate';\n\n\nfunction mapStateToProps(state) {\n  return {\n    schemas: state.Generate.schemas,\n    loadedSchemas: state.Util.loaded.schemas || {},\n    validSchema: state.Validate.valid.schema || {},\n    selectedSchema: state.Generate.selectedSchema,\n    message: state.Generate.message,\n    siteTitle: state.Util.site_title\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    info: () => dispatch(GenActions.info()),\n    loadFile: (t, f) => dispatch(UtilActions.load(t, f)),\n    validateSchema: (s) => dispatch(ValidateActions.validateSchema(s)),\n    setSchema: (schema) => dispatch(GenActions.setSchema(schema))\n  };\n}\n\nclass Generate extends Component {\n  constructor(props) {\n    super(props);\n    this.fileChange = this.fileChange.bind(this);\n    this.optChange = this.optChange.bind(this);\n    this.selectChange = this.selectChange.bind(this);\n\n    this.state = {\n      command_record: '',\n      schema: {\n        schema: {\n          placeholder: 'Paste JADN schema here'\n        },\n        selected: 'empty',\n        decodeTypes: {\n          all: [],\n          exports: []\n        },\n        file: false,\n        url: false,\n        url_str: ''\n      },\n      message: {}\n    };\n\n    const { info, siteTitle } = this.props;\n    this.meta = {\n      title: `${siteTitle} | Creator-Message`,\n      canonical: `${window.location.origin}${window.location.pathname}`\n    };\n\n    info();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const propsUpdate = this.props !== nextProps;\n    const stateUpdate = this.state !== nextState;\n\n    const { schema } = this.state;\n    if (schema.schema !== nextState.schema.schema) {\n      const { setSchema } = this.props;\n      setSchema(nextState.schema.schema);\n      nextState.message = {};\n    }\n\n    return propsUpdate || stateUpdate;\n  }\n\n  makeID() {\n    console.log('Make ID');\n    this.setState(prevState => ({\n      message: {\n        ...prevState.message,\n        id: this.genUUID()\n      }\n    }));\n  }\n\n  validUUID(uuid) {\n    if (!uuid) {\n      return false;\n    }\n\n    const pattern = /[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}/;\n    return uuid.match(pattern);\n  }\n\n  genUUID() {\n    let d = new Date().getTime();\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n      const r = (d + Math.random()*16)%16 | 0;\n      d = Math.floor(d/16);\n      return (c === 'x' ? r : (r&0x3|0x8)).toString(16);\n    });\n  }\n\n  optChange(k, v) {\n    this.setState(prevState => {\n      const msg = prevState.message || {};\n      const keys = k.split('.');\n      if (keys.length > 1 && msg[keys[0]] && !msg[keys[0]][keys[1]]) {\n        delMultiKey(msg, keys[0]);\n      }\n\n      if (!['', ' ', null, undefined, [], {}].includes(v)) {\n        setMultiKey(msg, k, v);\n      } else {\n        delMultiKey(msg, k);\n      }\n\n      return {\n        message: msg\n      };\n    });\n  }\n\n  selectChange(e) {\n    const {id, value } = e.target;\n    const type = id.split('-')[0];\n    const updateArr = {\n      selected: value,\n      file: value === 'file',\n      url: value === 'url'\n    };\n\n    if (value === 'empty' && type === 'message') {\n      updateArr.format = '';\n      updateArr.decode = '';\n    }\n\n    this.setState(prevState => ({\n      [type]: {\n        ...prevState[type],\n        ...updateArr\n      }\n    }), () => {\n      const loaded = this.props[`loaded${type[0].toUpperCase()}${type.slice(1)}s`];\n      const { selected } = this.state[type];\n\n      if (!['', 'empty', null, 'file', 'url'].includes(selected)) {\n        const format = {};\n        if (type === 'message') {\n          format.format = selected.split('.')[1];\n        }\n\n        if (!Object.keys(loaded).includes(selected)) {\n          this.props.loadFile(`${type}s`, selected).then(() => {\n            this.setState(prevState => ({\n              [type]: {\n                ...prevState[type],\n                ...format,\n                [type]: this.props[`loaded${type[0].toUpperCase()}${type.slice(1)}s`][selected]\n              }\n            }));\n          });\n        }\n      } else {\n        this.setState(prevState => ({\n          [type]: {\n            ...prevState[type],\n            [type]: this.props[`loaded${type[0].toUpperCase()}${type.slice(1)}s`][value]\n          }\n        }));\n      }\n    });\n  }\n\n  fileChange(e) {\n    const { id, files } = e.target;\n    const prefix = id.split('-')[0];\n    const [ file ] = files;\n    const type = file.name.split('.')[1];\n    const fileReader = new FileReader();\n\n    fileReader.onload = (_fr, _ev) => {\n      let data = atob(fileReader.result.split(',')[1]);\n      try {\n        data = JSON.stringify(JSON.parse(data), null, 2);\n      } catch (_err) {\n        switch (type) {\n          case 'cbor':\n            data = escaped2cbor(hexify(data));\n            break;\n          // no default case\n        }\n      }\n\n      if (prefix === 'schema') {\n        try {\n          this.setState(prevState => ({\n            schema: {\n              ...prevState.schema,\n              schema: JSON.parse(data)\n            }\n          }));\n        } catch (_err) {\n          toast(<p>Schema cannot be loaded</p>, {type: toast.TYPE.WARNING});\n        }\n      } else if (prefix === 'message') {\n        this.setState(prevState => ({\n          message: {\n            ...prevState.message,\n            format: type === 'jadn' ? 'json' : type,\n            message: data\n          }\n        }));\n      }\n    };\n\n    fileReader.readAsDataURL(file);\n  }\n\n  loadURL(t) {\n    const { url_str } = this.state[t];\n\n    if (!validURL(url_str)) {\n      toast(<p>Invalid URL, cannot load from a non valid location</p>, {type: toast.TYPE.WARNING});\n      return;\n    }\n\n    const file = url_str.substring(url_str.lastIndexOf('/') + 1);\n    const fileExt = file.substring(file.lastIndexOf('.') + 1);\n\n    if (!['json', 'jadn'].includes(fileExt) && t === 'schema') {\n      toast(<p>This file cannot be loaded as a schema, only JADN/JSON files are valid</p>, {type: toast.TYPE.WARNING});\n      return;\n    }\n\n    loadURL(url_str).then((data) => {\n      this.setState(prevState => ({[t]: {...prevState[t], [t]: data.data, format: fileExt === 'jadn' ? 'json' : data.fileExt }}));\n    }).catch(_err => {\n      toast(<p>Invalid url, please check what you typed</p>, {type: toast.TYPE.WARNING});\n    });\n  }\n\n  verifySchema() {\n    const { schema } = this.state;\n    let schemaObj = schema.schema;\n    if (typeof(schema.schema) === 'string') {\n      try {\n        schemaObj = JSON.parse(schema);\n      } catch (err) {\n        toast(<p>{ err.message }</p>, {type: toast.TYPE.WARNING});\n        return;\n      }\n    }\n    const { validSchema, validateSchema } = this.props;\n    validateSchema(schemaObj).then(() => {\n      const { valid_bool, valid_msg } = validSchema;\n      toast(<p>{ valid_msg }</p>, {type: toast.TYPE[valid_bool ? 'INFO' : 'WARNING']});\n    });\n  }\n\n  cmdCreator(maxHeight) {\n    const { selectedSchema } = this.props;\n    const { command_record, message } = this.state;\n    const exportRecords = selectedSchema && selectedSchema.meta ? selectedSchema.meta.exports : [];\n    let recordDef = selectedSchema.hasOwnProperty('types') ? selectedSchema.types.filter(type => type[0] === command_record) : [];\n    recordDef = (recordDef.length === 1 ? recordDef[0] : []);\n    let commandFields = '';\n    if (recordDef.length > 1 && recordDef[recordDef.length - 2].length > 0) {\n      commandFields = (\n        <FormText color=\"muted\">\n          <b>Comment: </b>\n          { recordDef[recordDef.length - 2] }\n        </FormText>\n      );\n     }\n\n    let fieldDefs = '';\n    if (recordDef[recordDef.length - 1] === undefined) {\n      fieldDefs = (\n        <FormText color=\"muted\">\n          Command Fields will appear here after selecting a type\n          &nbsp;\n          { command_record }\n        </FormText>\n      );\n    } else {\n      fieldDefs = recordDef[recordDef.length - 1].map((def, i) => <Field key={ i } def={ def } optChange={ this.optChange } />);\n    }\n\n    return (\n      <div className='col-md-6'>\n        <ul className='nav nav-tabs'>\n          <li className='nav-item'>\n            <a className='nav-link active show' data-toggle='tab' href='#tab-creator'>Creator</a>\n          </li>\n          <li id='msg-tab' className='nav-item' >\n            <a className='nav-link' data-toggle='tab' href='#tab-message'>Message</a>\n          </li>\n        </ul>\n\n        <div className='tab-content'>\n          <div className='tab-pane fade active show' id='tab-creator'>\n            <div className='card col-12 p-0 mx-auto'>\n              <div className='card-header'>\n                <FormGroup className='col-md-6 p-0 m-0 float-left'>\n                  <Input type='select' name='command-list' id='command-list' className='form-control' default='' onChange={ e => { this.setState({'command_record': e.target.value, message: {}}); } }>\n                    <option value=''>Command Type</option>\n                    { exportRecords.map(rec => <option key={ rec } value={ rec }>{ rec }</option>) }\n                  </Input>\n                </FormGroup>\n                {/* <Button color='primary' className='float-right' onClick={ () => this.makeID() }>Generate ID</Button> */}\n              </div>\n\n              <Form id='command-fields' className='card-body' onSubmit={ () => { return false; } } style={{ height: `${maxHeight-25}px`, overflowY: 'scroll' }}>\n                { commandFields }\n                <div id=\"fieldDefs\">\n                  { fieldDefs }\n                </div>\n              </Form>\n            </div>\n          </div>\n\n          <div className='tab-pane fade position-relative' id='tab-message' style={{ height: `${maxHeight}px` }}>\n            <JSONPretty\n              id='message'\n              className='scroll-xl border'\n              style={{ minHeight: '2.5em' }}\n              json={ message }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  schema(maxHeight) {\n    const { schemas } = this.props;\n    const { schema, ver_tooltip } = this.state;\n    // list of options - <option value=\"{{ opt }}\">{{ opt }}</option>\n    const schemaOpts = schemas.map((s, i) => <option key={ i } value={ s }>{ s }</option>);\n\n    return (\n      <div className='col-md-6'>\n        <div id=\"schema-card\" className=\"tab-pane fade active show\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <ButtonGroup className=\"float-right\">\n                <Button outline color=\"secondary\" onClick={ () => this.verifySchema() } id=\"ver_tooltip\" >Verify</Button>\n                <Tooltip placement=\"bottom\" isOpen={ ver_tooltip } target=\"ver_tooltip\" toggle={ () => this.setState(prevState => ({ ver_tooltip: !prevState.ver_tooltip })) }>\n                  Validate the schema is valid prior to validating the message\n                </Tooltip>\n              </ButtonGroup>\n\n              <div className=\"col-sm-10 pl-0\">\n                <div className=\"form-group col-md-6 pr-0 pl-1 d-inline-block\">\n                  <select id=\"schema-list\" name=\"schema-list\" className=\"form-control\" default=\"empty\" onChange={ this.selectChange }>\n                    <option value=\"empty\">Schema</option>\n                    <optgroup label=\"Testers\">\n                      { schemaOpts }\n                    </optgroup>\n                    <optgroup label=\"Custom\">\n                      <option value=\"file\">File...</option>\n                      <option value=\"url\">URL...</option>\n                    </optgroup>\n                  </select>\n                </div>\n\n                <div id=\"schema-file-group\" className={ `form-group col-md-6 px-1${schema.file ? ' d-inline-block' : ' d-none'}` } >\n                  <input type=\"file\" className=\"btn btn-light form-control-file\" id=\"schema-file\" name=\"schema-file\" accept=\".jadn\" onChange={ this.fileChange } />\n                </div>\n\n                <div id=\"schema-url-group\" className={ `form-group col-md-6 px-1${schema.url ? ' d-inline-block' : ' d-none'}` }>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <Button color=\"info\" onClick={ () => this.loadURL('schema') }>Load URL</Button>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" default='' onChange={ e => this.setState(prevState => ({ schema: {...prevState.schema, url_str: e.target.value }})) } />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-control border card-body p-0\" style={{ height: `${maxHeight}px` }}>\n              <JADNInput\n                id='jadn_schema'\n                placeholder={ schema.schema }\n                onChange={\n                  val => {\n                    if (val.jsObject) {\n                      this.setState(prevState => ({ schema: {...prevState.schema, schema: val.jsObject }}));\n                    }\n                  }\n                }\n                theme='light_mitsuketa_tribute'\n                locale={ locale }\n                reset={ false }\n                height='100%'\n                width='100%'\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { canonical, title } = this.meta;\n    const maxHeight = window.innerHeight-225;\n\n    return (\n      <div className='row mx-auto'>\n        <Helmet>\n          <title>{ title }</title>\n          <link rel=\"canonical\" href={ canonical } />\n        </Helmet>\n        { this.schema(maxHeight) }\n        <div className='col-12 m-2 d-md-none' />\n        { this.cmdCreator(maxHeight) }\n        <div className='col-12' style={{ height: '1.25em' }} />\n        <div id='cmd-status' className='modal'>\n          <div className='modal-dialog h-100 d-flex flex-column justify-content-center my-0' role='document'>\n            <div className='modal-content'>\n              <div className='modal-header'>\n                <h5 className='modal-title'>\n                  Command:\n                  &nbsp;\n                  <span />\n                </h5>\n                <button type='button' className='close' data-dismiss='modal' aria-label='Close'>\n                  <span aria-hidden='true'>&times;</span>\n                </button>\n              </div>\n\n              <div className='modal-body'>\n                <p className='cmd-details'>\n                  <b>Details:</b>\n                  &nbsp;\n                  <span />\n                </p>\n                <p className='mb-1'>\n                  <b>Command:</b>\n                </p>\n                <pre className='border code command' />\n                <p className='mb-1'>\n                  <b>Responses:</b>\n                </p>\n                <div className='p-1 border border-primary responses' />\n              </div>\n\n              <div className='modal-footer'>\n                <button type='button' className='btn btn-secondary' data-dismiss='modal'>Close</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Generate);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/index.js",["435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormText } from 'reactstrap';\n\nimport BasicField from './types/basicField';\nimport EnumeratedField from './types/enumerated';\nimport ChoiceField from './types/choice';\nimport RecordField from './types/record';\nimport MapField from './types/map';\nimport ArrayOfField from './types/arrayOf';\n\n\nfunction mapStateToProps(state) {\n  return {\n    schema: state.Generate.selectedSchema\n  };\n}\n\nfunction mapDispatchToProps(_dispatch) {\n  return {};\n}\n\nclass Field extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const propsUpdate = this.props !== nextProps;\n    const stateUpdate = this.state !== nextState;\n    return propsUpdate || stateUpdate;\n  }\n\n  render() {\n    const {\n      def, idx, optChange, parent, schema\n    } = this.props;\n    const parentName = parent || '';\n    let typeDef = schema.types.filter(type => { return type[0] === def[2]; });\n    typeDef = typeDef.length === 1 ? typeDef[0] : [];\n\n\n    switch (typeDef[1]) {\n      case 'Enumerated':\n\t\t\t  return <EnumeratedField def={ def } parent={ parentName } optChange={ (k, v) => optChange(k, v, idx) } />;\n      case 'Choice':\n\t\t\t  return <ChoiceField def={ def } parent={ parentName } optChange={ (k, v) => optChange(k, v, idx) } />;\n      case 'Record':\n\t\t\t  return <RecordField def={ def } parent={ parentName } optChange={ (k, v) => optChange(k, v, idx) } />;\n\t\t\tcase 'Map':\n\t\t\t    return <MapField def={ def } parent={ parentName } optChange={ (k, v) => optChange(k, v, idx) } />;\n\t\t\tcase 'ArrayOf':\n\t\t\t    return <ArrayOfField def={ def } parent={ parentName } optChange={ (k, v) => optChange(k, v, idx) } />;\n\t\t\tcase 'Array':\n          const [ arr ] = def;\n\t\t\t    return <FormText>Array: { arr }</FormText>;\n\t\t\tdefault:\n\t\t\t    return <BasicField def={ def } parent={ parentName } optChange={ (k, v) => optChange(k, v, idx) } />;\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Field);\n\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/arrayOf.js",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, FormGroup, FormText } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusSquare, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\nimport Field from '..';\nimport { isOptional } from '../..';\n\nfunction mapStateToProps(state) {\n  return {\n    schema: state.Generate.selectedSchema,\n    baseTypes: state.Generate.types.base\n  };\n}\n\nfunction mapDispatchToProps(_dispatch) {\n  return {};\n}\n\nclass ArrayOfField extends Component {\n  constructor(props) {\n    super(props);\n    this.addOpt = this.addOpt.bind(this);\n    this.optChange = this.optChange.bind(this);\n    this.removeOpt = this.removeOpt.bind(this);\n    const { def, parent, schema } = this.props;\n\n    [ this.idx, this.name, this.type, this.args, this.comment ] = def;\n    this.opts = {};\n\n    this.typeDef = schema.types.filter((type) => { return type[0] === this.type; });\n    this.typeDef = this.typeDef.length === 1 ? this.typeDef[0] : [];\n    this.msgName = (parent ? [parent, this.name] : [this.name]).join('.');\n\n    this.state = {\n      min: false,\n      max: false,\n      count: 1,\n      opts: {}\n    };\n  }\n\n  opts2arr(opts) {\n    this.opts = {};\n    const jadnOpts = {\n      // Type Options\n      '=': 'compact',\n      '[': 'min',\n      ']': 'max',\n      '*': 'rtype',\n      '$': 'pattern',\n      '@': 'format'\n    };\n\n    opts.forEach(opt => {\n      const optChar = opt.charAt(0);\n      const optVal = opt.substr(1);\n\n      if (jadnOpts.hasOwnProperty(optChar)) {\n          this.opts[jadnOpts[optChar]] = optVal;\n      } else {\n        console.log('Unknown option', optChar);\n      }\n    });\n  }\n\n  addOpt(e) {\n    e.preventDefault();\n    const max = this.opts.hasOwnProperty('max') ? this.opts.max : 20;\n\n    this.setState(prevState => {\n      const maxBool = prevState.count < max;\n      return {\n        count: maxBool ? ++prevState.count : prevState.count,\n        max: !maxBool\n      };\n    }, () => {\n      const { optChange } = this.props;\n      const { opts } = this.state;\n      optChange(this.msgName, Array.from(new Set(Object.values(opts))));\n    });\n  }\n\n  removeOpt(e) {\n    e.preventDefault();\n    const min = this.opts.hasOwnProperty('min') ? this.opts.min : 0;\n\n    this.setState(prevState => {\n      const minBool = prevState.count > min;\n      const opts = prevState.opts;\n      if (minBool) {\n        delete opts[Math.max.apply(Math, Object.keys(opts))];\n      }\n\n      return {\n        count: minBool ? --prevState.count : prevState.count,\n        min: !minBool,\n        opts\n      };\n    }, () => {\n      const { optChange } = this.props;\n      const { opts } = this.state;\n      optChange(this.msgName, Array.from(new Set(Object.values(opts))));\n    });\n  }\n\n  optChange(k, v, i) {\n    this.setState(prevState => ({\n      opts: {\n        ...prevState.opts,\n        [i]: v\n      }\n    }), () => {\n      const { optChange } = this.props;\n      const { opts } = this.state;\n      optChange(this.msgName, Array.from(new Set(Object.values(opts))));\n    });\n  }\n\n  render() {\n    const { def, schema } = this.props;\n    const { count, max, min } = this.state;\n    this.opts2arr(this.typeDef[2]);\n\n    let arrDef = schema.types.filter(type => { return type[0] === this.opts.rtype; });\n    if (arrDef.length === 1) {\n      arrDef = arrDef[0];\n      arrDef = [0, arrDef[0].toLowerCase(), arrDef[0], [], arrDef[arrDef.length-2]];\n    } else {\n      arrDef = [0, arrDef[1], 'String', [], ''];\n    }\n\n    const fields = [];\n    for (let i=0; i < count; ++i) {\n        fields.push(<Field key={ i } def={ arrDef } parent={ this.msgName } optChange={ this.optChange } idx={ i } />);\n    }\n\n    return (\n      <FormGroup tag=\"fieldset\" className=\"border border-dark p-2\">\n        <legend>\n          { `${isOptional(def) ? '' : '*'}${this.name}` }\n          <Button\n            color=\"danger\"\n            className={ `float-right p-1${min ? ' disabled' : ''}` }\n            onClick={ this.removeOpt }\n          >\n            <FontAwesomeIcon icon={ faMinusSquare } size=\"lg\" />\n          </Button>\n          <Button\n            color=\"primary\"\n            className={ `float-right p-1${max ? ' disabled' : ''}` }\n            onClick={ this.addOpt }\n          >\n            <FontAwesomeIcon icon={ faPlusSquare } size=\"lg\" />\n          </Button>\n        </legend>\n        { this.comment !== '' ? <FormText color=\"muted\">{ this.comment }</FormText> : '' }\n        { fields }\n      </FormGroup>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArrayOfField);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/basicField.js",["485","486","487","488","489","490","491","492","493","494","495","496","497","498","499"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input, FormText } from 'reactstrap';\n\nimport Field from '..';\nimport { isOptional } from '../..';\n\nfunction mapStateToProps(state) {\n  return {\n    schema: state.Generate.selectedSchema\n  };\n}\n\nfunction mapDispatchToProps(_dispatch) {\n  return {};\n}\n\nclass BasicField extends Component {\n  inputOpts(type) {\n    switch (type) {\n      case 'duration':\n        return {\n          type: 'number',\n          placeholder: 0\n        };\n      case 'date-time':\n        return {\n          type: 'datetime',\n          placeholder: '2000-01-01T00:00:00-00:00'\n        };\n      default:\n        return {\n          type: 'text'\n        };\n    }\n  }\n\n  render() {\n    const {\n      arr, def, optChange, parent\n    } = this.props;\n    const [ _idx, name, type, _opts, comment ] = def;\n    const msgName = parent ? [parent, name] : [name];\n\n    if ( name >= 0) { // name is type if not field\n      return <Field def={ def } parent={ msgName.join('.') } optChange={ optChange } />;\n    }\n    const opts = this.inputOpts(type);\n    return (\n      <FormGroup tag=\"fieldset\" className=\"border border-dark p-2\">\n        <legend>{ `${isOptional(def) ? '' : '*'}${name}` }</legend>\n        <Input\n          type={ opts.type || 'text' }\n          placeholder={ opts.placeholder || '' }\n          name={ name }\n          onChange={ e => optChange(msgName.join('.'), e.target.value, arr) }\n        />\n        { comment !== '' ? <FormText color=\"muted\">{ comment }</FormText> : '' }\n      </FormGroup>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicField);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/choice.js",["500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input, FormText } from 'reactstrap';\n\nimport Field from '..';\nimport { isOptional } from '../..';\n\n\nfunction mapStateToProps(state) {\n  return {\n    schema: state.Generate.selectedSchema\n  };\n}\n\nfunction mapDispatchToProps(_dispatch) {\n  return {};\n}\n\nclass ChoiceField extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      selected: -1,\n      selectedBase: ''\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      selected: e.target.value\n    }, () => {\n      const { def, optChange } = this.props;\n      const { selected } = this.state;\n      if (selected === -1) {\n        optChange(def[1], undefined);\n      }\n    });\n  }\n\n  render() {\n    const {\n      def, optChange, parent, schema\n    } = this.props;\n    const { selected } = this.state;\n    const [_idx, name, _type, _args, comment] = def;\n    const msgName = (parent ? [parent, name] : [name]).join('.');\n    \n    let typeDef = schema.types.filter(t => t[0] === def[2]);\n    typeDef = typeDef.length === 1 ? typeDef[0] : [];\n    const defOpts = typeDef[typeDef.length-1].map(opt => <option key={ opt[0] } data-subtext={ opt[2] } value={ opt[0] }>{ opt[1] }</option>);\n\n    this.selectedDef = typeDef[typeDef.length-1].filter(opt => opt[0] === selected );\n    this.selectedDef = this.selectedDef.length === 1 ? this.selectedDef[0] : [];\n\n    return (\n      <FormGroup tag=\"fieldset\" className=\"border border-dark p-2\">\n        <legend>{ `${isOptional(def) ? '' : '*'}${name}` }</legend>\n        { comment !== '' ? <FormText color=\"muted\">{ comment }</FormText> : '' }\n        <div className=\"col-12 my-1 px-0\">\n          <Input type=\"select\" name={ name } title={ name } className=\"selectpicker\" onChange={ this.handleChange } default={ -1 }>\n            <option data-subtext={ `${name} options` } value={ -1 }>{ name } options</option>\n            { defOpts }\n          </Input>\n          <div className=\"col-12 py-2\">\n            {\n              this.state.selected >= 0 ? <Field def={ this.selectedDef } parent={ msgName } optChange={ optChange } /> : ''\n            }\n          </div>\n        </div>\n      </FormGroup>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChoiceField);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/enumerated.js",["527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, Input, FormText } from 'reactstrap';\nimport { isOptional } from '../..';\n\nfunction mapStateToProps(state) {\n  return {\n    schema: state.Generate.selectedSchema\n  };\n}\n\nfunction mapDispatchToProps(_dispatch) {\n  return {};\n}\n\nclass EnumeratedField extends Component {\n  render() {\n    const {\n      def, optChange, parent, schema\n    } = this.props;\n    const [_idx, name, _type, _args, comment] = def;\n    const msgName = (parent ? [parent, name] : [name]).join('.');\n\n    let typeDef = schema.types.filter(t => t[0] === def[2] );\n    typeDef = typeDef.length === 1 ? typeDef[0] : [];\n\n    const defOpts = typeDef[typeDef.length-1].map(opt => <option key={ opt[0] } data-subtext={ opt[2] }>{ opt[1] }</option>);\n\n    return (\n      <FormGroup tag=\"fieldset\" className=\"border border-dark p-2\">\n        <legend>{ `${isOptional(def) ? '' : '*'}${name}` }</legend>\n        { comment !== '' ? <FormText color=\"muted\">{ comment }</FormText> : '' }\n        <Input\n          type=\"select\"\n          name={ name }\n          title={ name }\n          className=\"selectpicker\"\n          onChange={ e => optChange(msgName, e.target.value) }\n        >\n          <option data-subtext={ `${name} options` } value='' >{ `${name} options` }</option>\n          { defOpts }\n        </Input>\n      </FormGroup>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnumeratedField);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/map.js",["546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, FormText } from 'reactstrap';\n\nimport Field from '..';\nimport { isOptional } from '../..';\n\n\nfunction mapStateToProps(state) {\n  return {\n    schema: state.Generate.selectedSchema\n  };\n}\n\nfunction mapDispatchToProps(_dispatch) {\n  return {};\n}\n\nclass MapField extends Component {\n  render() {\n    const {\n      def, optChange, parent, schema\n    } = this.props;\n    const [_idx, name, _type, _args, comment] = def;\n\n    let typeDef = schema.types.filter(t => t[0] === def[2]);\n    typeDef = typeDef.length === 1 ? typeDef[0] : [];\n\n    const msgName = (parent ? [parent, name] : [name]).join('.');\n\n    return (\n      <FormGroup tag=\"fieldset\" className=\"border border-dark p-2\">\n        <legend>{ `${isOptional(def) ? '' : '*'}${name}` }</legend>\n        { comment !== '' ? <FormText color=\"muted\">{ comment }</FormText> : '' }\n        <div className=\"col-12 my-1 px-0\">\n          {\n            typeDef[typeDef.length - 1].map((d, i) => <Field key={ i } def={ d } parent={ msgName } optChange={ optChange } />)\n          }\n        </div>\n      </FormGroup>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapField);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/field/types/record.js",["567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormGroup, FormText } from 'reactstrap';\n\nimport Field from '..';\nimport { isOptional } from '../..';\n\n\nfunction mapStateToProps(state) {\n  return {\n    schema: state.Generate.selectedSchema\n  };\n}\n\nfunction mapDispatchToProps(_dispatch) {\n  return {};\n}\n\nclass RecordField extends Component {\n  render() {\n    const {\n      def, optChange, parent, schema\n    } = this.props;\n    const [_idx, name, _type, _args, comment] = def;\n\n    let typeDef = schema.types.filter(t => t[0] === def[2]);\n    typeDef = typeDef.length === 1 ? typeDef[0] : [];\n\n    const msgName = (parent ? [parent, name] : [name]).join('.');\n\n    return (\n      <FormGroup tag=\"fieldset\" className=\"border border-dark p-2\">\n        <legend>{ `${isOptional(def) ? '' : '*'}${name}` }</legend>\n        { comment !== '' ? <FormText color=\"muted\">{ comment }</FormText> : '' }\n        <div className=\"col-12 my-1 px-0\">\n          {\n            typeDef[typeDef.length - 1].map((d, i) => <Field key={ i } def={ d } parent={ msgName } optChange={ optChange } />)\n          }\n        </div>\n      </FormGroup>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordField);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/index.js",["588"],"import Field from './field';\nimport { isOptional } from './utils';\nimport { delMultiKey, getMultiKey, setMultiKey } from '../../../utils';\n\nexport {\n  Field,\n  delMultiKey,\n  getMultiKey,\n  isOptional,\n  setMultiKey\n};\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/command/lib/utils.js",["589","590","591","592"],"export const isOptional = def => {\n  switch (def.length) {\n    case 5:\n      return def[3].indexOf('[0') >= 0;\n\t\tcase 4:\n\t\t  return def[2].indexOf('[0') >= 0;\n\t\tdefault:\n\t\t  console.log(`default optional - ${def[0]} - ${def[1]}`);\n\t\t\treturn false;\n\t}\n};\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/index.js",[],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/index.js",["593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileDownload, faFileUpload } from '@fortawesome/free-solid-svg-icons';\nimport {\n  ListGroup, ListGroupItem,  Nav, NavItem, NavLink, TabContent, TabPane, Tooltip\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport { Draggable, Droppable } from 'react-drag-and-drop';\n\nimport SchemaStructure from './lib/structure';\nimport { FormatJADN } from '../../utils';\nimport JADNInput from '../../utils/jadn-editor';\nimport locale from '../../utils/jadn-editor/locale/en';\n\nimport * as GenActions from '../../../actions/generate';\nimport * as ValidateActions from '../../../actions/validate';\nimport * as UtilActions from '../../../actions/util';\n\n\nfunction mapStateToProps(state) {\n  return {\n    schemas: state.Generate.schemas,\n    loadedSchemas: state.Util.loaded.schemas || {},\n    validSchema: state.Validate.valid.schema || {},\n    selectedSchema: state.Generate.selectedSchema,\n    message: state.Generate.message,\n    siteTitle: state.Util.site_title\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    info: () => dispatch(GenActions.info()),\n    loadFile: (t, f) => dispatch(UtilActions.load(t, f)),\n    validateSchema: (s) => dispatch(ValidateActions.validateSchema(s)),\n    setSchema: (schema) => dispatch(GenActions.setSchema(schema))\n  };\n}\n\nclass Generate extends Component {\n  constructor(props) {\n    super(props);\n    this.downloadConfig = this.downloadConfig.bind(this);\n    this.loadSchema = this.loadSchema.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n\n    this.state = {\n      download_tooltip: false,\n      upload_tooltip: false,\n      schema: {},\n      activeOption: 'meta',\n      activeView: 'editor',\n      download: {\n        content: `data:application/json;charset=utf-8,${encodeURIComponent(JSON.stringify({error: 'No Schema Defined'}))}`,\n        file: 'schema.jadn'\n      }\n    };\n\n    this.keys = SchemaStructure;\n    this.schemaInput = null;\n    this.schemaDownload = null;\n\n    const { info, siteTitle } = this.props;\n    this.meta = {\n        title: `${siteTitle} | Creator-Schema`,\n        canonical: `${window.location.origin}${window.location.pathname}`\n    };\n\n    info();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const propsUpdate = this.props !== nextProps;\n    const stateUpdate = this.state !== nextState;\n    return propsUpdate || stateUpdate;\n  }\n\n  onDrop(data) {\n    const { schema } = this.state;\n    if (data.meta) {\n      if (!(data.meta in (schema.meta || {}))) {\n        this.setState(prevState => ({\n          schema: {\n            ...prevState.schema,\n            meta: {\n              ...prevState.schema.meta || {},\n              ...this.keys.meta[data.meta].edit()\n            }\n          }\n        }));\n      }\n    } else if (data.types) {\n      this.setState(prevState => {\n        const tmpTypes = prevState.schema.types || [];\n        const tmpDef = this.keys.types[data.types].edit();\n        if ((tmpTypes.filter(d => d[0] === tmpDef[0]) || []).length === 0) {\n            tmpTypes.push(tmpDef);\n        }\n        return {\n          schema: {\n            ...prevState.schema,\n            types: tmpTypes\n          }\n        };\n      });\n    } else {\n      console.log('oops...');\n    }\n  }\n\n  schemaEditor() {\n    const { schema } = this.state;\n    let metaEditors = Object.keys(schema.meta || {}).map((k, i) => {\n      return this.keys.meta[k].editor({\n        key: i,\n        value: schema.meta[k],\n        placeholder: k,\n        change: val => this.setState(prevState => ({\n          schema: {\n            ...prevState.schema,\n            meta: {\n              ...prevState.schema.meta,\n              ...this.keys.meta[k].edit(val)\n            }\n          }\n        })),\n        remove: id => {\n          if (id in schema.meta) {\n            this.setState(prevState => {\n              const tmpMeta = { ...prevState.schema.meta };\n              delete tmpMeta[id];\n              return {\n                schema: {\n                  ...prevState.schema,\n                  meta: tmpMeta\n                }\n              };\n            });\n          }\n        }\n      });\n    });\n\n    let typesEditors = (schema.types || []).map((def, i) => {\n      let type = def[1].toLowerCase();\n\n      return this.keys.types[type].editor({\n        key: i,\n        value: def,\n        dataIndex: i,\n        change: (val, idx) => this.setState(prevState => {\n          let tmpTypes = [ ...prevState.schema.types ];\n          tmpTypes[idx] = this.keys.types[val.type.toLowerCase()].edit(val);\n          return {\n            schema: {\n              ...prevState.schema,\n              types: tmpTypes\n            }\n          };\n        }),\n        remove: idx => {\n          if (schema.types.length >= idx) {\n            this.setState(prevState => {\n              const tmpTypes = [ ...prevState.schema.types ];\n              tmpTypes.splice(idx, 1);\n              return {\n                schema: {\n                  ...prevState.schema,\n                  types: tmpTypes\n                }\n              };\n            });\n          }\n        }\n      });\n    });\n\n    return (\n      <div>\n        <div className='col-12'>\n          <h2>Meta</h2>\n          { metaEditors }\n        </div>\n        <hr />\n        <div className='col-12'>\n          <h2>Types</h2>\n          { typesEditors }\n        </div>\n      </div>\n    );\n  }\n\n  downloadConfig(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      download: {\n        ...prevState.download,\n        content: `data:application/json;charset=utf-8,${encodeURIComponent(FormatJADN(prevState.schema))}`\n      }\n    }), () => {\n      this.schemaDownload.click();\n    });\n  }\n\n  loadSchema(e) {\n    const file = e.target.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onload = (_rf, _ev) => {\n      const data = atob(fileReader.result.split(',')[1]);\n      try {\n        this.setState({\n          schema: JSON.parse(data)\n        });\n      } catch (err) {\n        toast(<p>Schema cannot be loaded</p>, {type: toast.TYPE.WARNING});\n        console.log(err);\n        return;\n      }\n    };\n\n    fileReader.readAsDataURL(file);\n  }\n\n  toggleOptions(opt) {\n    const { activeOption } = this.state;\n    if (activeOption !== opt) {\n      this.setState({\n        activeOption: opt\n      });\n    }\n  }\n\n  toggleViews(view) {\n    const { activeView } = this.state;\n    if (activeView !== view) {\n      this.setState({\n        activeView: view\n      });\n    }\n  }\n\n  render() {\n    const {\n      activeOption, activeView, download, download_tooltip, schema, upload_tooltip\n    } = this.state;\n    const { canonical, title } = this.meta;\n    const metaKeys = Object.keys(this.keys.meta).map((k, i) => (\n      <Draggable type=\"meta\" data={ k } key={ i }>\n        <ListGroupItem action>{ this.keys.meta[k].key }</ListGroupItem>\n      </Draggable>\n    ));\n    const typesKeys = Object.keys(this.keys.types).map((k, i) => (\n      <Draggable type=\"types\" data={ k } key={ i }>\n        <ListGroupItem action>{ this.keys.types[k].key }</ListGroupItem>\n      </Draggable>\n    ));\n\n    return (\n      <div className='row mx-auto'>\n        <Helmet>\n          <title>{ title }</title>\n          <link rel=\"canonical\" href={ canonical } />\n        </Helmet>\n        <div id='schema-options' className='col-md-2'>\n          <Nav tabs>\n            <NavItem>\n              <NavLink\n                className={ classnames({ active: activeOption === 'meta' }) }\n                onClick={ () => this.toggleOptions('meta') }\n              >\n                Meta\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={ classnames({ active: activeOption === 'types' }) }\n                onClick={ () => this.toggleOptions('types') }\n              >\n                Types\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={ activeOption }>\n            <TabPane tabId='meta'>\n              <ListGroup>\n                { metaKeys }\n              </ListGroup>\n            </TabPane>\n            <TabPane tabId='types'>\n              <ListGroup>\n                { typesKeys }\n              </ListGroup>\n            </TabPane>\n          </TabContent>\n          <div className='col-12 m-2' />\n          <div className='btn-group btn-group-sm'>\n            <a id='upload_tooltip' className=\"btn btn-primary\" onClick={ () => this.schemaInput.click() }>\n              <FontAwesomeIcon icon={ faFileUpload } color=\"white\" size='2x' />\n              <input\n                type='file'\n                className='d-none'\n                ref={ input => this.schemaInput = input }\n                accept=\".jadn\"\n                onChange={ this.loadSchema }\n              />\n            </a>\n            <a className='d-none' href={ download.content } download={ download.file } target=\"_blank\" rel=\"noreferrer\" ref={ input => this.schemaDownload = input } />\n            <a id='download_tooltip' className=\"btn btn-primary\" onClick={ this.downloadConfig }>\n              <FontAwesomeIcon icon={ faFileDownload } color=\"white\" size='2x' />\n            </a>\n          </div>\n          <Tooltip placement=\"bottom\" isOpen={ upload_tooltip } target=\"upload_tooltip\" toggle={ () => this.setState(prevState => ({ upload_tooltip: !prevState.upload_tooltip })) }>\n            Upload JADN Schema\n          </Tooltip>\n          <Tooltip placement=\"bottom\" isOpen={ download_tooltip } target=\"download_tooltip\" toggle={ () => this.setState(prevState => ({ download_tooltip: !prevState.download_tooltip })) }>\n            Download converted schema\n          </Tooltip>\n        </div>\n        <div id='schema-view' className='col-md-10'>\n          <Nav tabs>\n            <NavItem>\n              <NavLink\n                className={ classnames({ active: activeView === 'editor' }) }\n                onClick={ () => this.toggleViews('editor') }\n              >\n                Editor\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={ classnames({ active: activeView === 'jadn' }) }\n                onClick={ () => this.toggleViews('jadn') }\n              >\n                JADN\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <Droppable\n            types={ ['meta', 'types'] } // <= allowed drop types\n            onDrop={ this.onDrop }\n            className='border col-12 p-0'\n            style={{\n              minHeight: '20em'\n            }}\n          >\n            <TabContent activeTab={ activeView }>\n              <TabPane tabId='editor'>\n                { this.schemaEditor() }\n              </TabPane>\n              <TabPane tabId='jadn'>\n                <div className=\"form-control m-0 p-0\" style={{ minHeight: '20em' }}>\n                  <JADNInput\n                    id='jadn_schema'\n                    placeholder={ schema }\n                    onChange={\n                      val => {\n                        if (val.jsObject) {\n                          this.setState({ schema: val.jsObject });\n                        }\n                      }\n                    }\n                    theme='light_mitsuketa_tribute'\n                    locale={ locale }\n                    // reset\n                    height='100%'\n                    width='100%'\n                    viewOnly\n                    // waitAfterKeyPress={ 500 }\n                  />\n                </div>\n              </TabPane>\n            </TabContent>\n          </Droppable>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Generate);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/field.js",["621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637"],"import React from 'react';\nimport {\n  Button, ButtonGroup, FormGroup, Input, Label\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\n\nexport const StandardField = {\n  id: 1,\n  name: 'name',\n  type: '',\n  options: [],\n  comment: ''\n};\n\nexport const EnumeratedField = {\n  id: 1,\n  value: 'value',\n  comment: ''\n};\n\n// Field Editor\nconst FieldEditor = props => {\n  const {\n    dataIndex, enumerated, remove, value\n  } = props;\n  const values = {};\n\n  if (value && typeof(value) === 'object') {\n    values.id = value[0] || 0;\n\n    if (enumerated) {\n      values.value = value[1] || '';\n      values.comment = value[2] || '';\n    } else {\n      values.name = value[1] || '';\n      values.type = value[2] || '';\n      values.options = value[3] || [];\n      values.comment = value[4] || '';\n    }\n  }\n\n  let removeAll = e => remove(dataIndex);\n\n  let onChange = e => {\n    const { change } = props;\n    const { placeholder, value } = e.target;\n    const key = placeholder.toLowerCase();\n    let val = value;\n    if (key === 'options') {\n      val = value.split(/,\\s+?/);\n    }\n\n    values[key] = value;\n    if (change) {\n      const tmpVals = Object.values(values);\n      tmpVals[0] = Number(tmpVals[0]);\n      change(tmpVals, dataIndex);\n    }\n  };\n\n  return (\n    <div className='col-sm-12 border m-1 p-1'>\n      <ButtonGroup size='sm' className='float-right'>\n        <Button color='danger' onClick={ removeAll } >\n          <FontAwesomeIcon icon={ faMinusCircle } />\n        </Button>\n      </ButtonGroup>\n      <div className='border-bottom mb-2'>\n        <p className='col-sm-4 my-1'><strong>{ enumerated ? values.value : values.name }</strong></p>\n      </div>\n      <div className='row m-0'>\n        <FormGroup className={ enumerated ? 'col-md-4' : 'col-md-3' }>\n          <Label>ID</Label>\n          <Input type='string' placeholder='ID' value={ values.id } onChange={ onChange } />\n        </FormGroup>\n        {\n          enumerated ? (\n            <FormGroup className='col-md-4'>\n              <Label>Value</Label>\n              <Input type='string' placeholder='Value' value={ values.value } onChange={ onChange } />\n            </FormGroup>\n          ) : (\n            <div className='col-md-9 p-0 m-0'>\n              <FormGroup className='col-md-4 d-inline-block'>\n                <Label>Name</Label>\n                <Input type='string' placeholder='Name' value={ values.name } onChange={ onChange } />\n              </FormGroup>\n              <FormGroup className='col-md-4 d-inline-block'>\n                <Label>Type</Label>\n                <Input type='string' placeholder='Type' value={ values.type } onChange={ onChange } />\n              </FormGroup>\n              <FormGroup className='col-md-4 d-inline-block'>\n                <Label>Options</Label>\n                <Input type='string' placeholder='Options' value={ values.options.join(', ') } onChange={ onChange } />\n              </FormGroup>\n            </div>\n          )\n        }\n        <FormGroup className={ enumerated ? 'col-md-4' : 'col-md-12' }>\n          <Label>Comment</Label>\n          <Input type='textarea' placeholder='Comment' rows={ 1 } value={ values.comment } onChange={ onChange } />\n        </FormGroup>\n      </div>\n    </div>\n  );\n};\n\nFieldEditor.defaultProps = {\n  enumerated: false,\n  dataIndex: -1,\n  values: [],\n  change: (vals, idx) => {\n    console.log(vals, idx);\n  },\n  remove: idx => {\n    console.log(idx);\n  }\n};\n\nexport default FieldEditor;","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/index.js",[],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/key_array.js",["638","639","640","641","642","643","644","645","646","647","648","649","650"],"import React from 'react';\nimport { Button, ButtonGroup, Input } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusCircle, faMinusSquare, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\n// Key Array Editor\nconst KeyArrayEditor = (props) => {\n  const {\n    change, id, placeholder, remove, value\n  } = props;\n\n  const removeAll = _e => remove(id.toLowerCase());\n\n  const removeIndex = e => {\n    if (value.length > 1) {\n      const index = e.currentTarget.attributes.getNamedItem('data-index').value;\n      const tmpValues = [ ...value ];\n      tmpValues.splice(index, 1);\n      change(tmpValues);\n    }\n  };\n\n  const addIndex = () => change([ ...value, '' ]);\n\n  const onChange = e => {\n    const { attributes } = e.target;\n    const index = attributes.getNamedItem('data-index').value;\n    const tmpValues = [ ...value ];\n    tmpValues[index] = e.target.value;\n    change(tmpValues);\n  };\n\n  const indices = value.map((arr, i) => (\n    <div className=\"input-group col-sm-12 mb-1\" key={ i }>\n      <Input\n        type=\"text\"\n        className=\"form-control\"\n        data-index={ i }\n        placeholder={ placeholder }\n        value={ arr }\n        onChange={ onChange }\n      />\n      <div className=\"input-group-append\">\n        <Button color='danger' onClick={ removeIndex } data-index={ i }>\n          <FontAwesomeIcon icon={ faMinusSquare } />\n        </Button>\n      </div>\n    </div>\n  ));\n\n  return (\n    <div className='border m-1 p-1'>\n      <ButtonGroup size='sm' className='float-right'>\n        <Button color='info' onClick={ addIndex } >\n          <FontAwesomeIcon icon={ faPlusSquare } />\n        </Button>\n        <Button color='danger' onClick={ removeAll } >\n          <FontAwesomeIcon icon={ faMinusCircle } />\n        </Button>\n      </ButtonGroup>\n      <div className='border-bottom mb-2'>\n        <p className='col-sm-4 my-1'><strong>{ id }</strong></p>\n      </div>\n      <div className='row m-0 indices'>\n        { indices }\n      </div>\n    </div>\n  );\n};\n\nKeyArrayEditor.defaultProps = {\n  id: 'KeyValueEditor',\n  placeholder: 'KeyValueEditor',\n  value: {},\n  change: (val) => {\n    console.log(val);\n  },\n  remove: (id) => {\n    console.log(id);\n  }\n};\n\nexport default KeyArrayEditor;\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/key_object.js",["651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667"],"import React from 'react';\nimport { Button, ButtonGroup, Input } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusCircle, faMinusSquare, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\n// Key Object Editor\nconst KeyObjectEditor = (props) => {\n  const {\n    change, id, remove, placeholder, value\n  } = props;\n\n  const removeAll = e => remove(id.toLowerCase());\n\n  const removeIndex = e => {\n    if (value.length > 1) {\n      console.log('WHOOT');\n      const { attributes } = e.target;\n      const index = attributes.getNamedItem('data-index').value.split(',')[0];\n      const tmpValue = [ ...value ];\n      tmpValue.splice(index, 1);\n      change(tmpValue);\n    } else {\n      console.log('cant remove');\n    }\n  };\n\n  const addIndex = () => {\n    const tmpValue = [ ...value ];\n    tmpValue.push(['', '']);\n    change(tmpValue);\n  };\n\n  const onChange = e => {\n    const { attributes } = e.target;\n    const index = attributes.getNamedItem('data-index').value.split(',');\n\n    let tmpValue = [ ...value ];\n    if (!tmpValue[index[0]]) {\n      tmpValue[index[0]] = ['', ''];\n    }\n    tmpValue[index[0]][index[1]] = e.target.value;\n    change(tmpValue);\n  };\n\n  const indices = value.map((obj, i) => (\n    <div className=\"input-group col-sm-12 mb-1\" key={ i }>\n      <Input\n        type=\"text\"\n        className=\"form-control\"\n        data-index={ [i, 0] }\n        placeholder={ placeholder }\n        value={ obj[0] || '' }\n        onChange={ onChange }\n      />\n      <Input\n        type=\"text\"\n        className=\"form-control\"\n        data-index={ [i, 1] }\n        placeholder={ placeholder }\n        value={ obj[1] || '' }\n        onChange={ onChange }\n      />\n      <div className=\"input-group-append\">\n        <Button color='danger' onClick={ removeIndex } data-index={ i }>\n          <FontAwesomeIcon icon={ faMinusSquare } />\n        </Button>\n      </div>\n    </div>\n  ));\n\n  return (\n    <div className='border m-1 p-1'>\n      <ButtonGroup size='sm' className='float-right'>\n        <Button color='info' onClick={ addIndex } >\n          <FontAwesomeIcon icon={ faPlusSquare } />\n        </Button>\n        <Button color='danger' onClick={ removeAll } >\n          <FontAwesomeIcon icon={ faMinusCircle } />\n        </Button>\n      </ButtonGroup>\n      <div className='border-bottom mb-2'>\n        <p className='col-sm-4 my-1'><strong>{ id }</strong></p>\n      </div>\n      <div className='row m-0 indices'>\n        { indices }\n      </div>\n    </div>\n  );\n};\n\nKeyObjectEditor.defaultProps = {\n  id: 'KeyObjectEditor',\n  placeholder: 'KeyObjectEditor',\n  value: [],\n  change: val => {\n    console.log(val);\n  },\n  remove: id => {\n    console.log(id);\n  }\n};\n\nexport default KeyObjectEditor;\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/key_value.js",["668","669","670","671","672","673","674","675","676"],"import React from 'react';\nimport {\n  Button, FormGroup, Input, Label\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusSquare } from '@fortawesome/free-solid-svg-icons';\n\n// Key Value Editor\nconst KeyValueEditor = (props) => {\n  const {\n    change, id, placeholder, remove, value\n  } = props;\n  return (\n    <FormGroup row className='border m-1 p-1'>\n      <Label for={ `editor-${id}` } sm={ 2 } ><strong>{ id }</strong></Label>\n      <div className=\"input-group col-sm-10\">\n        <Input\n          type=\"text\"\n          id={ `editor-${id}` }\n          className=\"form-control\"\n          placeholder={ placeholder }\n          value={ value }\n          onChange={ e => change(e.target.value) }\n        />\n        <div className=\"input-group-append\">\n          <Button color='danger' onClick={ () => remove(id.toLowerCase()) }>\n            <FontAwesomeIcon icon={ faMinusSquare } />\n          </Button>\n        </div>\n      </div>\n    </FormGroup>\n  );\n};\n\nKeyValueEditor.defaultProps = {\n  id: 'KeyValueEditor',\n  placeholder: 'KeyValueEditor',\n  value: '',\n  change: val => {\n    console.log(val);\n  },\n  remove: id => {\n    console.log(id);\n  }\n};\n\nexport default KeyValueEditor;","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/primitive.js",["677","678","679","680","681","682","683","684","685","686","687","688","689","690"],"import React from 'react';\nimport {\n  Button, ButtonGroup, FormGroup, Input, Label\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\n\n// Primitive Editor\nconst PrimitiveEditor = (props) => {\n  const {\n    change, dataIndex, value, remove\n  } = props;\n  let values = {};\n\n  if (value && typeof(value) === 'object') {\n    const [ name, type, options, comment ] = value;\n    values = {\n      name: name || '',\n      type: type || '',\n      options: options || [],\n      comment: comment || ''\n    };\n  }\n\n  const removeAll = e => remove(dataIndex);\n\n  const onChange = e => {\n    const key = e.target.placeholder.toLowerCase();\n    const value = e.target.value;\n    if (key === 'options') {\n      value = value.split(/,\\s+?/);\n    }\n\n    values[key] = value;\n    change(values, dataIndex);\n  };\n\n  return (\n    <div className='border m-1 p-1'>\n      <ButtonGroup size='sm' className='float-right'>\n        <Button color='danger' onClick={ removeAll } >\n          <FontAwesomeIcon icon={ faMinusCircle } />\n        </Button>\n      </ButtonGroup>\n      <div className='border-bottom mb-2'>\n        <h3 className='col-sm-10 my-1'>\n          { values.type }\n          &nsbp;-&nsbp;\n          { values.name }\n        </h3>\n      </div>\n      <div className='row m-0'>\n        <FormGroup className='col-md-4'>\n          <Label>Name</Label>\n          <Input type=\"string\" placeholder=\"Name\" value={ values.name } onChange={ onChange } />\n        </FormGroup>\n        <FormGroup className='col-md-4'>\n          <Label>Options</Label>\n          <Input type=\"string\" placeholder=\"Options\" value={ values.options.join(', ') } onChange={ onChange } />\n        </FormGroup>\n        <FormGroup className='col-md-4'>\n          <Label>Comment</Label>\n          <Input type=\"textarea\" placeholder=\"Comment\" rows={ 1 } value={ values.comment } onChange={ onChange } />\n        </FormGroup>\n      </div>\n    </div>\n  );\n};\n\nPrimitiveEditor.defaultProps = {\n  dataIndex: -1,\n  values: {\n    name: 'name',\n    type: 'type',\n    options: [],\n    comment: ''\n  },\n  change: (vals, idx) => {\n    console.log(vals, idx);\n  },\n  remove: idx => {\n    console.log(idx);\n  }\n};\n\nexport default PrimitiveEditor;\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/editors/structure.js",["691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711"],"import React, { Component } from 'react';\nimport {\n  Button, ButtonGroup, Collapse, FormGroup, Input, Label\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus, faMinusCircle, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport FieldEditor, { StandardField, EnumeratedField } from './field';\n\n// Structure Editor\nclass StructureEditor extends Component {\n  fieldStyles = {\n    maxHeight: '20em',\n    overflowY: 'scroll'\n  }\n\n  constructor(props) {\n    super(props);\n    this.addField = this.addField.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.removeAll = this.removeAll.bind(this);\n    this.toggleFields = this.toggleFields.bind(this);\n\n    this.state = {\n      fieldCollapse: false,\n      values: {\n        name: '',\n        type: '',\n        options: [],\n        comment: '',\n        fields: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.initState();\n  }\n\n  onChange(e) {\n    const { placeholder, value } = e.target;\n    const key = placeholder.toLowerCase();\n    let val = value;\n    if (key === 'options') {\n      val = value.split(/,\\s+?/);\n    }\n\n    this.setState(prevState => ({\n      values: {\n        ...prevState.values,\n        [key]: val\n      }\n    }), () => {\n      const { change, dataIndex } = this.props;\n      const { values } = this.state;\n      if (change) {\n        change(values, dataIndex);\n      }\n    });\n  }\n\n  initState() {\n    const { value } = this.props;\n    const { values } = this.state;\n    if (value && typeof(value) === 'object') {\n      const [ name, type, options, comments, fields ] = value;\n      const updateValues = {};\n      if (name !== values.name) updateValues.name = name;\n      if (type !== values.type) updateValues.type = type;\n      if (options !== values.options) updateValues.options = options;\n      if (comments !== values.comment) updateValues.comment = comments;\n      if (fields !== values.fields) updateValues.fields = fields;\n\n      if (Object.keys(updateValues).length > 0) {\n        this.setState(prevState => ({\n          values: {\n            ...prevState.values,\n            ...updateValues\n          }\n        }));\n      }\n    }\n  }\n\n  removeAll(_e) {\n    const { dataIndex, remove } = this.props;\n    remove(dataIndex);\n  }\n\n  addField() {\n    const { change, dataIndex } = this.props;\n    const { values } = this.state;\n    console.log('Add Field', values.type);\n    const field = Object.values(((values.type.toLowerCase() === 'enumerated') ? EnumeratedField : StandardField));\n    console.log(field);\n\n    this.setState(prevState => {\n      const tmpFields = [ ...prevState.values.fields, field ];\n      console.log(tmpFields);\n      return {\n        fieldCollapse: true,\n        values: {\n          ...prevState.values,\n          fields: tmpFields\n        }\n      };\n    }, () => {\n      change(values, dataIndex);\n    });\n  }\n\n  toggleFields() {\n    this.setState(prevState => ({\n      fieldCollapse: !prevState.fieldCollapse\n    }));\n  }\n\n  render() {\n    const { change, dataIndex } = this.props;\n    const { fieldCollapse, values } = this.state;\n    setTimeout(() => this.initState(), 100);\n    const structureFields = (values.fields || []).map((f, i) => (\n      <FieldEditor\n        key={ i }\n        dataIndex={ i }\n        enumerated={ values.type.toLowerCase() === 'enumerated' }\n        value={ f }\n        change={ (val, idx) => this.setState(prevState => {\n          const tmpFields = [ ...prevState.values.fields ];\n          tmpFields[idx] = val;\n          return {\n            values: {\n              ...prevState.values,\n              fields: tmpFields\n            }\n          };\n        }, () => {\n          if (change) {\n            change(values, dataIndex);\n          }\n        }) }\n        remove={ idx => {\n          if (this.state.values.fields.length >= idx) {\n            this.setState(prevState => {\n              const tmpFields = [ ...prevState.values.fields ];\n              tmpFields.splice(idx, 1);\n              return {\n                values: {\n                  ...prevState.values,\n                  fields: tmpFields\n                }\n              };\n            }, () => {\n              if (change) {\n                change(values, dataIndex);\n              }\n            });\n          }\n        } }\n      />\n    ));\n\n    return (\n      <div className='border m-1 p-1'>\n        <ButtonGroup size='sm' className='float-right'>\n          <Button color='danger' onClick={ this.removeAll } >\n            <FontAwesomeIcon icon={ faMinusCircle } />\n          </Button>\n        </ButtonGroup>\n        <div className='border-bottom mb-2'>\n          <h3 className='col-sm-10 my-1'>{ values.type } - { values.name }</h3>\n        </div>\n        <div className='row m-0'>\n          <FormGroup className='col-md-4'>\n            <Label>Name</Label>\n            <Input type='string' placeholder='Name' value={ values.name } onChange={ this.onChange } />\n          </FormGroup>\n          <FormGroup className='col-md-4'>\n            <Label>Options</Label>\n            <Input type='string' placeholder='Options' value={ values.options.join(', ') } onChange={ this.onChange } />\n          </FormGroup>\n          <FormGroup className='col-md-4'>\n            <Label>Comment</Label>\n            <Input type='textarea' placeholder='Comment' rows={ 1 } value={ values.comment } onChange={ this.onChange } />\n          </FormGroup>\n          <FormGroup tag='fieldset' className='col-12 border'>\n            <legend>\n              Fields\n              <ButtonGroup size='sm' className='float-right'>\n                <Button color='primary' onClick={ this.addField } >\n                  <FontAwesomeIcon icon={ faPlus } />\n                  &nbsp;\n                  Field\n                </Button>\n                <Button color={ fieldCollapse ? 'warning' : 'success' } onClick={ this.toggleFields } >\n                  <FontAwesomeIcon icon={ fieldCollapse ? faMinus : faPlus } />\n                </Button>\n              </ButtonGroup>\n            </legend>\n            <Collapse isOpen={ fieldCollapse }>\n              { structureFields }\n            </Collapse>\n            { !fieldCollapse && structureFields.length > 0 ? <p>Expand to view/edit fields</p> : '' }\n          </FormGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\nStructureEditor.defaultProps = {\n  dataIndex: -1,\n  values: {\n    name: '',\n    type: '',\n    options: [],\n    comment: '',\n    fields: []\n  },\n  change: (vals, idx) => {\n    console.log(vals, idx);\n  },\n  remove: idx => {\n    console.log(idx);\n  }\n};\n\nexport default StructureEditor;\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/index.js",[],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/meta.js",["712"],"import React from 'react';\nimport {\n  KeyArrayEditor, KeyObjectEditor, KeyValueEditor\n} from './editors';\n\nconst metaDef = ({k='key',  v=''}) => {\n  return {\n    [k]: v\n  };\n};\n\n// JADN Meta Structure\nexport default {\n  title: {\n    key: 'Title',\n    edit: val => metaDef({k: 'title', v: val}),\n    editor: ({ ...props }) => <KeyValueEditor id='Title' { ...props } />\n  },\n  description: {\n    key: 'Description',\n    edit: val => metaDef({k: 'description', v: val}),\n    editor: ({ ...props }) => <KeyValueEditor id='Description' { ...props } />\n  },\n  module: {\n    key: 'Module',\n    edit: val => metaDef({k: 'module', v: val}),\n    editor: ({ ...props }) => <KeyValueEditor id='Module' { ...props } />\n  },\n  version: {\n    key: 'Version',\n    edit: val => metaDef({k: 'version', v: val}),\n    editor: ({ ...props }) => <KeyValueEditor id='Version' { ...props } />\n  },\n  patch: {\n    key: 'Patch',\n    edit: val => metaDef({k: 'patch', v: val}),\n    editor: ({ ...props }) => <KeyValueEditor id='Patch' { ...props } />\n  },\n  imports: {\n    key: 'Imports',\n    edit: (val=[]) => metaDef({k: 'imports', v: val}),\n    editor: ({ ...props }) => <KeyObjectEditor id='Imports' { ...props } />\n  },\n  exports: {\n    key: 'Exports',\n    edit: (val=[]) => metaDef({k: 'exports', v: val}),\n    editor: ({ ...props }) => <KeyArrayEditor id='Exports' { ...props } />\n  }\n};\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/generate/schema/lib/structure/types.js",["713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765"],"import React from 'react';\nimport { PrimitiveEditor, StructureEditor } from './editors';\n\nconst typeDef = ({name='name', type='type', options=[], comment='', fields=[]}) => ([name, type, options, comment, fields]);\nconst primDef = ({name='name', type='type', options=[], comment=''}) => ([name, type, options, comment]);\n\n// JADN Types Structure\nexport default {\n  // Structured Types\n  record: {\n    key: 'Record',\n    edit: ({name='record', options, comment, fields, ...rest}={}) => typeDef({name, type: 'Record', options, comment, fields}),\n    editor: ({ ...props }) => <StructureEditor { ...props } />\n  },\n  enumerated: {\n    key: 'Enumerated',\n    edit: ({name='enumerated', options, comment, fields, ...rest}={}) => typeDef({name, type: 'Enumerated', options, comment, fields}),\n    editor: ({ ...props }) => <StructureEditor { ...props } />\n  },\n  choice: {\n    key: 'Choice',\n    edit: ({name='choice', options, comment, fields, ...rest}={}) => typeDef({name, type: 'Choice', options, comment, fields}),\n    editor: ({ ...props }) => <StructureEditor { ...props } />\n  },\n  map: {\n    key: 'Map',\n    edit: ({name='map', options, comment, fields, ...rest}={}) => typeDef({name, type: 'Map', options, comment, fields}),\n    editor: ({ ...props }) => <StructureEditor { ...props } />\n  },\n  array: {\n    key: 'Array',\n    edit: ({name='array', options, comment, fields, ...rest}={}) => typeDef({name, type: 'Array', options, comment, fields}),\n    editor: ({ ...props }) => <StructureEditor { ...props } />\n  },\n  arrayof: {\n    key: 'ArrayOf',\n    edit: ({name='arrayof', options, comment, fields, ...rest}={}) => typeDef({name, type: 'ArrayOf', options, comment, fields}),\n    editor: ({ ...props }) => <PrimitiveEditor { ...props } />\n  },\n  // Primitive Types\n  string: {\n    key: 'String',\n    edit: ({name='string', options, comment, ...rest}={}) => primDef({name, type: 'String', options, comment}),\n    editor: ({ ...props }) => <PrimitiveEditor { ...props } />\n  },\n  binary: {\n    key: 'Binary',\n    edit: ({name='binary', options, comment, ...rest}={}) => primDef({name, type: 'Binary', options, comment}),\n    editor: ({ ...props }) => <PrimitiveEditor { ...props } />\n  }\n};\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/static/error.js",["766","767","768","769","770","771","772","773","774","775","776"],"import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\n\n\nclass Error extends Component {\n  iconGeneral = {\n    display: 'inline-block',\n    width: '1em',\n    height: '1em',\n    fontSize: '4em',\n    textAlign: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    MozAnimationDuration: '5s',\n    OAnimationDuration: '5s',\n    WebkitAnimationDuration: '5s',\n    animationDuration: '5s'\n  }\n\n  reverseAnimation = {\n    MozAnimationDirection: 'reverse',\n    OAnimationDirection: 'reverse',\n    WebkitAnimationDirection: 'reverse',\n    animationDirection: 'reverse'\n  }\n\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n\n    console.log('Whoop, there\\'s an issue here!');\n  }\n\n  goBack() {\n    const { history } = this.props;\n    if (history.length === 1) {\n      console.log('Cant Go Back!!');\n      toast(<p>Looks like this is a new tab, try closing it instead of going back</p>, {type: toast.TYPE.WARNING});\n    } else {\n      console.log('Go Back!!');\n      history.goBack();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"jumbotron well col-md-10 col-12 mx-auto\">\n        <h1>Whoops</h1>\n        <h3>This isn&apos;t a valid page, are you sure this is where you wanted to go?</h3>\n        <div className='mx-auto' style={{\n          height: '9em',\n          width: '9em',\n          fontSize: '1em',\n          position: 'relative'\n        }}>\n          <FontAwesomeIcon\n            icon={ faCog }\n            spin\n            style={ this.iconGeneral }\n          />\n          <FontAwesomeIcon\n            icon={ faCog }\n            spin\n            style={{\n              ...this.iconGeneral,\n              ...this.reverseAnimation,\n              fontSize: '6em',\n              top: '0.53em',\n              left: '0.25em'\n            }}\n          />\n          <FontAwesomeIcon\n            icon={ faCog }\n            spin\n            style={{\n              ...this.iconGeneral,\n              fontSize: '3em',\n              top: '0.25em',\n              left: '1.7em'\n            }}\n          />\n        </div>\n        <button className='btn btn-primary' onClick={ this.goBack }>Go Back</button>\n      </div>\n    );\n  }\n}\n\nexport default Error;\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/static/index.js",[],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/static/nav.js",["777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faCheckDouble, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport favicon from '../dependencies/img/jadn-favicon.png';\n\n\nclass NavItem extends Component {\n  constructor(props) {\n    super(props);\n    const { dropdown, external } = this.props;\n    this.external = external || false;\n    this.dropdown = dropdown || false;\n  }\n\n  render() {\n    const {\n      active, click, href, icon, id, target, text\n    } = this.props;\n    const isActive = (href === active);\n    return (\n      <li onClick={ this.external ? () => {} : click } className={ isActive ? ' active' : '' } >\n        <a id={ id || '' } href={ href } target={ target } onClick={ this.external ? () => {} : e => { e.preventDefault(); } } className={ this.dropdown ? 'dropdown-item' : 'nav-link' }>\n          { icon ? <i className={ `fa fa-${icon}` } /> : '' }\n          &nbsp;\n          { text }\n        </a>\n      </li>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    site_title: state.Util.site_title\n  };\n}\n\nfunction mapDispatchToProps(_dispatch) {\n  return {};\n}\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.navigate = this.navigate.bind(this);\n    this.toggle = this.toggle.bind(this);\n\n    const { history } = this.props;\n    const act = history.location.pathname === this.prefix;\n    this.state = {\n      active: (act ? '/' : history.location.pathname),\n      about_modal: false,\n      features_modal: false,\n      state_modal: false\n    };\n  }\n\n  navigate(e) {\n    const { history } = this.props;\n    const { href } = e.target;\n    e.preventDefault();\n    if (href === null || href === undefined ) {\n      return;\n    }\n    const path = href.replace(window.location.origin, '');\n\n    history.push({\n      pathname: path\n    });\n\n    this.setState({ active: path });\n  }\n\n  toggle(e) {\n    console.log(e.target);\n  }\n\n  modals() {\n    const { about_modal, features_modal, state_modal } = this.state;\n    return (\n      <div>\n        <Modal isOpen={ about_modal } toggle={ () => this.setState(prevState => ({ about_modal: !prevState.about_modal })) }>\n          <ModalHeader toggle={ () => this.setState(prevState => ({ about_modal: !prevState.about_modal })) }>About</ModalHeader>\n          <ModalBody>\n            <p>OpenC2 is defined using JSON Abstract Schema Notation (JADN). The JADN validator can check messages against any schema.</p>\n            <p>\n              Source is available from the\n              &nsbp;\n              <a href=\"https://github.com/OpenC2-org/jadn\" target=\"_blank\" rel=\"noreferrer\">OpenC2 JADN Github</a>\n              &nsbp;\n              repo.\n            </p>\n          </ModalBody>\n        </Modal>\n        <Modal isOpen={ features_modal } toggle={ () => this.setState(prevState => ({ features_modal: !prevState.features_modal })) }>\n          <ModalHeader toggle={ () => this.setState(prevState => ({ features_modal: !prevState.features_modal })) }>Features</ModalHeader>\n          <ModalBody>\n            <ul>\n              <li>\n                JADN validation of messages in\n                <ul>\n                  <li>JSON Format</li>\n                  <li>CBOR Format</li>\n                  <li>XML Format</li>\n                </ul>\n              </li>\n              <li>\n                JADN Schema conversion to\n                <ul>\n                  <li>JADN Format</li>\n                  <li>ProtoBuf3 Format</li>\n                  <li>Relax-NG Format</li>\n                  <li>CDDL Format</li>\n                  <li>MarkDown</li>\n                  <li>HTML/PDF</li>\n                </ul>\n              </li>\n            </ul>\n          </ModalBody>\n        </Modal>\n        <Modal isOpen={ state_modal } toggle={ () => this.setState(prevState => ({ state_modal: !prevState.state_modal })) }>\n          <ModalHeader toggle={ () => this.setState(prevState => ({ state_modal: !prevState.state_modal })) }>Components State</ModalHeader>\n          <ModalBody>\n            <ul className='fa-ul'>\n              <li>\n                <span className='fa-li'><FontAwesomeIcon icon={ faCheck } /></span>\n                <a href=\"https://github.com/OpenC2-org/jadn\" target=\"_blank\" rel=\"noreferrer\">OpenC2 JADN Libs</a>\n              </li>\n              {/*\n              <li>\n                <span className='fa-li'><FontAwesomeIcon icon={ faCheck }/></span>\n                Message Converter\n              </li>\n              */}\n              <li>\n                <span className='fa-li'><FontAwesomeIcon icon={ faCheck } /></span>\n                Message Validator\n              </li>\n              <li>\n                <span className='fa-li'><FontAwesomeIcon icon={ faCheck } /></span>\n                Message Creator\n              </li>\n              <li>\n                <span className='fa-li'><FontAwesomeIcon icon={ faCheck } /></span>\n                Schema Conversions\n                <ul className='fa-ul'>\n                  <li>\n                    <span className='fa-li'><FontAwesomeIcon icon={ faCheckDouble } /></span>\n                    JADN\n                  </li>\n                  <li>\n                    <span className='fa-li'><FontAwesomeIcon icon={ faCheckDouble } /></span>\n                    ProtoBuf3 Format\n                  </li>\n                  <li>\n                    <span className='fa-li'><FontAwesomeIcon icon={ faCheckDouble } /></span>\n                    Relax-NG Format\n                  </li>\n                  <li>\n                    <span className='fa-li'><FontAwesomeIcon icon={ faCheckDouble } /></span>\n                    CDDL Format\n                  </li>\n                  <li>\n                    <span className='fa-li'><FontAwesomeIcon icon={ faCheckDouble } /></span>\n                    MarkDown\n                  </li>\n                  <li>\n                    <span className='fa-li'><FontAwesomeIcon icon={ faCheckDouble } /></span>\n                    HTML\n                  </li>\n                  <li>\n                    <span className='fa-li'><FontAwesomeIcon icon={ faCheck } /></span>\n                    PDF\n                  </li>\n                </ul>\n              </li>\n              <li>\n                <span className='fa-li'><FontAwesomeIcon icon={ faCheck } /></span>\n                Schema Validator\n              </li>\n              <li>\n                <span className='fa-li'><FontAwesomeIcon icon={ faTimes } /></span>\n                Schema Creator\n              </li>\n            </ul>\n            <div>\n              <p className='pb-0 mb-1'>Key:</p>\n              <ul className='fa-ul'>\n                <li>\n                  <span className='fa-li'><FontAwesomeIcon icon={ faTimes } /></span>\n                  Untested\n                </li>\n                <li>\n                  <span className='fa-li'><FontAwesomeIcon icon={ faCheck } /></span>\n                  Stable/Known Bugs\n                </li>\n                <li>\n                  <span className='fa-li'><FontAwesomeIcon icon={ faCheckDouble } /></span>\n                  Public Ready\n                </li>\n              </ul>\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n\n  render() {\n    const { active } = this.state;\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light py-2 fixed-top\" style={{ paddingLeft: '3.5em'}}>\n        <div className=\"navbar-brand\">\n          <img src={ favicon } alt=\"Logo\" />\n          &nbsp;&nbsp;\n          <a href=\"https://github.com/oasis-open/openc2-jadn/\" target=\"_blank\" rel=\"noreferrer\">JADN</a>\n          &nbsp;\n          Lint\n        </div>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navMain\" aria-controls=\"navMain\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navMain\">\n          <ul className=\"navbar-nav mr-auto\">\n            <NavItem href=\"/\" text=\"Validate\" active={ active } click={ this.navigate } />\n            <NavItem href=\"/convert\" text=\"Convert\" active={ active } click={ this.navigate } />\n            <li className=\"nav-item dropdown\">\n              <a className={ `nav-link dropdown-toggle${active.startsWith('/generate/') ? ' active' : ''}` } id=\"generate-dropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Generate\n              </a>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"generate-dropdown\">\n                <NavItem dropdown href=\"/generate/message\" text='Message' active={ active } click={ this.navigate } />\n                <NavItem dropdown href=\"/generate/schema\" text='Schema' active={ active } click={ this.navigate } />\n              </ul>\n            </li>\n            <NavItem href=\"/docs\" text=\"API Docs\" active={ active } click={ this.navigate } />\n            <NavItem href=\"#\" text=\"About\" click={ () => this.setState(prevState => ({ about_modal: !prevState.about_modal })) } />\n            <NavItem href=\"#\" text=\"Features\" click={ () => this.setState(prevState => ({ features_modal: !prevState.features_modal })) } />\n            <NavItem href=\"#\" text=\"State\" click={ () => this.setState(prevState => ({ state_modal: !prevState.state_modal })) } />\n          </ul>\n        </div>\n        { this.modals() }\n      </nav>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/cbor.js",["809","810","811","812","813","814","815","816","817","818","819","820"],"/* CBOR Utils */\nexport const cbor2escaped = c => {\n  c = c.replace(/\\s/g, '');\n  if (!c.match(/^[0-9a-fA-F]+$/)) {\n    throw new Error('cannot convert, not valid hexidecimal');\n  } else if (c.length % 2 === 1) {\n    throw new Error('cannot convert, not valid length');\n  }\n  c = c.match(/.{1,2}/g);\n\n\treturn c.map(si => {\n\t  const ci = parseInt(si, 16);\n\t  return ci > 128 ? `\\\\x${si}` : String.fromCharCode(ci);\n\t}).join('').replace(/^\\s+/, '');\n};\n\nexport const escaped2cbor = e => {\n  const tmp_e = e.replace(/\\s/g, '');\n  if (tmp_e.match(/^[0-9a-fA-F]+$/)) {\n    throw new Error('cannot convert hexidecimal to hexidecimal');\n  }\n\n\treturn e.split(/\\\\x/g).map((bi, i) => {\n\t  const tmp = [bi.substr(0, 2)];\n\t  return tmp.concat(bi.substr(2).split('').map((s) => s.charCodeAt(0).toString(16))).join(' ');\n\t}).join(' ').replace(/^\\s+/, '');\n};\n\nexport const hexify = (str) => {\n\tlet rtnStr = '';\n\tstr = str.toString();\n\n\tfor (const i in str) {\n\t\tconst code = str.charCodeAt(i);\n\t\tconst char = str.charAt(i);\n\t\trtnStr += ((code > 128) ? `\\\\x${code.toString(16)}` : char);\n\t}\n\treturn rtnStr;\n};\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/index.js",[],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/jadn.js",["821","822","823","824","825","826","827","828","829","830","831","832","833"],"import { cbor2escaped, escaped2cbor } from './cbor';\n\nconst srt_fmt = require('string-format');\nconst vkbeautify = require('vkbeautify');\n\nconst indent = 2;\nconst strFmt = srt_fmt.create({\n  escape: s => s.replace(/(\")/g, '\\\\$1'),\n  upper: s => s.toUpperCase()\n});\n\n/* General Utils */\nexport const format = (msg, fmt, ind) => {\n  ind = ind || 2;\n  let rtnMsg = '';\n  try {\n    switch (fmt) {\n      case 'cbor':\n        rtnMsg = cbor2escaped(msg);\n        break;\n      case 'json':\n        rtnMsg = vkbeautify.json(msg, ' '.repeat(ind));\n        break;\n      case 'xml':\n        rtnMsg = vkbeautify.xml(msg, ' '.repeat(ind));\n        break;\n      default:\n        rtnMsg = `Error, cannot format ${fmt} message`;\n    }\n  } catch (e) {\n    rtnMsg = `Error, cannot format: ${e.message}`;\n  }\n  return rtnMsg;\n};\n\nexport const minify = (msg, fmt) => {\n  let rtnMsg = '';\n  try {\n    switch (fmt) {\n      case 'cbor':\n\t\t\t\trtnMsg = escaped2cbor(msg);\n        break;\n      case 'json':\n\t\t\t\trtnMsg = vkbeautify.jsonmin(msg);\n        break;\n      case 'xml':\n\t\t\t\trtnMsg = vkbeautify.xmlmin(msg);\n        break;\n      default:\n\t\t\t\trtnMsg = `Error, cannot minify ${fmt} message`;\n    }\n  } catch (e) {\n\t\trtnMsg = `Error, cannot minify: ${e.message}`;\n  }\n  return rtnMsg;\n};\n\n/* Schema Utils */\nexport const FormatJADN = (jadn) => {\n\tconst idn = ' '.repeat(indent);\n\tif (typeof(jadn) === 'string') {\n\t  jadn = JSON.parse(jadn);\n\t}\n\n\tconst meta = strFmt('{idn}\"meta\": {\\n{obj}\\n{idn}}', {\n\t\tidn,\n\t\tobj: $.map(jadn ? jadn.meta : {}, (val, key) => {\n\t\t\tswitch (typeof(val)) {\n\t\t\t\tcase 'object':\n\t\t\t\t\tconst obj = val.map((val1, key1) => {\n\t\t\t\t\t\tif (typeof(val1) === 'object') {\n\t\t\t\t\t\t\treturn strFmt('{idn}[\"{v}\"]', {idn: idn.repeat(3), v: val1.join('\", \"')});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn strFmt('{idn}\"{v}\"', {idn: idn.repeat(3), v: val1});\n\t\t\t\t\t}).join(',\\n');\n\t\t\t\t\treturn strFmt('{idn}\"{k}\": [\\n{v}\\n{idn}]', {idn: idn.repeat(2), k: key, v: obj});\n\t\t\t\tdefault:\n\t\t\t\t\treturn strFmt('{idn}\"{k}\": \"{v}\"', {idn: idn.repeat(2), k: key, v: val});\n\t\t\t}\n\t\t}).join(',\\n')\n\t});\n\n\tconst types = strFmt('[{obj}\\n{idn}]', {\n\t\tidn,\n\t\tobj: $.map(jadn ? jadn.types : [], type => {\n\t\t\tconst header = type.slice(0, -1).map(itm => {\n\t\t\t\tswitch (typeof(itm)) {\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\treturn strFmt('[{obj}]', {obj: itm.map(i => strFmt('\"{itm!escape}\"', {itm: i})).join(', ')});\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn strFmt('\"{itm}\"', { itm });\n\t\t\t\t}\n\t\t\t}).join(', ');\n\n\t\t\tlet defs = type.slice(-1).map((def) => {\n\t\t\t\tswitch (typeof(def)) {\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\treturn def.map((itm) => {\n\t\t\t\t\t\t\tswitch (typeof(itm)) {\n\t\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\t\t\treturn strFmt('{idn}{idn}{idn}[{obj}]', {idn, obj: itm.map(itm1 => {\n\t\t\t\t\t\t\t\t\t\tswitch (typeof(itm1)) {\n\t\t\t\t\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\t\t\t\t\t\treturn strFmt('[{obj}]', {obj: itm1.map(i => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (typeof(i)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn strFmt('\"{itm!escape}\"', {itm: i});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn i;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}).join(', ')});\n\t\t\t\t\t\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\t\t\t\t\t\treturn strFmt('\"{itm!escape}\"', {itm: itm1});\n\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\treturn itm1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}).join(', ')});\n\t\t\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\t\t\treturn strFmt('\"{itm!escape}\"', {idn, itm});\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn itm;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).join(',\\n');\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn strFmt('\"{itm}\"', {itm: def});\n\t\t\t\t}\n\t\t\t}).join(',\\n');\n\t\t\tif (defs.match(/^\\s+\\[/)) {\n\t\t\t\tdefs = strFmt('[\\n{defs}\\n{idn}{idn}]', {idn, defs});\n\t\t\t}\n\t\t\treturn strFmt('\\n{idn}{idn}[{header}, {defs}]', {idn, header, defs});\n\t\t}).join(', ')\n\t});\n\treturn strFmt('{\\n{meta},\\n{idn}\"types\": {types}\\n}', {idn, meta, types});\n};\n\n/* Message Utils */","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/loadURL.js",["834","835","836","837","838","839","840","841","842","843","844","845","846","847","848"],"/* Async load of a file from a generic url */\nconst readAllChunks = stream => {\n  const reader = stream.getReader();\n  const chunks = [];\n\n  const pump = () => {\n    return reader.read().then(({ value, done }) => {\n      if (done) {\n        return chunks;\n      }\n      chunks.push(value);\n      return pump();\n    });\n  };\n  return pump();\n};\n\nconst chunk2str = chunks => {\n  if (chunks.length === 1) {\n    const rtnArr = Array.from(chunks[0]);\n    return rtnArr.map(c => c > 128 ? `\\\\x${c.toString(16)}` : String.fromCharCode(c)).join('');\n  }\n  return '';\n};\n\nexport const validURL = url => url.match(/^(https?:\\/\\/)?(www\\.)?[0-9a-z]+([-.]{1}[0-9a-z]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/);\n\n\nexport const loadURL = url => {\n  if (!validURL(url)) {\n\t  return new Promise((resolve, reject) => {\n\t    reject(new Error('invalid url'));\n\t  });\n  }\n\n  const rtnArr = {\n    data: '',\n    file: url.substring(url.lastIndexOf('/') + 1)\n  };\n  rtnArr.fileName = rtnArr.file.substring(0, rtnArr.file.lastIndexOf('.'));\n  rtnArr.fileExt = rtnArr.file.substring(rtnArr.file.lastIndexOf('.') + 1);\n\n  const jsonParser = (key, val) => {\n    return typeof(val) === 'string' ? val.replace(/\\\\/g, '\\\\\\\\') : val;\n  };\n\n\treturn fetch(url).then(\n\t  rsp => {\n\t    switch (rtnArr.fileExt) {\n        case 'jadn':\n        case 'json':\n          console.log('JADN/JSON');\n          try {\n            const tmp = rsp.text().then(txt => JSON.parse(txt, jsonParser));\n            console.log(tmp);\n            return tmp;\n          } catch (err) {\n            return {\n              error: err.message\n            };\n          }\n        case 'cbor':\n          console.log('CBOR');\n          return readAllChunks(rsp.body).then(chunks => chunk2str(chunks));\n        case 'xml':\n          console.log('XML');\n          return rsp.text();\n        default:\n          console.log('UNKNOWN');\n          return rsp.blob();\n      }\n    }).then(rsp => {\n      console.log(rsp);\n      rtnArr.data = rsp;\n      return rtnArr;\n    }).catch((err) => {\n      console.log('failed to load ', url, err.stack);\n      rtnArr.data = {\n        error: 'cannot load url'\n      };\n      return rtnArr;\n  });\n};","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/multiKey.js",["849","850","851","852","853","854","855","856"],"export const setMultiKey = (a, k, v) => {\n  const keys = k.replace(/\\[\\]$/, '').split('.');\n\n\tif (keys.length > 1) {\n\t  if (!Object.hasOwnProperty(a, keys[0])) {\n\t\t\ta[keys[0]] = {};\n\t\t}\n\t\tsetMultiKey(a[keys[0]], keys.slice(1).join('.'), v);\n\t} else {\n\t  a[k] = v;\n\t}\n};\n\nexport const getMultiKey = (a, k) => {\n  const keys = k.replace(/\\[\\]$/, '').split('.');\n\tif (keys.length > 1) {\n  \treturn Object.hasOwnProperty(a, keys[0]) ? getMultiKey(a[keys[0]], keys.slice(1).join('.')) : '';\n\t}\n\treturn Object.hasOwnProperty(a, k) ? a[k] : '';\n};\n\nexport const delMultiKey = (a, k) => {\n\tconst keys = k.replace(/\\[\\]$/, '').split('.');\n\n\tif (keys.length > 1) {\n\t\tdelMultiKey(a[keys[0]], keys.slice(1).join('.'), null);\n\t} else if (a && Object.hasOwnProperty(a, keys[0])) {\n\t  delete a[keys[0]];\n\t}\n};","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/validator/index.js",["857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { toast } from 'react-toastify';\nimport {\n  Button, ButtonGroup, Form, Tooltip\n} from 'reactstrap';\n\nimport {\n  escaped2cbor, format, hexify, loadURL, minify, validURL\n} from '../utils';\nimport JADNInput from '../utils/jadn-editor';\nimport locale from '../utils/jadn-editor/locale/en';\n\nimport * as ValidateActions from '../../actions/validate';\nimport * as UtilActions from '../../actions/util';\n\nfunction mapStateToProps(state) {\n  return {\n    messages: state.Validate.messages,\n    loadedMessages: state.Util.loaded.messages || {},\n    validMessage: state.Validate.valid.message || {},\n    schemas: state.Validate.schemas,\n    loadedSchemas: state.Util.loaded.schemas || {},\n    validSchema: state.Validate.valid.schema || {},\n    siteTitle: state.Util.site_title\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    info: () => dispatch(ValidateActions.info()),\n    loadFile: (t, f) => dispatch(UtilActions.load(t, f)),\n    validateSchema: (s) => dispatch(ValidateActions.validateSchema(s)),\n    validateMessage: (s, d, t, f) => dispatch(ValidateActions.validateMessage(s, d, t, f))\n  };\n}\n\nclass Validator extends Component {\n  constructor(props) {\n    super(props);\n    this.fileChange = this.fileChange.bind(this);\n    this.selectChange = this.selectChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n\n    this.state = {\n      valTooltip: false,\n      verTooltip: false,\n      message: {\n        message: '',\n        json: {\n          placeholder: 'Submit a message for validation to see the json version of the message'\n        },\n        format: '',\n        decode: '',\n        selected: 'empty',\n        file: false,\n        url: false,\n        urlStr: ''\n      },\n      schema: {\n        schema: {\n          placeholder: 'Paste JADN schema here'\n        },\n        selected: 'empty',\n        decodeTypes: {\n          all: [],\n          exports: []\n        },\n        file: false,\n        url: false,\n        urlStr: ''\n      }\n    };\n\n    const { info, siteTitle } = this.props;\n    this.meta = {\n      title: `${siteTitle} | Validator`,\n      canonical: `${window.location.origin}${window.location.pathname}`\n    };\n\n    this.schemaHeight = '40em';\n    info();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const propsUpdate = this.props !== nextProps;\n    const stateUpdate = this.state !== nextState;\n    return propsUpdate || stateUpdate;\n  }\n\n  submitForm(e) {\n    const { validMessage, validateMessage } = this.props;\n    const { message, schema} = this.state;\n    e.preventDefault();\n\n    validateMessage(\n      schema.schema,\n      message.message,\n      message.format,\n      message.decode\n    ).then(() => {\n      const { valid_bool, message_json, valid_msg } = validMessage;\n      toast(<p>{ valid_msg }</p>, {type: toast.TYPE[valid_bool ? 'INFO' : 'WARNING']});\n\n      this.setState(prevState => ({\n        message: {\n          ...prevState.message,\n          json: message_json\n        }\n      }));\n      this.format('message-json', 2);\n    });\n\n    return false;\n  }\n\n  selectChange(e) {\n    const type = e.target.id.split('-')[0];\n    let selected = e.target.value;\n    const updateArr = {\n      selected,\n      file: selected === 'file',\n      url: selected === 'url'\n    };\n\n    if (selected === 'empty' && type === 'message') {\n      updateArr.format = '';\n      updateArr.decode = '';\n    }\n\n    this.setState(prevState => ({\n      [type]: {\n        ...prevState[type],\n        ...updateArr\n      }\n    }), () => {\n      selected = this.state[type].selected;\n      const loaded = this.props[`loaded${type[0].toUpperCase()}${type.slice(1)}s`];\n\n      if (!['', 'empty', null, 'file', 'url'].includes(selected)) {\n        const fmt = {};\n        if (type === 'message') {\n          fmt.format = selected.split('.')[1];\n        }\n        if (!Object.keys(loaded).includes(selected)) {\n          const { loadFile } = this.props;\n          loadFile(`${type}s`, selected).then(() => {\n            this.setState(prevState => ({\n              [type]: {\n                ...prevState[type],\n                ...fmt,\n                [type]: this.props[`loaded${type[0].toUpperCase()}${type.slice(1)}s`][selected]\n              }\n            }), () => {\n              if (type === 'schema') {\n                this.loadDecodeTypes();\n              }\n            });\n          });\n        } else {\n          this.setState(prevState => ({\n            [type]: {\n              ...prevState[type],\n              [type]: this.props[`loaded${type[0].toUpperCase()}${type.slice(1)}s`][selected]\n            }\n          }), () => {\n            if (type === 'schema') {\n              this.loadDecodeTypes();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  fileChange(e) {\n    const id = e.target.id.split('-')[0];\n    const file = e.target.files[0];\n    const type = file.name.split('.')[1];\n    const fileReader = new FileReader();\n\n    fileReader.onload = (fr, pr) => {\n      let data = atob(fileReader.result.split(',')[1]);\n      try {\n        data = JSON.stringify(JSON.parse(data), null, 2);\n      } catch(e) {\n        switch (type) {\n          case 'cbor':\n            data = escaped2cbor(hexify(data));\n            break;\n          // no deafult case\n        }\n      }\n\n      if (id === 'schema') {\n        try {\n          this.setState(prevState => ({\n            schema: {\n              ...prevState.schema,\n              schema: JSON.parse(data)\n            }\n          }));\n          this.loadDecodeTypes();\n        } catch (e) {\n          toast(<p>Schema cannot be loaded</p>, {type: toast.TYPE.WARNING});\n        }\n      } else if (id === 'message') {\n        this.setState(prevState => ({\n            message: {\n              ...prevState.message,\n              format: type === 'jadn' ? 'json' : type,\n              message: data\n            }\n        }));\n      }\n    };\n    fileReader.readAsDataURL(file);\n  }\n\n  format(t) {\n    const { message } = this.state;\n    if (t === 'message' || t === 'message-json') {\n      const fmt = t === 'message' ? message.format : 'json';\n      let msg = t === 'message' ? message.message : message.json;\n      msg = format(message, fmt, 2);\n\n      if (msg.startsWith('Error')) {\n        toast(<p>{ `${t.charAt(0).toUpperCase() + t.slice(1)} ${msg}` }</p>, {type: toast.TYPE.WARNING});\n        return;\n      }\n\n      this.setState(prevState => ({ message: {...prevState.message, [t === 'message' ? 'message' : 'json']: msg }}));\n    } else if (t === 'schema') {\n      try {\n        this.setState(prevState => ({ schema: {...prevState.schema, schema: prevState.schema.schema }}));\n      } catch (e) {\n        const msg = `${t.charAt(0).toUpperCase()}${t.slice(1)} Invalid, cannot format: ${e.message}`;\n        toast(<p>{ msg }</p>, {type: toast.TYPE.WARNING});\n      }\n    }\n  }\n\n  minify(t) {\n    const { message } = this.state;\n    if (t === 'message' || t === 'message-json') {\n      const fmt = t === 'message' ? message.format : 'json';\n      let msg = t === 'message' ? message.message : message.json;\n      msg = minify(msg, fmt);\n      if (msg.startsWith('Error')) {\n        toast(<p>{ `${t.charAt(0).toUpperCase() + t.slice(1)} ${msg}` }</p>, {type: toast.TYPE.WARNING});\n        return;\n      }\n      this.setState(prevState => ({\n        message: {\n          ...prevState.message,\n          [t === 'message' ? 'message' : 'json']: msg\n        }\n      }));\n    } else if (t === 'schema') {\n      try {\n        this.setState(prevState => ({ schema: {...prevState.schema, schema: prevState.schema.schema }}));\n      } catch (e) {\n        const msg = `${t.charAt(0).toUpperCase()}${t.slice(1)} Invalid, cannot format: ${e.message}`;\n        toast(<p>{ msg }</p>, {type: toast.TYPE.WARNING});\n      }\n    }\n  }\n\n  verifySchema() {\n    const { schema } = this.state.schema;\n    let schemaObj = schema;\n    if (typeof(schemaObj) === 'string') {\n      try {\n        schemaObj = JSON.parse(schema);\n      } catch (err) {\n        toast(<p>{ err.message }</p>, {type: toast.TYPE.WARNING});\n        return;\n      }\n    }\n\n    this.props.validateSchema(schema).then(() => {\n      const { valid_bool, valid_msg } = this.props.validSchema;\n      toast(<p>{ valid_msg }</p>, {type: toast.TYPE[valid_bool ? 'INFO' : 'WARNING']});\n    });\n  }\n\n  loadURL(t) {\n    const url = this.state[t].urlStr;\n\n    if (!validURL(url)) {\n      toast(<p>Invalid URL, cannot load from a non valid location</p>, {type: toast.TYPE.WARNING});\n      return;\n    }\n\n    const file = url.substring(url.lastIndexOf('/') + 1);\n    const fileExt = file.substring(file.lastIndexOf('.') + 1);\n\n    if (['json', 'jadn'].indexOf(fileExt) === -1 && t === 'schema') {\n      toast(<p>This file cannot be loaded as a schema, only JADN/JSON files are valid</p>, {type: toast.TYPE.WARNING});\n      return;\n    }\n\n    loadURL(url).then(data => {\n      this.setState(prevState => ({\n        [t]: {\n          ...prevState[t],\n          [t]: data.data,\n          format: fileExt === 'jadn' ? 'json' : data.fileExt\n        }\n      }));\n      if (t === 'schema') {\n        this.loadDecodeTypes();\n      }\n      return;\n    }).catch(_err => {\n      toast(<p>Invalid url, please check what you typed</p>, {type: toast.TYPE.WARNING});\n    });\n  }\n\n  loadDecodeTypes() {\n    const { message, schema } = this.state;\n    const decodeTypes = {\n      all: [],\n      exports: []\n    };\n    let msgDecode = '';\n\n    if (schema.schema.meta !== undefined) {\n      if (schema.schema.meta.exports !== undefined) {\n        decodeTypes.exports = schema.schema.meta.exports;\n      }\n    }\n\n    if (schema.schema.types !== undefined) {\n      decodeTypes.all = schema.schema.types.map(def => def[0]);\n      decodeTypes.all = decodeTypes.all.filter(dt => !decodeTypes.exports.includes(dt));\n      decodeTypes.all.sort();\n    }\n\n    if (message.decode === '' || !decodeTypes.all.includes(message.decode)) {\n      if (decodeTypes.exports.length >= 1) {\n        msgDecode = decodeTypes.exports[0];\n      } else if (decodeTypes.all.length >= 1) {\n        msgDecode = decodeTypes.all[0];\n      }\n    }\n\n    this.setState(prevState => ({\n      message: {\n        ...prevState.message,\n        decode: msgDecode\n      },\n      schema: {\n        ...prevState.schema,\n        decodeTypes\n      }\n    }));\n  }\n\n  jadn() {\n    const { schema } = this.state;\n    // list of options - <option value=\"{{ opt }}\">{{ opt }}</option>\n    const schemaOpts = this.props.schemas.map(s => <option key={ s } value={ s }>{ s }</option>);\n\n    return (\n      <fieldset className=\"col-6 p-0 float-left\">\n        <legend>JADN Schema</legend>\n        <div className=\"form-row\">\n          <div className=\"col-md-12 mb-3\">\n            <div id=\"schema-card\" className=\"tab-pane fade active show\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <ButtonGroup className=\"float-right\">\n                    <Button color=\"info\" size=\"sm\" onClick={ () => this.verifySchema() } id=\"verTooltip\" >Verify</Button>\n                    <Tooltip placement=\"bottom\" isOpen={ this.state.verTooltip } target=\"verTooltip\" toggle={ () => this.setState(prevState => ({ verTooltip: !prevState.verTooltip })) }>\n                      Validate the schema is valid prior to validating the message\n                    </Tooltip>\n                  </ButtonGroup>\n\n                  <div className=\"col-sm-8 pl-0\">\n                    <div className=\"form-group col-md-6 mb-0 pr-0 pl-1 d-inline-block\">\n                      <select id=\"schema-list\" name=\"schema-list\" className=\"form-control\" default=\"empty\" onChange={ this.selectChange }>\n                        <option value=\"empty\">Schema</option>\n                        <optgroup label=\"Testers\">\n                          { schemaOpts }\n                        </optgroup>\n                        <optgroup label=\"Custom\">\n                          <option value=\"file\">File...</option>\n                          <option value=\"url\">URL...</option>\n                        </optgroup>\n                      </select>\n                    </div>\n\n                    <div id=\"schema-file-group\" className={ `form-group col-md-6 px-1${schema.file ? ' d-inline-block' : ' d-none'}` } >\n                      <input type=\"file\" className=\"btn btn-light form-control-file\" id=\"schema-file\" name=\"schema-file\" accept=\".jadn\" onChange={ this.fileChange } />\n                    </div>\n\n                    <div id=\"schema-url-group\" className={ `form-group col-md-6 px-1${schema.url ? ' d-inline-block' : ' d-none'}` }>\n                      <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                          <Button color=\"info\" onClick={ () => this.loadURL('schema') }>Load URL</Button>\n                        </div>\n                        <input type=\"text\" className=\"form-control\" default='' onChange={ e => this.setState(prevState => ({ schema: {...prevState.schema, urlStr: e.target.value }})) } />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-control border card-body p-0\" style={{ height: this.schemaHeight }}>\n                  <JADNInput\n                    id='jadn_schema'\n                    placeholder={ schema.schema }\n                    onChange={\n                      val => {\n                        if (val.jsObject) {\n                          this.setState(prevState => ({\n                            schema: {\n                              ...prevState.schema,\n                              schema: val.jsObject\n                            }\n                          }));\n                        }\n                      }\n                    }\n                    theme='light_mitsuketa_tribute'\n                    locale={ locale }\n                    reset={ false }\n                    height='100%'\n                    width='100%'\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    );\n  }\n\n  message() {\n    const { message, schema } = this.state;\n    // list of options - <option value=\"{{ opt.name }}\" decode=\"{{ opt.type }}\">{{ opt.name }}</option>\n    const msgOpts = Object.entries(this.props.messages).map(([n, t]) => <option key={ n } value={ n } decode={ t } >{ n }</option>);\n    const decodeExports = schema.decodeTypes.exports.map(dt => <option key={ dt } value={ dt } >{ dt }</option>);\n    const decodeAll = schema.decodeTypes.all.map(dt => <option key={ dt } value={ dt } >{ dt }</option>);\n\n    if (typeof(message.message) !== 'string') {\n      setTimeout(() => this.format('message'), 5);\n    }\n\n    return (\n      <fieldset>\n        <legend>Message</legend>\n        <div className=\"form-row\">\n          <div className=\"col-md-12 mb-3\">\n            <ul className={ `nav nav-tabs${message.json.placeholder ? ' d-none' : ''}` }>\n              <li className=\"nav-item\">\n                <a className=\"nav-link active show\" data-toggle=\"tab\" href=\"#message-card\">Original</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" data-toggle=\"tab\" href=\"#json-card\">JSON</a>\n              </li>\n            </ul>\n\n            <div className=\"tab-content\">\n              <div id=\"message-card\" className=\"tab-pane fade active show\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <ButtonGroup className=\"float-right\" size=\"sm\">\n                      <Button color=\"info\" onClick={ () => this.format('message') }>Format</Button>\n                      <Button color=\"info\" onClick={ () => this.minify('message') }>Minify</Button>\n                    </ButtonGroup>\n\n                    <div className=\"col-sm-8 pl-0\">\n                      <div className=\"form-group col-md-6 mb-0 pr-0 pl-1 d-inline-block\">\n                        <select id=\"message-list\" name=\"message-list\" className=\"form-control\" default=\"empty\" onChange={ this.selectChange }>\n                          <option value=\"empty\">Message</option>\n                          <optgroup label=\"Testers\">\n                            { msgOpts }\n                          </optgroup>\n                          <optgroup label=\"Custom\">\n                            <option value=\"file\">File...</option>\n                            <option value=\"url\">URL...</option>\n                          </optgroup>\n                        </select>\n                      </div>\n\n                      <div id=\"message-file-group\" className={ `form-group col-md-6 px-1${message.file ? ' d-inline-block' : ' d-none'}` }>\n                        <input type=\"file\" className=\"btn btn-light form-control-file\" id=\"message-file\" name=\"message-file\" accept=\".json,.jadn,.xml,.cbor\" onChange={ this.fileChange } />\n                      </div>\n\n                      <div id=\"message-url-group\" className={ `form-group col-md-6 px-1${message.url ? ' d-inline-block' : ' d-none'}` }>\n                        <div className=\"input-group\">\n                          <div className=\"input-group-prepend\">\n                            <Button color=\"info\" onClick={ () => this.loadURL('message') }>Load URL</Button>\n                          </div>\n                          <input type=\"text\" className=\"form-control\" default='' onChange={ (e) => this.setState(prevState => ({ message: {...prevState.message, urlStr: e.target.value }})) } />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"form-control border card-body p-0\" style={{ height: this.schemaHeight }}>\n                    <textarea\n                      placeholder=\"Paste message to be validated here\"\n                      style={{\n                        resize: 'none',\n                        outline: 'none',\n                        width: '100%',\n                        padding: '10px',\n                        border: 'none',\n                        height: '100%'\n                      }}\n                      required=\"\"\n                      value={ message.message }\n                      onChange={ e => this.setState(prevState => ({ message: {...prevState.message, message: e.target.value }})) }\n                    />\n                  </div>\n\n                  <div className=\"card-footer\">\n                    <div className=\"float-left form-group col-md-6 pr-1 pl-1 mb-0\">\n                      <label className=\"control-label mb-1\" htmlFor=\"message-format\">Message Format</label>\n                      <select className=\"form-control\" id=\"message-format\" name=\"message-format\" required=\"\" value={ message.format } onChange={ (e) => this.setState(prevState => ({ message: {...prevState.message, format: e.target.value }})) } >\n                        <option value=\"\">Message Format</option>\n                        <option value=\"json\">json</option>\n                        <option value=\"cbor\">cbor</option>\n                        <option value=\"xml\">xml</option>\n                      </select>\n                    </div>\n\n                    <div className=\"float-left form-group col-md-6 pr-1 pl-1 mb-0\">\n                      <label className=\"control-label mb-1\" htmlFor=\"message-decode\">Message Type</label>\n                      <select className=\"form-control\" id=\"message-decode\" name=\"message-decode\" required=\"\" value={ message.decode } onChange={ (e) => this.setState(prevState => ({ message: {...prevState.message, decode: e.target.value }})) }>\n                        <optgroup label=\"Exports\">\n                          { decodeExports }\n                        </optgroup>\n                        <optgroup label=\"All\">\n                          { decodeAll }\n                        </optgroup>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div id=\"json-card\" className=\"tab-pane fade\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <ButtonGroup className=\"float-right\">\n                      <Button outline color=\"secondary\" onClick={ () => this.format('message-json', 2) }>Verbose</Button>\n                      <Button outline color=\"secondary\" onClick={ () => this.minify('message-json') }>Minify</Button>\n                    </ButtonGroup>\n                  </div>\n\n                  <div className=\"form-control border card-body p-0\" style={{ height: this.schemaHeight }}>\n                    <textarea\n                      placeholder={ JSON.stringify(message.json) }\n                      style={{\n                        resize: 'none',\n                        outline: 'none',\n                        width: '100%',\n                        padding: '10px',\n                        border: 'none',\n                        height: '100%'\n                      }}\n                      id=\"message-json\"\n                      rows=\"10\"\n                      value={ message.json }\n                      readOnly\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    );\n  }\n\n  render() {\n    const { valTooltip } = this.state;\n    const { canonical, title } = this.meta;\n    return (\n      <div className='row mx-auto'>\n        <Helmet>\n          <title>{ title }</title>\n          <link rel=\"canonical\" href={ canonical } />\n        </Helmet>\n        <Form className=\"mx-auto col-12 position-relative\" onSubmit={ this.submitForm }>\n          <div className=\"form-group position-absolute\" style={{ right: '1.25em', zIndex: 100 }}>\n            <Button outline color=\"primary\" id=\"valTooltip\">Validate</Button>\n            <Tooltip placement=\"bottom\" isOpen={ valTooltip } target=\"valTooltip\" toggle={ () => this.setState(prevState => ({ valTooltip: !prevState.valTooltip })) }>\n              Validate the message against the given schema\n            </Tooltip>\n            <Button outline color=\"danger\" type=\"reset\">Reset</Button>\n          </div>\n          { this.jadn() }\n          { this.message() }\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Validator);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/convert.ts",["915","916","917","918"],"// Actions for convert API\nimport { createAction } from 'redux-api-middleware';\nimport { ActionFailureResult, ActionRequestResult, ActionSuccessResult } from './interfaces';\n\n// API Base URL\nconst baseAPI = '/api/convert';\n\n// Helper Functions\n// None\n\n// API Calls\n// GET - /api/convert/ - convert basic info\nconst INFO_REQUEST = '@@convert/INFO_REQUEST';\nexport const INFO_SUCCESS = '@@convert/INFO_SUCCESS';\nexport const INFO_FAILURE = '@@convert/INFO_FAILURE';\nexport const info = () => createAction({\n  endpoint: `${baseAPI}/`,\n  method: 'GET',\n  types: [\n    INFO_REQUEST, INFO_SUCCESS, INFO_FAILURE\n  ]\n});\n\nexport interface InfoSuccessAction extends ActionSuccessResult {\n  type: typeof INFO_SUCCESS;\n  payload: {\n    conversions: Record<string, any>;\n    schemas: Array<any>;\n  };\n}\n\n// POST - /api/convert/ - convert the given schema to a different format\nconst CONVERT_REQUEST = '@@convert/CONVERT_REQUEST';\nexport const CONVERT_SUCCESS = '@@convert/CONVERT_SUCCESS';\nexport const CONVERT_FAILURE = '@@convert/CONVERT_FAILURE';\nexport const convertSchema = (schema: Record<string, any>, t: string, comments: boolean) => createAction({\n  endpoint: `${baseAPI}/`,\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    schema,\n    'convert-to': t,\n    comments\n  }),\n  types: [\n    CONVERT_REQUEST, CONVERT_SUCCESS, CONVERT_FAILURE\n  ]\n});\n\nexport interface ConvertSchemaSuccessAction extends ActionSuccessResult {\n  type: typeof CONVERT_SUCCESS;\n  payload: {\n    schema: Record<string, any>;\n  };\n}\n\n// Request Actions\nexport interface ConvertRequestActions extends ActionRequestResult {\n  type: typeof INFO_REQUEST | typeof CONVERT_REQUEST;\n}\n\n// Failure Actions\nexport interface ConvertFailureActions extends ActionFailureResult {\n  type: typeof INFO_FAILURE | typeof CONVERT_FAILURE;\n}\n\nexport type ConvertActions = (\n  ConvertRequestActions | ConvertFailureActions |\n  // Success Actions\n  InfoSuccessAction | ConvertSchemaSuccessAction\n);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/generate.ts",["919","920","921","922","923"],"// Actions for generate API\nimport { createAction } from 'redux-api-middleware';\nimport { ActionFailureResult, ActionRequestResult, ActionSuccessResult } from './interfaces';\n\n// API Base URL\nconst baseAPI = '/api';\n\n// Helper Functions\n// OPTIONS - set schema locally for generating messages\nexport const SCHEMA_DEFINE = '@@generate/SCHEMA_DEFINE';\nexport const SCHEMA_SUCCESS = '@@generate/SCHEMA_SUCCESS';\nexport const SCHEMA_FAILURE = '@@generate/SCHEMA_FAILURE';\nexport const setSchema = (schema: Record<string, any>) => createAction({\n  endpoint: '',\n  method: 'OPTIONS',\n  types: [\n    {\n      type: SCHEMA_DEFINE,\n      payload: (_action, _state) => ({ schema })\n      }, SCHEMA_SUCCESS, SCHEMA_FAILURE\n    ]\n});\n\nexport interface SetSchemaSuccessAction extends ActionSuccessResult {\n  type: typeof SCHEMA_SUCCESS;\n  payload: {\n    schema: Record<string, any>;\n  };\n}\n\n// API Calls\n// GET - /api/create/ - get basic create info\nconst INFO_REQUEST = '@@generate/INFO_REQUEST';\nexport const INFO_SUCCESS = '@@generate/INFO_SUCCESS';\nexport const INFO_FAILURE = '@@generate/INFO_FAILURE';\nexport const info = () => createAction({\n  endpoint: `${baseAPI}/create`,\n  method: 'GET',\n  types: [\n    INFO_REQUEST, INFO_SUCCESS, INFO_FAILURE\n  ]\n});\n\nexport interface InfoSuccessAction extends ActionSuccessResult {\n  type: typeof INFO_SUCCESS;\n  payload: {\n    schemas: Array<any>;\n  };\n}\n\n// Request Actions\nexport interface GenerateRequestActions extends ActionRequestResult {\n  type: typeof SCHEMA_DEFINE | typeof INFO_REQUEST;\n}\n\n// Failure Actions\nexport interface GenerateFailureActions extends ActionFailureResult {\n  type: typeof SCHEMA_FAILURE | typeof INFO_FAILURE;\n}\n\nexport type GenerateActions = (\n  GenerateRequestActions | GenerateFailureActions |\n  // Success Actions\n  SetSchemaSuccessAction | InfoSuccessAction\n);","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/index.ts",[],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/interfaces.ts",[],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/util.ts",["924"],"// Actions for utils API\nimport { createAction } from 'redux-api-middleware';\nimport { ActionFailureResult, ActionRequestResult, ActionSuccessResult } from './interfaces';\n\n// API Base URL\nconst baseAPI = '/api';\n\n// Helper Functions\n// None\n\n// API Calls\n// GET /api/ - basic server info\nconst INFO_REQUEST = '@@util/INFO_REQUEST';\nexport const INFO_SUCCESS = '@@util/INFO_SUCCESS';\nexport const INFO_FAILURE = '@@util/INFO_FAILURE';\nexport const info = () => createAction({\n  endpoint: `${baseAPI}/`,\n  method: 'GET',\n  types: [\n    INFO_REQUEST, INFO_SUCCESS, INFO_FAILURE\n  ]\n});\n\nexport interface InfoSuccessAction extends ActionSuccessResult {\n  type: typeof INFO_SUCCESS;\n  payload: {\n    title: string;\n    message: string;\n  };\n}\n\n// GET - /api/load/{TYPE}/{FILE} - load a file from the server\nconst LOAD_REQUEST = '@@util/LOAD_REQUEST';\nexport const LOAD_SUCCESS = '@@util/LOAD_SUCCESS';\nexport const LOAD_FAILURE = '@@util/LOAD_FAILURE';\nexport const load = (type: string, file: string) => createAction({\n  endpoint: `${baseAPI}/load/${type}/${file}`,\n  method: 'GET',\n  types: [\n    LOAD_REQUEST, LOAD_SUCCESS, LOAD_FAILURE\n  ]\n});\n\nexport interface LoadSuccessAction extends ActionSuccessResult {\n  type: typeof LOAD_SUCCESS;\n  payload: {\n    type: 'messages' | 'schemas';\n    file: string;\n    data: Record<string, any>;\n  };\n}\n\n// Request Actions\nexport interface UtilRequestActions extends ActionRequestResult {\n  type: typeof INFO_REQUEST | typeof LOAD_REQUEST;\n}\n\n// Failure Actions\nexport interface UtilFailureActions extends ActionFailureResult {\n  type: typeof INFO_FAILURE | typeof LOAD_FAILURE;\n}\n\nexport type UtilActions = (\n  UtilRequestActions | UtilFailureActions |\n  // Success Actions\n  InfoSuccessAction | LoadSuccessAction\n);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/actions/validate.ts",["925","926","927","928","929","930"],"// Actions for validate API\nimport { createAction } from 'redux-api-middleware';\nimport { ActionFailureResult, ActionRequestResult, ActionSuccessResult } from './interfaces';\n\n// General Actions\nexport const VALIDATE_FAILURE = '@@validate/VALIDATE_FAILURE';\n\n// API Base URL\nconst baseAPI = '/api/validate';\n\n// Helper Functions\n// None\n\n// API Calls\n// GET - /api/validate/ - get basic validate info\nconst INFO_REQUEST = '@@validate/INFO_REQUEST';\nexport const INFO_SUCCESS = '@@validate/INFO_SUCCESS';\nexport const INFO_FAILURE = '@@validate/INFO_FAILURE';\nexport const info = () => createAction({\n  endpoint: `${baseAPI}/`,\n  method: 'GET',\n  types: [\n    INFO_REQUEST, INFO_SUCCESS, INFO_FAILURE\n  ]\n});\n\nexport interface InfoSuccessAction extends ActionSuccessResult {\n  type: typeof INFO_SUCCESS;\n  payload: {\n    messages: Record<string, any>;\n    schemas: Record<string, any>;\n  };\n}\n\n// POST - /api/validate/schema - validate the given schema\nconst VALIDATE_SCHEMA_REQUEST = '@@validate/VALIDATE_SCHEMA_REQUEST';\nexport const VALIDATE_SCHEMA_SUCCESS = '@@validate/VALIDATE_SCHEMA_SUCCESS';\nexport const validateSchema = (schema: Record<string, any>) => createAction({\n  endpoint: `${baseAPI}/schema`,\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    schema\n  }),\n  types: [\n    VALIDATE_SCHEMA_REQUEST, VALIDATE_SCHEMA_SUCCESS, VALIDATE_FAILURE\n  ]\n});\n\nexport interface ValidateSchemaSuccessAction extends ActionSuccessResult {\n  type: typeof VALIDATE_SCHEMA_SUCCESS;\n}\n\n// POST - /api/validate - validate teh given message against the given schema\nconst VALIDATE_MESSAGE_REQUEST = '@@validate/VALIDATE_MESSAGE_REQUEST';\nexport const VALIDATE_MESSAGE_SUCCESS = '@@validate/VALIDATE_MESSAGE_SUCCESS';\nexport const validateMessage = (schema: Record<string, any>, message: Record<string, any>, format: string, decode: string) => createAction({\n  endpoint: `${baseAPI}/`,\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    schema,\n    message,\n    'message-format': format,\n    'message-decode': decode\n  }),\n  types: [\n    VALIDATE_MESSAGE_REQUEST, VALIDATE_MESSAGE_SUCCESS, VALIDATE_FAILURE\n  ]\n});\n\nexport interface ValidateMessageSuccessAction extends ActionSuccessResult {\n  type: typeof VALIDATE_MESSAGE_SUCCESS;\n}\n\n// Request Actions\nexport interface UtilRequestActions extends ActionRequestResult {\n  type: typeof INFO_REQUEST | typeof VALIDATE_SCHEMA_REQUEST | typeof VALIDATE_MESSAGE_REQUEST;\n}\n\n// Failure Actions\nexport interface UtilFailureActions extends ActionFailureResult {\n  type: typeof INFO_FAILURE | typeof VALIDATE_FAILURE;\n}\n\nexport type ValidateActions = (\n  UtilRequestActions | UtilFailureActions |\n  // Success Actions\n  InfoSuccessAction | ValidateSchemaSuccessAction | ValidateMessageSuccessAction\n);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/app.tsx",["931","932","933"],"import React, { Component, CSSProperties } from 'react';\nimport { Dispatch } from 'redux';\nimport { ConnectedProps, connect } from 'react-redux';\nimport { History } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ThemeChooser } from 'react-bootswatch-theme-switcher';\n\n// Static components\nimport { Error, Nav } from './components/static';\n\n// Pages\nimport CommandGenerator from './components/generate/command';\nimport Converter from './components/converter';\nimport Docs from './components/docs';\nimport SchemaGenerator from './components/generate/schema';\nimport Validator from './components/validator';\n\n// Reducers & Actions\nimport { RootState } from './reducers';\nimport { Util } from './actions';\n\n// Interfaces\ninterface AppProps {\n  history: History;\n}\n\n// Redux Connector\nconst mapStateToProps = (state: RootState) => ({\n  siteTitle: state.Util.site_title,\n  siteDesc: state.Util.site_desc\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  info: () => dispatch(Util.info())\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype ConnectorProps = ConnectedProps<typeof connector>;\ntype AppConnectedProps = AppProps & ConnectorProps;\n\n// Component\nclass App extends Component<AppConnectedProps> {\n  meta = {\n    title: 'JADN',\n    description: 'JADN',\n    canonical: `${window.location.origin}${window.location.pathname}`\n  }\n\n  themeOptionStyles: CSSProperties = {\n    position: 'fixed',\n    bottom: '5px',\n    right: '5px'\n  }\n\n  constructor(props: AppConnectedProps) {\n    super(props);\n    const { info, siteDesc, siteTitle } = this.props;\n\n    info().then(() => {\n      this.meta = {\n        ...this.meta,\n        title: siteTitle,\n        description: siteDesc\n      };\n    });\n  }\n\n  render() {\n    const { history } = this.props;\n    return (\n      <div className=\"container-fluid mt-3\" >\n        <div className=\"ribbon ribbon-top-left\">\n          <span>Beta</span>\n        </div>\n\n        <Nav history={ history } />\n        <ConnectedRouter history={ history }>\n          <Switch>\n            <Route exact path=\"/\" component={ props => <Redirect to=\"/validate\" { ...props } />  } />\n            <Route exact path=\"/validate\" component={ Validator } />\n            <Route exact path=\"/convert\" component={ Converter } />\n            <Route exact path=\"/docs\" component={ Docs } />\n            <Route exact path=\"/generate\" render={ props => <Redirect to=\"/generate/message\" { ...props } /> } />\n            <Route path=\"/generate/message\" component={ CommandGenerator } />\n            <Route path=\"/generate/schema\" component={ SchemaGenerator } />\n            {/* Error should always be last route */}\n            <Route component={ Error } />\n          </Switch>\n        </ConnectedRouter>\n\n        <div style={ this.themeOptionStyles }>\n          <ThemeChooser size='sm' />\n        </div>\n\n        <ToastContainer position={ toast.POSITION.BOTTOM_CENTER } autoClose={ 5000 } />\n      </div>\n    );\n  }\n}\n\nexport default connector(App);\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/index.jsx",[],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/reducers/convert.ts",["934","935","936","937","938"],"import * as convert from '../actions/convert';\n\nexport interface ConvertState {\n  conversions: Record<string, any>;\n  converted: Record<string, any>;\n  schemas: Array<any>;\n}\n\nconst initialState: ConvertState = {\n  conversions: {},\n  converted: {},\n  schemas: []\n};\n\nexport default (state=initialState, action: convert.ConvertActions) => {\n  switch (action.type) {\n    case convert.INFO_SUCCESS:\n      return {\n        ...state,\n        conversions: action.payload.conversions || {},\n        schemas: action.payload.schemas || []\n      };\n\n    case convert.CONVERT_SUCCESS:\n      return {\n        ...state,\n        converted: action.payload.schema || {}\n      };\n\n    case convert.INFO_FAILURE:\n    case convert.CONVERT_FAILURE:\n\t\t  console.log(action.payload);\n      return {\n        ...state,\n        error: action.payload.error || 'ERROR'\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/reducers/generate.ts",["939","940","941","942"],"import * as generator from '../actions/generate';\n\nexport interface GenerateState {\n  selectedSchema: Record<string, any>;\n  schemas: Array<any>;\n  message: Record<string, any>;\n  types: {\n    schema: Array<string>;\n\t  base: Array<string>;\n  }\n}\n\nconst initialState: GenerateState = {\n  selectedSchema: {},\n  schemas: [],\n  message: {},\n  types: {\n    schema: ['Record', 'Enumerated', 'Map', 'Choice', 'ArrayOf', 'Array'],\n\t\tbase: ['String']\n  }\n};\n\nexport default (state=initialState, action: generator.GenerateActions) => {\n  switch (action.type) {\n    case generator.INFO_SUCCESS:\n      return {\n        ...state,\n        schemas: action.payload.schemas || []\n      };\n\n    case generator.SCHEMA_DEFINE:\n      return {\n        ...state,\n        selectedSchema: action.payload.schema\n      };\n\n    case generator.INFO_FAILURE:\n    case generator.SCHEMA_FAILURE:\n      return state;\n\n    default:\n      return state;\n  }\n};\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/reducers/index.ts",[],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/reducers/util.ts",["943","944","945","946","947","948","949"],"import * as util from '../actions/util';\n\nexport interface UtilState {\n  site_title: string;\n  site_desc: string;\n  error: string;\n  loaded: {\n\t  messages: Record<string, any>;\n\t  schemas: Record<string, any>;\n\t}\n}\n\nconst initialState: UtilState = {\n  site_title: 'JADN Lint',\n  site_desc: '',\n  error: '',\n  loaded: {\n\t\tmessages: {},\n\t\tschemas: {}\n\t}\n};\n\nexport default (state=initialState, action: util.UtilActions) => {\n\tconst tmpState: UtilState = { ...state };\n\n  switch (action.type) {\n    case util.INFO_SUCCESS:\n      return {\n        ...state,\n        site_title: action.payload.title || 'JADN Lint',\n        site_desc: action.payload.message || 'JADN Schema Lint'\n      };\n\n    case util.LOAD_SUCCESS:\n\t\t  tmpState.loaded[action.payload.type][action.payload.file] = action.payload.data;\n\t\t  return tmpState;\n\n    case util.INFO_FAILURE:\n\t\t  case util.LOAD_FAILURE:\n        return {\n          ...state,\n          error:  action.payload.valid_msg || action.payload.error || 'ERROR'\n        };\n\n    default:\n      return state;\n  }\n};\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/reducers/validate.ts",["950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968"],"import * as validate from '../actions/validate';\n\nexport interface ValidateState {\n\tmessages: Record<string, any>;\n\tschemas: Array<any>;\n\terror: Record<string, any>;\n\tvalid: {\n\t\tmessage: Record<string, any>;\n\t\tschema: Record<string, any>;\n\t}\n}\n\nconst initialState: ValidateState = {\n  messages: {},\n  schemas: [],\n\terror: {},\n\tvalid: {\n\t  message: {},\n\t\tschema: {}\n\t}\n};\n\nexport default (state=initialState, action: validate.ValidateActions) => {\n  switch (action.type) {\n    case validate.INFO_SUCCESS:\n      return {\n\t\t\t\t...state,\n\t\t\t\tmessages: action.payload.messages || {},\n    \t\tschemas: action.payload.schemas || [],\n\t\t\t\terror: {}\n      };\n\n\t\tcase validate.VALIDATE_SCHEMA_SUCCESS:\n\t\t\treturn {\n\t\t\t  ...state,\n\t\t\t  valid: {\n\t\t      ...state.valid,\n\t\t\t    schema: action.payload\n\t\t\t  }\n\t\t\t};\n\n\t\tcase validate.VALIDATE_MESSAGE_SUCCESS:\n\t\t\treturn {\n\t\t\t  ...state,\n\t\t\t  valid: {\n\t        ...state.valid,\n\t\t\t    message: action.payload\n\t\t\t  }\n\t\t\t};\n\n    case validate.INFO_FAILURE:\n\t\tcase validate.VALIDATE_FAILURE:\n\t\t  console.log(action.payload);\n      return {\n        ...state,\n        error: action.payload.valid_msg || action.payload.error || 'ERROR'\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/store.ts",[],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/registerServiceWorker.d.ts",[],"/Users/jerryczachor/Documents/git/Screaming_Bunny/WebValidator/client/src/components/utils/jadn-editor.tsx",["969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016"],"import React from 'react';\nimport JSONInput from 'react-json-editor';\nimport { format } from 'react-json-editor/dist/locale';\nimport defaultLocale from 'react-json-editor/dist/locale/en';\nimport {\n  // Helpers\n  countCarrigeReturn, isFunction, mergeObjects, safeGet,\n  // Helpers/Interfaces\n  DomNode, Placeholder, Tokens\n} from 'react-json-editor/dist/utils';\n\n// import { DomNode_Update, JSON_Placeholder } from '/tokenize';\n\nclass JADNInput extends JSONInput {\n  tokenizeDomNode(obj: HTMLDivElement): null|DomNode.DomNodeTokenize {\n    const { locale } = this.props;\n    const lang = locale || defaultLocale;\n    const containerNode = obj.cloneNode(true);\n    if (!containerNode.hasChildNodes()) {\n      return null;\n    }\n\n    const children = containerNode.childNodes;\n    const buffer: DomNode.PrimaryBuffer = {\n      tokens_unknown: [],\n      tokens_proto: [],\n      tokens_split: [],\n      tokens_fallback: [],\n      tokens_normalize: [],\n      tokens_merge: [],\n      tokens_plainText: '',\n      indented: '',\n      json: '',\n      jsObject: {},\n      markup: ''\n    };\n\n    const setChildToken = (child: ChildNode): void => {\n      switch (child.nodeName) {\n        case 'SPAN':\n          const dataset = (child as HTMLDivElement).dataset;\n          buffer.tokens_unknown.push({\n            string: child.textContent || '',\n            type: dataset.type || 'unknown'  // child.attributes.type.textContent\n          } as Tokens.SimpleToken);\n          break;\n        case 'DIV':\n          child.childNodes.forEach(c => setChildToken(c));\n          buffer.tokens_unknown.push({\n            string: '\\n',\n            type: 'unknown'\n          } as Tokens.SimpleToken);\n          break;\n        case 'BR':\n          if (child.textContent === '') {\n            buffer.tokens_unknown.push({\n              string: '\\n',\n              type: 'unknown'\n            } as Tokens.SimpleToken);\n          }\n          break;\n        case '#text':\n          buffer.tokens_unknown.push({\n            string: child.textContent || '',  // child.wholeText,\n            type: 'unknown'\n          } as Tokens.SimpleToken);\n          break;\n        case 'FONT':\n          buffer.tokens_unknown.push({\n            string: child.textContent || '',\n            type: 'unknown'\n          } as Tokens.SimpleToken);\n          break;\n        default:\n          console.error('Unrecognized node:', { child });\n      }\n    };\n\n    children.forEach(child => setChildToken(child));\n\n    buffer.tokens_proto = buffer.tokens_unknown.map(token => DomNode.quarkize(token.string, 'proto')).reduce((all, quarks) => all.concat(quarks));\n\n    buffer.tokens_proto.forEach(token => {\n      if (!token.type.includes('proto')) {\n        if (!DomNode.validToken(token.string, token.type as Tokens.TokenType)) {\n          buffer.tokens_split = buffer.tokens_split.concat(DomNode.quarkize(token.string, 'split'));\n        } else {\n          buffer.tokens_split.push(token);\n        }\n      } else {\n        buffer.tokens_split.push(token);\n      }\n    });\n\n    buffer.tokens_fallback = buffer.tokens_split.map<Tokens.FallbackToken>(token => {\n      const fallback = [];\n      let { type } = token;\n\n      if (type.includes('-')) {\n        type = type.slice(type.indexOf('-') + 1);\n        if (type !== 'string') {\n          fallback.push('string');\n        }\n        fallback.push('key');\n        fallback.push('error');\n      }\n      return {\n        string: token.string,\n        length: token.string.length,\n        fallback,\n        type\n      } as Tokens.FallbackToken;\n    });\n\n    const buffer2: DomNode.SecondaryBuffer = {\n      brackets: [],\n      isValue: false,\n      stringOpen: false\n    };\n\n    // Sort tokens for push -> buffer.tokens_normalize\n    for (let i = 0; i < buffer.tokens_fallback.length; i++) {\n      const token = buffer.tokens_fallback[i];\n      const lastIndex = buffer.tokens_normalize.length - 1;\n      const lastType = safeGet(Tokens.tokenFollowed(buffer.tokens_normalize) || {}, 'type', 'string') as Tokens.TokenType;\n      const normalToken = {\n        string: token.string,\n        type: token.type\n      };\n\n      switch (normalToken.type) {\n        case 'symbol':\n        case 'colon':\n          if (buffer2.stringOpen) {\n            normalToken.type = buffer2.isValue ? 'string' : 'key';\n            break;\n          }\n          switch (normalToken.string) {\n            case '[':\n            case '{':\n              buffer2.brackets.push(normalToken.string);\n              buffer2.isValue = buffer2.brackets[buffer2.brackets.length-1] === '[';\n              break;\n            case ']':\n            case '}':\n              buffer2.brackets.pop();\n              buffer2.isValue = buffer2.brackets[buffer2.brackets.length-1] === '[';\n              break;\n            case ',':\n              if (lastType === 'colon') {\n                break;\n              }\n              buffer2.isValue = buffer2.brackets[buffer2.brackets.length-1] === '[';\n              break;\n            case ':':\n              normalToken.type = 'colon';\n              buffer2.isValue = true;\n              break;\n            // no default\n          }\n          break;\n        case 'delimiter':\n          normalToken.type = buffer2.isValue ? 'string' : 'key';\n          if (!buffer2.stringOpen) {\n            buffer2.stringOpen = normalToken.string;\n            break;\n          }\n          if (i > 0) {\n            const prevToken = Tokens.precedingToken(buffer.tokens_fallback, i) || {};\n            const prevTokenString = safeGet(prevToken, 'string', '') as string;\n            const prevTokenType = safeGet(prevToken, 'type', '') as Tokens.TokenType;\n            const prevTokenChar = prevTokenString.charAt(prevTokenString.length - 1);\n            if (prevTokenType === 'string' && prevTokenChar === '\\\\') {\n              break;\n            }\n          }\n          if (buffer2.stringOpen === normalToken.string) {\n            buffer2.stringOpen = false;\n            break;\n          }\n          break;\n        case 'primitive':\n        case 'string':\n          if (['false', 'true', 'null', 'undefined'].includes(normalToken.string)) {\n            if (lastIndex >= 0) {\n              if (buffer.tokens_normalize[lastIndex].type !== 'string') {\n                normalToken.type = 'primitive';\n                break;\n              }\n              normalToken.type = 'string';\n              break;\n            }\n            normalToken.type = 'primitive';\n            break;\n          }\n          if (normalToken.string === '\\n' && !buffer2.stringOpen) {\n            normalToken.type = 'linebreak';\n            break;\n          }\n          normalToken.type = buffer2.isValue ? 'string' : 'key';\n          break;\n        case 'space':\n        case 'number':\n          if (buffer2.stringOpen) {\n            normalToken.type = buffer2.isValue ? 'string' : 'key';\n          }\n          break;\n        // no default\n      }\n      buffer.tokens_normalize.push(normalToken);\n    }\n\n    // Sort tokens for push -> buffer.tokens_merge\n    for (let i = 0; i < buffer.tokens_normalize.length; i++) {\n      const token = buffer.tokens_normalize[i];\n      const mergedToken: Tokens.MergeToken = {\n        string: token.string,\n        tokens: [i],\n        type: token.type\n      };\n\n      if (!['symbol', 'colon'].includes(token.type) && i + 1 < buffer.tokens_normalize.length) {\n        let count = 0;\n        for (let u = i + 1; u < buffer.tokens_normalize.length; u++) {\n          const nextToken = buffer.tokens_normalize[u];\n          if (token.type !== nextToken.type) {\n            break;\n          }\n          mergedToken.string += nextToken.string;\n          mergedToken.tokens.push(u);\n          count += 1;\n        }\n        i += count;\n      }\n      buffer.tokens_merge.push(mergedToken);\n    }\n\n    const alphanumeric = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_$';\n    const bracketList: Array<DomNode.Bracket> = [];\n    const quotes = '\\'\"';\n    let errorMsg: undefined|Tokens.ErrorMsg;\n    let line = buffer.tokens_merge.length > 0 ? 1 : 0;\n\n    // Reset Buffer2\n    buffer2.brackets = [];\n    buffer2.isValue = false;\n    buffer2.stringOpen = false;\n\n    const setError = (tokenID: number, reason: string, offset = 0): void => {\n      errorMsg = {\n        token: tokenID,\n        line,\n        reason\n      };\n      buffer.tokens_merge[tokenID+offset].type = 'error';\n    };\n\n    // TODO: Simplify loop\n    for (let i = 0; i < buffer.tokens_merge.length; i++) {\n      if (errorMsg) {\n        break;\n      }\n      const token = buffer.tokens_merge[i];\n      let { string, type } = token;\n      let found = false;\n\n      switch (type) {\n        case 'space':\n          break;\n        case 'linebreak':\n          line += 1;\n          break;\n        case 'symbol':\n          switch (string) {\n            case '{':\n            case '[':\n              found = Tokens.followsSymbol(buffer.tokens_merge, i, ['}', ']']);\n              if (found) {\n                setError(i, format(lang.invalidToken.tokenSequence.prohibited, {\n                  firstToken: buffer.tokens_merge[i].string,  // TODO: should `i` be `found`??\n                  secondToken: string\n                }));\n                break;\n              }\n              if (string === '[' && i > 0) {\n                if (!Tokens.followsSymbol(buffer.tokens_merge, i, [':', '[', ','])) {\n                  setError(i, format(lang.invalidToken.tokenSequence.permitted, {\n                    firstToken: '[',\n                    secondToken: [':', '[', ',']\n                  }));\n                  break;\n                }\n              }\n              if (string === '{') {\n                if (Tokens.followsSymbol(buffer.tokens_merge, i, ['{'])) {\n                  setError(i, format(lang.invalidToken.double, {\n                    token: '{'\n                  }));\n                  break;\n                }\n              }\n              buffer2.brackets.push(string);\n              buffer2.isValue = buffer2.brackets[buffer2.brackets.length-1] === '[';\n              bracketList.push({ i, line, string });\n              break;\n            case '}':\n            case ']':\n              if (string === '}') {\n                if (buffer2.brackets[buffer2.brackets.length-1] !== '{') {\n                  setError(i, format(lang.brace.curly.missingOpen));\n                  break;\n                }\n                if (Tokens.followsSymbol(buffer.tokens_merge, i, [','])) {\n                  setError(i, format(lang.invalidToken.tokenSequence.prohibited, {\n                    firstToken: ',',\n                    secondToken: '}'\n                  }));\n                  break;\n                }\n              }\n              if (string === ']') {\n                if (buffer2.brackets[buffer2.brackets.length-1] !== '[') {\n                  setError(i, format(lang.brace.square.missingOpen));\n                  break;\n                }\n                if (Tokens.followsSymbol(buffer.tokens_merge, i, [':'])) {\n                  setError(i, format(lang.invalidToken.tokenSequence.prohibited, {\n                    firstToken: ':',\n                    secondToken: ']'\n                  }));\n                  break;\n                }\n              }\n              buffer2.brackets.pop();\n              buffer2.isValue = buffer2.brackets[buffer2.brackets.length-1] === '[';\n              bracketList.push({ i, line, string });\n              break;\n            case ',':\n              found = Tokens.followsSymbol(buffer.tokens_merge, i, ['{']);\n              if (found) {\n                if (Tokens.followedBySymbol(buffer.tokens_merge, i, ['}'])) {\n                  setError(i, format(lang.brace.curly.cannotWrap, {\n                    token: ','\n                  }));\n                  break;\n                }\n                setError(i, format(lang.invalidToken.tokenSequence.prohibited, {\n                  firstToken: '{',\n                  secondToken: ','\n                }));\n                break;\n              }\n              if (Tokens.followedBySymbol(buffer.tokens_merge, i, ['}', ',', ']'])) {\n                setError(i, format(lang.noTrailingOrLeadingComma));\n                break;\n              }\n              const typeFollow = Tokens.typeFollowed(buffer.tokens_merge, i);\n              switch (typeFollow) {\n                case 'key':\n                case 'colon':\n                  setError(i, format(lang.invalidToken.termSequence.prohibited, {\n                    firstTerm: typeFollow === 'key' ? lang.types.key : lang.symbols.colon,\n                    secondTerm: lang.symbols.comma\n                  }));\n                  break;\n                case 'symbol':\n                  if (Tokens.followsSymbol(buffer.tokens_merge, i, ['{'])) {\n                    setError(i, format(lang.invalidToken.tokenSequence.prohibited, {\n                      firstToken: '{',\n                      secondToken: ','\n                    }));\n                    break;\n                  }\n                  break;\n                // no default\n              }\n              buffer2.isValue = buffer2.brackets[buffer2.brackets.length-1] === '[';\n              break;\n            // no default\n          }\n          buffer.json += string;\n          break;\n        case 'colon':\n          found = Tokens.followsSymbol(buffer.tokens_merge, i, ['[']);\n          if (found) {\n            if (Tokens.followedBySymbol(buffer.tokens_merge, i, [']'])) {\n              setError(i, format(lang.brace.square.cannotWrap, {\n                token: ':'\n              }));\n              break;\n            }\n            setError(i, format(lang.invalidToken.tokenSequence.prohibited, {\n              firstToken: '[',\n              secondToken: ':'\n            }));\n            break;\n          }\n          if (Tokens.typeFollowed(buffer.tokens_merge, i) !== 'key') {\n            setError(i, format(lang.invalidToken.termSequence.permitted, {\n              firstTerm: lang.symbols.colon,\n              secondTerm: lang.types.key\n            }));\n            break;\n          }\n          if (Tokens.followedBySymbol(buffer.tokens_merge, i, ['}', ']'])) {\n            setError(i, format(lang.invalidToken.termSequence.permitted, {\n              firstTerm: lang.symbols.colon,\n              secondTerm: lang.types.value\n            }));\n            break;\n          }\n          buffer2.isValue = true;\n          buffer.json += string;\n          break;\n        case 'key':\n        case 'string':\n          const firstChar = string.charAt(0);\n          const lastChar = string.charAt(string.length-1);\n          if (!quotes.includes(firstChar)) {\n            if (quotes.includes(lastChar)) {\n              setError(i, format(lang.string.missingOpen, {\n                quote: firstChar\n              }));\n              break;\n            }\n          }\n          if (!quotes.includes(lastChar)) {\n            if (quotes.includes(firstChar)) {\n              setError(i, format(lang.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n          }\n          if (quotes.includes(firstChar)) {\n            if (firstChar !== lastChar) {\n              setError(i, format(lang.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n          }\n          if (type === 'string') {\n            if (!quotes.includes(firstChar) && !quotes.includes(lastChar)) {\n              setError(i, format(lang.string.mustBeWrappedByQuotes));\n              break;\n            }\n          }\n          if (type === 'key') {\n            if (Tokens.followedBySymbol(buffer.tokens_merge, i, ['}', ']'])) {\n              setError(i, format(lang.invalidToken.termSequence.permitted, {\n                firstTerm: lang.types.key,\n                secondTerm: lang.symbols.colon\n              }));\n            }\n          }\n          if (!quotes.includes(firstChar) && !quotes.includes(lastChar)) {\n            for (let h = 0; h < string.length; h++) {\n              if (errorMsg) {\n                break;\n              }\n              const c = string.charAt(h);\n              if (!alphanumeric.includes(c)) {\n                setError(i, format(lang.string.nonAlphanumeric, {\n                  token: c\n                }));\n                break;\n              }\n            }\n          }\n          if (type === 'key') {\n            if (Tokens.typeFollowed(buffer.tokens_merge, i) === 'key') {\n              if (i > 0) {\n                if (!Number.isNaN(Number(buffer.tokens_merge[i-1]))) {\n                  mergeObjects(buffer.tokens_merge[i-1], buffer.tokens_merge[i]);\n                  setError(i, format(lang.key.numberAndLetterMissingQuotes));\n                  break;\n                }\n              }\n              setError(i, format(lang.key.spaceMissingQuotes));\n              break;\n            }\n            if (!Tokens.followsSymbol(buffer.tokens_merge, i, ['{', ','])) {\n              setError(i, format(lang.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: ['{', ',']\n              }));\n              break;\n            }\n          }\n          if (type === 'string') {\n            if (!Tokens.followsSymbol(buffer.tokens_merge, i, ['[', ':', ','])) {\n              setError(i, format(lang.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: ['[', ':', ',']\n              }));\n              break;\n            }\n          }\n          if (type === 'key' && buffer2.isValue) {\n            setError(i, format(lang.string.unexpectedKey));\n            break;\n          }\n          if (type === 'string' && !buffer2.isValue) {\n            setError(i, format(lang.key.unexpectedString));\n            break;\n          }\n          if (firstChar === \"'\") {\n            string = `\"${string.slice(1, -1)}\"`;\n          } else if (firstChar !== '\"') {\n            string = `\"${string}\"`;\n          }\n          buffer.json += string;\n          break;\n        case 'number':\n        case 'primitive':\n          if (Tokens.followsSymbol(buffer.tokens_merge, i, ['{'])) {\n            buffer.tokens_merge[i].type = 'key';\n            type = buffer.tokens_merge[i].type;\n            string = `\"${string}\"`;\n          } else if (Tokens.typeFollowed(buffer.tokens_merge, i) === 'key') {\n            buffer.tokens_merge[i].type = 'key';\n            type = buffer.tokens_merge[i].type;\n          } else if (!Tokens.followsSymbol(buffer.tokens_merge, i, ['[', ':', ','])) {\n            setError(i, format(lang.invalidToken.tokenSequence.permitted, {\n              firstToken: type,\n              secondToken: ['[', ':', ',']\n            }));\n            break;\n          }\n          if (type !== 'key' && !buffer2.isValue) {\n            buffer.tokens_merge[i].type = 'key';\n            type = buffer.tokens_merge[i].type;\n            string = `\"${string}\"`;\n          }\n          if (type === 'primitive' && string === 'undefined') {\n            setError(i, format(lang.invalidToken.useInstead, {\n              badToken: 'undefined',\n              goodToken: 'null'\n            }));\n          }\n          buffer.json += string;\n          break;\n        // no default\n      }\n    }\n\n    let noEscapedSingleQuote = '';\n    for (let i = 0; i < buffer.json.length; i++) {\n      const current = buffer.json.charAt(i);\n      const next = buffer.json.charAt(i+1) || '';\n      if (i + 1 < buffer.json.length) {\n        if (current === '\\\\' && next === \"'\") {\n          noEscapedSingleQuote += next;\n          i += 1;\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n      }\n      noEscapedSingleQuote += current;\n    }\n\n    buffer.json = noEscapedSingleQuote;\n    if (errorMsg === undefined) {\n      const maxIterations = Math.ceil(bracketList.length / 2);\n      let round = 0;\n      let delta = false;\n\n      const removePair = (index: number) => {\n        bracketList.splice(index+1, 1);\n        bracketList.splice(index, 1);\n        if (!delta) {\n          delta = true;\n        }\n      };\n\n      while (bracketList.length > 0) {\n        delta = false;\n        for (let tokenCount = 0; tokenCount < bracketList.length-1; tokenCount++) {\n          const pair = bracketList[tokenCount].string + bracketList[tokenCount+1].string;\n          if (['[]', '{}'].includes(pair)) {\n            removePair(tokenCount);\n          }\n        }\n        round += 1;\n        if (!delta || round >= maxIterations) {\n          break;\n        }\n      }\n\n      if (bracketList.length > 0) {\n        const bracketString = bracketList[0].string;\n        const bracketPosition = bracketList[0].i;\n        const closingBracketType = bracketString === '[' ? ']' : '}';\n        line = bracketList[0].line;\n        setError(bracketPosition, format(lang.brace[closingBracketType === ']' ? 'square' : 'curly'].missingClose));\n      }\n    }\n\n    if (errorMsg === undefined) {\n      if (![undefined, ''].includes(buffer.json)) {\n        try {\n          buffer.jsObject = JSON.parse(buffer.json) as Record<string, any>;\n        } catch (err) {\n          const errorMessage = (err as Error).message;\n          const subsMark = errorMessage.indexOf('position');\n          if (subsMark === -1) {\n            throw new Error('Error parsing failed');\n          }\n\n          const errPositionStr = errorMessage.substring(subsMark + 9, errorMessage.length);\n          const errPosition = parseInt(errPositionStr, 10);\n          let charTotal = 0;\n          let tokenIndex = 0;\n          let token: Tokens.MergeToken = buffer.tokens_merge[tokenIndex];\n          let lineCount = 1;\n          let exitWhile = false;\n\n          while (charTotal < errPosition && !exitWhile) {\n            token = buffer.tokens_merge[tokenIndex];\n            if (token.type === 'linebreak') {\n              lineCount += 1;\n            }\n            if (!['space', 'linebreak'].includes(token.type)) {\n              charTotal += token.string.length;\n            }\n            if (charTotal >= errPosition) {\n              break;\n            }\n            tokenIndex += 1;\n            if (!buffer.tokens_merge[tokenIndex+1]) {\n              exitWhile = true;\n            }\n          }\n\n          line = lineCount;\n          let backslashCount = 0;\n          for (let i = 0; i < token.string.length; i++) {\n            const char = token.string.charAt(i);\n            if (char === '\\\\') {\n              backslashCount = backslashCount > 0 ? backslashCount + 1 : 1;\n            } else {\n              if (backslashCount % 2 !== 0 || backslashCount === 0) {\n                if (!'\\'\"bfnrt'.includes(char)) {\n                  setError(tokenIndex, format(lang.invalidToken.unexpected, {\n                    token: '\\\\'\n                  }));\n                }\n              }\n              backslashCount = 0;\n            }\n          }\n          if (errorMsg === undefined) {\n            setError(tokenIndex, format(lang.invalidToken.unexpected, {\n              token: token.string\n            }));\n          }\n        }\n      }\n    }\n\n    let lines = 1;\n    let depth = 0;\n    const newIndent = () => Array(depth * 2).fill('&nbsp;').join('');\n    const newLineBreak = (byPass = false) => {\n      lines += 1;\n      return (depth > 0 || byPass) ? '</div><div>' : '';\n    };\n    const newLineBreakAndIndent = (byPass = false) => `${newLineBreak(byPass)}${newIndent()}`;\n\n    if (errorMsg === undefined) {\n      const lastMergeIdx = buffer.tokens_merge.length - 1;\n      buffer.markup += '<div>';\n\n      // Format by Token\n      buffer.tokens_merge.forEach((token, i) => {\n        const { string, type } = token;\n        const islastToken = i === lastMergeIdx;\n\n        switch (type) {\n          case 'string':\n          case 'number':\n          case 'primitive':\n          case 'error':\n            //buffer.markup += Tokens.followsSymbol(buffer.tokens_merge, i, [',', '[']) ? newLineBreakAndIndent() : '';\n            buffer.markup += this.newSpan(i, token, depth);\n            break;\n          case 'key':\n            buffer.markup += `${newLineBreakAndIndent()}${this.newSpan(i, token, depth)}`;\n            break;\n          case 'colon':\n            buffer.markup += `${this.newSpan(i, token, depth)}&nbsp;`;\n            break;\n          case 'symbol':\n            switch (string) {\n              case '{':\n                buffer.markup += this.newSpan(i, token, depth);\n                depth += 1;\n                break;\n              case '}':\n                depth = depth > 0 ? depth - 1 : depth;\n                const _adjustment = i > 0 ? Tokens.followsSymbol(buffer.tokens_merge, i, ['[', '{'])  ? '' : newLineBreakAndIndent(islastToken) : '';\n                \n                buffer.markup += `${_adjustment}${this.newSpan(i, token, depth)}`;\n                break;\n              case '[':\n                if (Tokens.followsSymbol(buffer.tokens_merge, i, ['['])) {\n                  depth += 1;\n                  buffer.markup += newLineBreakAndIndent();\n                }\n                buffer.markup += this.newSpan(i, token, depth);\n                break;\n              case ']':\n                let ind_bool = false;\n                \n                if (Tokens.followsSymbol(buffer.tokens_merge, i, [']'])) {\n                  if (Tokens.followedBySymbol(buffer.tokens_merge, i, [']'])) {\n                    if (Tokens.followedBySymbol(buffer.tokens_merge, i+1, [','])) {\n                      depth = depth >= 1 ? depth - 1 : depth;\n                      ind_bool = true;\n                      i++;\n                    } else if (Tokens.followedBySymbol(buffer.tokens_merge, i+1, [']'])) {\n                      depth = depth >= 1 ? depth - 1 : depth;\n                      ind_bool = true;\n                    }\n                  } else if (Tokens.followedBySymbol(buffer.tokens_merge, i, ['}'])) {\n                    depth = depth >= 1 ? depth - 1 : depth;\n                    ind_bool = true;\n                  }\n                }\n                \n                buffer.markup += `${ind_bool ? newLineBreakAndIndent() : ''}${this.newSpan(i, token, depth)}`;\n                break;\n              case ',':\n                buffer.markup += this.newSpan(i, token, depth);\n                if (Tokens.followsSymbol(buffer.tokens_merge, i, [']']) && Tokens.followedBySymbol(buffer.tokens_merge, i, ['['])) {\n                  buffer.markup += newLineBreakAndIndent();\n                }\n                break;\n              default:\n                buffer.markup += this.newSpan(i, token, depth);\n                break;\n            }\n            break;\n        }\n      });\n      buffer.markup += '</div>';\n      // TODO: update line count logic\n      // lnes += (markup.match(/<\\/div><div>/g) || []).length\n    }\n\n    if (errorMsg !== undefined) {\n      let lineFallback = 1;\n      lines = 1;\n      buffer.markup += '<div>';\n\n      buffer.tokens_merge.forEach((token, i) => {\n        const { string, type } = token;\n        if (type === 'linebreak') {\n          lines += 1;\n          buffer.markup += '</div><div>';\n        } else {\n          buffer.markup += this.newSpan(i, token, depth);\n        }\n        lineFallback += countCarrigeReturn(string);\n      });\n\n      buffer.markup += '</div>';\n      lines += 1;\n      // TODO: update line count logic\n      // lnes += (markup.match(/<\\/div><div>/g) || []).length\n      lineFallback += 1;\n      if (lines < lineFallback) {\n        lines = lineFallback;\n      }\n    }\n\n    buffer.tokens_merge.forEach(token => {\n      const { string, type } = token;\n      buffer.indented += string;\n      if (!['space', 'linebreak'].includes(type)) {\n        buffer.tokens_plainText += string;\n      }\n    });\n\n    if (errorMsg !== undefined) {\n      const { modifyErrorText } = this.props;\n      if (modifyErrorText && isFunction(modifyErrorText)) {\n        errorMsg.reason = modifyErrorText(errorMsg.reason);\n      }\n    }\n\n    return {\n      tokens: buffer.tokens_merge,\n      noSpaces: buffer.tokens_plainText,\n      indented: buffer.indented,\n      json: buffer.json,\n      jsObject: buffer.jsObject,\n      markup: buffer.markup,\n      lines,\n      error: errorMsg\n    };\n  }\n\n  tokenizePlaceholder(obj: Record<string, any>): null|Placeholder.PlaceholderTokenize {\n    const buffer: Placeholder.PrimaryBuffer = {\n      inputText: JSON.stringify(obj),\n      position: 0,\n      currentChar: '',\n      tokenPrimary: '',\n      tokenSecondary: '',\n      brackets: [],\n      isValue: false,\n      stringOpen: null,\n      stringStart: 0,\n      tokens: []\n    };\n\n    buffer.inputText.split('').forEach((char, i) => {\n      buffer.position = i;\n      buffer.currentChar = char;\n      const a = Placeholder.determineValue(buffer);\n      const b = Placeholder.determineString(buffer);\n      const c = Placeholder.escapeCharacter(buffer);\n      if (!a && !b && !c) {\n        if (!buffer.stringOpen) {\n          buffer.tokenSecondary += buffer.currentChar;\n        }\n      }\n    });\n    \n    const buffer2: Placeholder.SecondaryBuffer = {\n      brackets: [],\n      isValue: false,\n      tokens: []\n    };\n\n    buffer2.tokens = buffer.tokens.map<Tokens.MarkupToken>(token => {\n      const rtnToken: Tokens.MarkupToken = {\n        depth: 0,\n        string: '',\n        type: 'undefined',\n        value: ''\n      };\n\n      switch (token) {\n        case ',':\n          rtnToken.type = 'symbol';\n          rtnToken.string = token;\n          rtnToken.value = token;\n          buffer2.isValue = buffer2.brackets[buffer2.brackets.length-1] === '[';\n          break;\n        case ':':\n          rtnToken.type = 'symbol';\n          rtnToken.string = token;\n          rtnToken.value = token;\n          buffer2.isValue = true;\n          break;\n        case '{':\n        case '[' :\n          rtnToken.type = 'symbol';\n          rtnToken.string = token;\n          rtnToken.value = token;\n          buffer2.brackets.push(token);\n          buffer2.isValue = buffer2.brackets[buffer2.brackets.length-1] === '[';\n          break;\n        case '}':\n        case ']':\n          rtnToken.type = 'symbol';\n          rtnToken.string = token;\n          rtnToken.value = token;\n          buffer2.brackets.pop();\n          buffer2.isValue = buffer2.brackets[buffer2.brackets.length-1] === '[';\n          break;\n        case 'undefined':\n          rtnToken.type = 'primitive';\n          rtnToken.string = token;\n          rtnToken.value = undefined;\n          break;\n        case 'null':\n          rtnToken.type = 'primitive';\n          rtnToken.string = token;\n          rtnToken.value = null;\n          break;\n        case 'false':\n          rtnToken.type = 'primitive';\n          rtnToken.string = token;\n          rtnToken.value = false;\n          break;\n        case 'true':\n          rtnToken.type = 'primitive';\n          rtnToken.string = token;\n          rtnToken.value = true;\n          break;\n        default:\n          if ('\\'\"'.includes(token.charAt(0))) {\n            rtnToken.type = buffer2.isValue ? 'string' : 'key';\n            if (rtnToken.type === 'key') {\n              rtnToken.string = Placeholder.stripQuotesFromKey(token);\n            }\n            if (rtnToken.type === 'string') {\n              rtnToken.string = '';\n              const charList2 = token.slice(1, -1).split('');\n              for (let ii = 0; ii < charList2.length; ii++) {\n                const char = charList2[ii];\n                rtnToken.string += '\\'\"'.includes(char) ? `\\\\${char}` : char;\n              }\n              rtnToken.string = `'${rtnToken.string}'`;\n            }\n            rtnToken.value = rtnToken.string;\n          } else if (!Number.isNaN(Number(token))) {\n            rtnToken.type = 'number';\n            rtnToken.string = token;\n            rtnToken.value = Number(token);\n          } else if (token.length > 0 && !buffer2.isValue) {\n            rtnToken.type = 'key';\n            rtnToken.string = token.includes(' ') ? `'${token}'` : token;\n            rtnToken.value = rtnToken.string;\n          }\n      }\n      rtnToken.depth = buffer2.brackets.length;\n      return rtnToken;\n    });\n\n    const clean = buffer2.tokens.map(t => t.string).join('');\n    const lastIndex = buffer2.tokens.length - 1;\n    let indentation = '';\n    let lines = 1;\n    let markup = '<div>';\n\n    const indent = (num: number, byPass=false) => `${(num > 0 || byPass) ? '\\n' : ''}${Array(num * 2).fill(' ').join('')}`;\n    const indentII = (num: number, byPass=false) => {\n      lines += num > 0 ? 1 : 0;\n      return `${(num > 0 || byPass) ? '</div><div>' : ''}${Array(num * 2).fill('&nbsp;').join('')}`;\n    };\n    \n    // Format by Token\n    let depth = 0\n    buffer2.tokens.forEach((token, i) => {\n      const { string, type } = token;\n\t\t\tconst islastToken = i === lastIndex\n\n      switch(type) {\n        case 'string':\n        case 'number':\n          indentation += string;\n          markup += this.newSpan(i, token, depth);\n          break;\n        case 'key':\n          indentation += `${indent(depth)}${string}`;\n          markup += `${indentII(depth)}${this.newSpan(i, token, depth)}`;\n          break;\n        case 'symbol':\n          switch(token.string) {\n            case '{':\n              indentation += string\n              markup += this.newSpan(i, token, depth)\n              depth++;\n              if (Tokens.followedBySymbol(buffer2.tokens, i, ['}'])) {\n                indentation += indent(depth);\n                markup += indentII(depth);\n              }\n              break;\n            case '}':\n              depth = depth >= 1 ? depth - 1 : depth;\n              const _adjustment = i > 0 ? Tokens.followsSymbol(buffer2.tokens, i, ['[', '{']) ? '' : indent(depth, islastToken) : '';\n              const _adjustmentII = i > 0 ? Tokens.followsSymbol(buffer2.tokens, i, ['[', '{']) ? '' : indentII(depth, islastToken) : '';\n              \n              indentation += `${_adjustment}${string}`;\n              markup += `${_adjustmentII}${this.newSpan(i, token, depth)}`;\n              break;\n            case '[':\n              if (Tokens.followsSymbol(buffer2.tokens, i, ['['])) {\n                depth++;\n                indentation += indent(depth);\n                markup += indentII(depth);\n              }\n              indentation += token.string;\n              markup += this.newSpan(i, token, depth);\n              break;\n            case ']':\n              let ind_bool = false;\n              if (Tokens.followsSymbol(buffer2.tokens, i, [']'])) {\n                if (Tokens.followedBySymbol(buffer2.tokens, i, [']'])) {\n                  if (Tokens.followedBySymbol(buffer2.tokens, i+1, [','])) {\n                    depth = depth >= 1 ? depth - 1 : depth;\n                    ind_bool = true;\n                    i++;\n                  } else if (Tokens.followedBySymbol(buffer2.tokens, i+1, [']'])) {\n                    depth = depth >= 1 ? depth - 1 : depth;\n                    ind_bool = true;\n                  }\n                } else if (Tokens.followedBySymbol(buffer2.tokens, i, ['}'])) {\n                  depth = depth >= 1 ? depth - 1 : depth;\n                  ind_bool = true;\n                }\n              }\n              indentation += `${ind_bool ? indent(depth) : ''}${string}`;\n              markup += `${ind_bool ? indentII(depth) : ''}${this.newSpan(i, token, depth)}`;\n              break;\n            case ':':\n              indentation += token.string + ' ';\n              markup += `${this.newSpan(i, token, depth)}&nbsp;`;\n              break;\n            case ',':\n              indentation += token.string;\n              markup += this.newSpan(i, token, depth);\n              if (Tokens.followsSymbol(buffer2.tokens, i, [']']) && Tokens.followedBySymbol(buffer2.tokens, i, ['['])) {\n                indentation += indent(depth);\n                markup += indentII(depth);\n              }\n              break;\n            default:\n              indentation += token.string;\n              markup += this.newSpan(i, token, depth);\n              break;\n          }\n          break;\n      }\n    });\n    lines += 2;\n    // TODO: update line count logic\n    // lnes += (markup.match(/<\\/div><div>/g) || []).length\n    markup += '</div>';\n\n    return {\n      tokens: buffer2.tokens,\n      noSpaces: clean,\n      indented: indentation,\n      json: JSON.stringify(obj),\n      jsObject: obj,\n      markup: markup,\n      lines\n    };\n  }\n}\n\nexport default JADNInput;",{"ruleId":"1017","severity":2,"message":"1018","line":18,"column":20,"nodeType":"1019","endLine":18,"endColumn":52},{"ruleId":"1020","severity":2,"message":"1021","line":23,"column":24,"nodeType":"1019","endLine":23,"endColumn":43},{"ruleId":"1022","severity":2,"message":"1023","line":92,"column":13,"nodeType":"1024","messageId":"1025","endLine":92,"endColumn":17},{"ruleId":"1022","severity":2,"message":"1026","line":92,"column":19,"nodeType":"1024","messageId":"1025","endLine":92,"endColumn":28},{"ruleId":"1022","severity":2,"message":"1027","line":109,"column":13,"nodeType":"1024","messageId":"1025","endLine":109,"endColumn":26},{"ruleId":"1022","severity":2,"message":"1028","line":109,"column":28,"nodeType":"1024","messageId":"1025","endLine":109,"endColumn":39},{"ruleId":"1022","severity":2,"message":"1029","line":109,"column":42,"nodeType":"1024","messageId":"1025","endLine":109,"endColumn":56},{"ruleId":"1030","severity":2,"message":"1031","line":118,"column":15,"nodeType":"1032","messageId":"1033","endLine":118,"endColumn":37},{"ruleId":"1034","severity":2,"message":"1035","line":123,"column":5,"nodeType":"1036","messageId":"1037","endLine":133,"endColumn":8},{"ruleId":"1038","severity":2,"message":"1039","line":124,"column":7,"nodeType":"1040","endLine":132,"endColumn":8},{"ruleId":"1022","severity":2,"message":"1041","line":124,"column":23,"nodeType":"1042","messageId":"1025","endLine":124,"endColumn":33},{"ruleId":"1022","severity":2,"message":"1043","line":131,"column":32,"nodeType":"1042","messageId":"1025","endLine":131,"endColumn":41},{"ruleId":"1022","severity":2,"message":"1041","line":131,"column":79,"nodeType":"1042","messageId":"1025","endLine":131,"endColumn":89},{"ruleId":"1044","severity":2,"message":"1045","line":158,"column":22,"nodeType":"1046","messageId":"1047","endLine":158,"endColumn":83},{"ruleId":"1048","severity":2,"message":"1049","line":159,"column":13,"nodeType":"1050","messageId":"1051","endLine":159,"endColumn":49,"fix":"1052"},{"ruleId":"1044","severity":2,"message":"1053","line":159,"column":24,"nodeType":"1046","messageId":"1047","endLine":159,"endColumn":40},{"ruleId":"1054","severity":2,"message":"1055","line":162,"column":13,"nodeType":"1042","messageId":"1056","endLine":162,"endColumn":19},{"ruleId":"1057","severity":2,"message":"1058","line":162,"column":13,"nodeType":"1042","messageId":"1059","endLine":162,"endColumn":19,"fix":"1060"},{"ruleId":"1061","severity":2,"message":"1062","line":162,"column":13,"nodeType":"1042","messageId":"1056","endLine":162,"endColumn":19},{"ruleId":"1048","severity":2,"message":"1063","line":164,"column":11,"nodeType":"1064","messageId":"1051","endLine":164,"endColumn":49},{"ruleId":"1034","severity":2,"message":"1035","line":168,"column":11,"nodeType":"1036","messageId":"1037","endLine":176,"endColumn":14},{"ruleId":"1044","severity":2,"message":"1045","line":168,"column":11,"nodeType":"1046","messageId":"1047","endLine":168,"endColumn":30},{"ruleId":"1022","severity":2,"message":"1065","line":168,"column":22,"nodeType":"1042","messageId":"1025","endLine":168,"endColumn":30},{"ruleId":"1038","severity":2,"message":"1039","line":168,"column":58,"nodeType":"1066","endLine":176,"endColumn":12},{"ruleId":"1044","severity":2,"message":"1045","line":173,"column":25,"nodeType":"1046","messageId":"1047","endLine":173,"endColumn":86},{"ruleId":"1044","severity":2,"message":"1045","line":181,"column":23,"nodeType":"1046","messageId":"1047","endLine":181,"endColumn":84},{"ruleId":"1067","severity":1,"message":"1068","line":196,"column":26,"nodeType":"1042","messageId":"1069","endLine":196,"endColumn":29},{"ruleId":"1067","severity":1,"message":"1070","line":196,"column":31,"nodeType":"1042","messageId":"1069","endLine":196,"endColumn":34},{"ruleId":"1054","severity":2,"message":"1071","line":200,"column":16,"nodeType":"1042","messageId":"1056","endLine":200,"endColumn":17},{"ruleId":"1061","severity":2,"message":"1072","line":200,"column":16,"nodeType":"1042","messageId":"1056","endLine":200,"endColumn":17},{"ruleId":"1073","severity":2,"message":"1074","line":201,"column":9,"nodeType":"1075","messageId":"1076","endLine":206,"endColumn":10},{"ruleId":"1054","severity":2,"message":"1071","line":217,"column":18,"nodeType":"1042","messageId":"1056","endLine":217,"endColumn":19},{"ruleId":"1061","severity":2,"message":"1072","line":217,"column":18,"nodeType":"1042","messageId":"1056","endLine":217,"endColumn":19},{"ruleId":"1077","severity":2,"message":"1078","line":233,"column":13,"nodeType":"1042","messageId":"1069","endLine":233,"endColumn":16},{"ruleId":"1067","severity":1,"message":"1078","line":233,"column":13,"nodeType":"1042","messageId":"1069","endLine":233,"endColumn":16},{"ruleId":"1022","severity":2,"message":"1028","line":277,"column":13,"nodeType":"1024","messageId":"1025","endLine":277,"endColumn":24},{"ruleId":"1022","severity":2,"message":"1029","line":277,"column":26,"nodeType":"1024","messageId":"1025","endLine":277,"endColumn":40},{"ruleId":"1034","severity":2,"message":"1035","line":289,"column":5,"nodeType":"1036","messageId":"1037","endLine":292,"endColumn":8},{"ruleId":"1079","severity":2,"message":"1080","line":290,"column":15,"nodeType":"1042","messageId":"1081","endLine":290,"endColumn":25},{"ruleId":"1022","severity":2,"message":"1041","line":290,"column":15,"nodeType":"1024","messageId":"1025","endLine":290,"endColumn":25},{"ruleId":"1079","severity":2,"message":"1082","line":290,"column":27,"nodeType":"1042","messageId":"1081","endLine":290,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1043","line":290,"column":27,"nodeType":"1024","messageId":"1025","endLine":290,"endColumn":36},{"ruleId":"1038","severity":2,"message":"1039","line":291,"column":53,"nodeType":"1083","endLine":291,"endColumn":84},{"ruleId":"1044","severity":2,"message":"1053","line":296,"column":17,"nodeType":"1046","messageId":"1047","endLine":296,"endColumn":30},{"ruleId":"1038","severity":2,"message":"1039","line":311,"column":23,"nodeType":"1066","endLine":313,"endColumn":6},{"ruleId":"1067","severity":1,"message":"1084","line":313,"column":14,"nodeType":"1042","messageId":"1069","endLine":313,"endColumn":18},{"ruleId":"1022","severity":2,"message":"1085","line":319,"column":13,"nodeType":"1024","messageId":"1025","endLine":319,"endColumn":28},{"ruleId":"1022","severity":2,"message":"1086","line":326,"column":25,"nodeType":"1042","messageId":"1025","endLine":326,"endColumn":32},{"ruleId":"1022","severity":2,"message":"1086","line":327,"column":38,"nodeType":"1042","messageId":"1025","endLine":327,"endColumn":45},{"ruleId":"1048","severity":2,"message":"1049","line":328,"column":13,"nodeType":"1050","messageId":"1051","endLine":328,"endColumn":38,"fix":"1087"},{"ruleId":"1022","severity":2,"message":"1088","line":328,"column":35,"nodeType":"1042","messageId":"1025","endLine":328,"endColumn":38},{"ruleId":"1089","severity":2,"message":"1090","line":371,"column":5,"nodeType":"1091","endLine":379,"endColumn":7},{"ruleId":"1038","severity":2,"message":"1039","line":381,"column":12,"nodeType":"1066","endLine":383,"endColumn":6},{"ruleId":"1092","severity":1,"message":"1093","line":384,"column":7,"nodeType":"1046","messageId":"1094","endLine":384,"endColumn":18},{"ruleId":"1022","severity":2,"message":"1085","line":389,"column":13,"nodeType":"1024","messageId":"1025","endLine":389,"endColumn":28},{"ruleId":"1022","severity":2,"message":"1086","line":392,"column":44,"nodeType":"1042","messageId":"1025","endLine":392,"endColumn":51},{"ruleId":"1022","severity":2,"message":"1095","line":392,"column":52,"nodeType":"1042","messageId":"1025","endLine":392,"endColumn":59},{"ruleId":"1054","severity":2,"message":"1096","line":396,"column":72,"nodeType":"1042","messageId":"1056","endLine":396,"endColumn":73},{"ruleId":"1061","severity":2,"message":"1072","line":396,"column":72,"nodeType":"1042","messageId":"1056","endLine":396,"endColumn":73},{"ruleId":"1054","severity":2,"message":"1096","line":397,"column":26,"nodeType":"1042","messageId":"1056","endLine":397,"endColumn":27},{"ruleId":"1061","severity":2,"message":"1072","line":397,"column":26,"nodeType":"1042","messageId":"1056","endLine":397,"endColumn":27},{"ruleId":"1054","severity":2,"message":"1096","line":414,"column":44,"nodeType":"1042","messageId":"1056","endLine":414,"endColumn":45},{"ruleId":"1061","severity":2,"message":"1072","line":414,"column":44,"nodeType":"1042","messageId":"1056","endLine":414,"endColumn":45},{"ruleId":"1054","severity":2,"message":"1096","line":419,"column":21,"nodeType":"1042","messageId":"1056","endLine":419,"endColumn":22},{"ruleId":"1061","severity":2,"message":"1072","line":419,"column":21,"nodeType":"1042","messageId":"1056","endLine":419,"endColumn":22},{"ruleId":"1054","severity":2,"message":"1096","line":422,"column":25,"nodeType":"1042","messageId":"1056","endLine":422,"endColumn":26},{"ruleId":"1061","severity":2,"message":"1072","line":422,"column":25,"nodeType":"1042","messageId":"1056","endLine":422,"endColumn":26},{"ruleId":"1054","severity":2,"message":"1096","line":422,"column":48,"nodeType":"1042","messageId":"1056","endLine":422,"endColumn":49},{"ruleId":"1061","severity":2,"message":"1072","line":422,"column":48,"nodeType":"1042","messageId":"1056","endLine":422,"endColumn":49},{"ruleId":"1054","severity":2,"message":"1096","line":423,"column":22,"nodeType":"1042","messageId":"1056","endLine":423,"endColumn":23},{"ruleId":"1061","severity":2,"message":"1072","line":423,"column":22,"nodeType":"1042","messageId":"1056","endLine":423,"endColumn":23},{"ruleId":"1054","severity":2,"message":"1097","line":426,"column":38,"nodeType":"1042","messageId":"1056","endLine":426,"endColumn":39},{"ruleId":"1061","severity":2,"message":"1072","line":426,"column":38,"nodeType":"1042","messageId":"1056","endLine":426,"endColumn":39},{"ruleId":"1092","severity":1,"message":"1093","line":428,"column":11,"nodeType":"1046","messageId":"1094","endLine":428,"endColumn":22},{"ruleId":"1098","severity":2,"message":"1099","line":431,"column":16,"nodeType":"1042","messageId":"1100","endLine":431,"endColumn":17},{"ruleId":"1022","severity":2,"message":"1101","line":468,"column":13,"nodeType":"1024","messageId":"1025","endLine":468,"endColumn":20},{"ruleId":"1057","severity":2,"message":"1102","line":471,"column":9,"nodeType":"1042","messageId":"1059","endLine":471,"endColumn":19,"fix":"1103"},{"ruleId":"1022","severity":2,"message":"1104","line":471,"column":31,"nodeType":"1042","messageId":"1025","endLine":471,"endColumn":34},{"ruleId":"1022","severity":2,"message":"1105","line":533,"column":13,"nodeType":"1024","messageId":"1025","endLine":533,"endColumn":24},{"ruleId":"1022","severity":2,"message":"1085","line":533,"column":26,"nodeType":"1024","messageId":"1025","endLine":533,"endColumn":41},{"ruleId":"1098","severity":2,"message":"1099","line":540,"column":87,"nodeType":"1042","messageId":"1100","endLine":540,"endColumn":88},{"ruleId":"1022","severity":2,"message":"1086","line":557,"column":39,"nodeType":"1042","messageId":"1025","endLine":557,"endColumn":46},{"ruleId":"1022","severity":2,"message":"1086","line":563,"column":109,"nodeType":"1042","messageId":"1025","endLine":563,"endColumn":116},{"ruleId":"1106","severity":2,"message":"1107","line":571,"column":15,"nodeType":"1108","endLine":571,"endColumn":101},{"ruleId":"1106","severity":2,"message":"1107","line":578,"column":15,"nodeType":"1108","endLine":578,"endColumn":105},{"ruleId":"1109","severity":2,"message":"1110","line":594,"column":17,"nodeType":"1108","endLine":594,"endColumn":72},{"ruleId":"1077","severity":2,"message":"1111","line":17,"column":29,"nodeType":"1042","messageId":"1069","endLine":17,"endColumn":37},{"ruleId":"1067","severity":1,"message":"1112","line":17,"column":29,"nodeType":"1042","messageId":"1069","endLine":17,"endColumn":37},{"ruleId":"1022","severity":2,"message":"1026","line":25,"column":13,"nodeType":"1024","messageId":"1025","endLine":25,"endColumn":22},{"ruleId":"1113","severity":2,"message":"1114","line":32,"column":14,"nodeType":"1115","messageId":"1116","endLine":53,"endColumn":4},{"ruleId":"1117","severity":2,"message":"1118","line":36,"column":38,"nodeType":"1091","messageId":"1119","endLine":36,"endColumn":52},{"ruleId":"1120","severity":2,"message":"1121","line":36,"column":76,"nodeType":"1108","messageId":"1122","endLine":36,"endColumn":124},{"ruleId":"1030","severity":2,"message":"1031","line":36,"column":76,"nodeType":"1032","messageId":"1033","endLine":36,"endColumn":124},{"ruleId":"1117","severity":2,"message":"1118","line":37,"column":31,"nodeType":"1091","messageId":"1119","endLine":37,"endColumn":45},{"ruleId":"1120","severity":2,"message":"1123","line":37,"column":62,"nodeType":"1108","messageId":"1122","endLine":37,"endColumn":96},{"ruleId":"1117","severity":2,"message":"1118","line":38,"column":35,"nodeType":"1091","messageId":"1119","endLine":38,"endColumn":49},{"ruleId":"1120","severity":2,"message":"1124","line":38,"column":70,"nodeType":"1108","messageId":"1122","endLine":38,"endColumn":113},{"ruleId":"1120","severity":2,"message":"1125","line":51,"column":14,"nodeType":"1108","messageId":"1122","endLine":51,"endColumn":56},{"ruleId":"1098","severity":2,"message":"1099","line":51,"column":35,"nodeType":"1042","messageId":"1100","endLine":51,"endColumn":36},{"ruleId":"1117","severity":2,"message":"1118","line":61,"column":13,"nodeType":"1091","messageId":"1119","endLine":61,"endColumn":27},{"ruleId":"1117","severity":2,"message":"1118","line":62,"column":20,"nodeType":"1091","messageId":"1119","endLine":62,"endColumn":34},{"ruleId":"1117","severity":2,"message":"1118","line":70,"column":20,"nodeType":"1091","messageId":"1119","endLine":70,"endColumn":34},{"ruleId":"1117","severity":2,"message":"1118","line":74,"column":20,"nodeType":"1091","messageId":"1119","endLine":74,"endColumn":34},{"ruleId":"1117","severity":2,"message":"1118","line":78,"column":20,"nodeType":"1091","messageId":"1119","endLine":78,"endColumn":34},{"ruleId":"1120","severity":2,"message":"1124","line":79,"column":24,"nodeType":"1108","messageId":"1122","endLine":79,"endColumn":71},{"ruleId":"1120","severity":2,"message":"1126","line":85,"column":15,"nodeType":"1108","messageId":"1122","endLine":85,"endColumn":56},{"ruleId":"1120","severity":2,"message":"1125","line":96,"column":12,"nodeType":"1108","messageId":"1122","endLine":96,"endColumn":53},{"ruleId":"1127","severity":1,"message":"1128","line":117,"column":1,"nodeType":"1129","messageId":"1130","endLine":117,"endColumn":156},{"ruleId":"1131","severity":1,"message":"1132","line":57,"column":4,"nodeType":"1129","messageId":"1133","endLine":57,"endColumn":6},{"ruleId":"1131","severity":1,"message":"1132","line":58,"column":4,"nodeType":"1129","messageId":"1133","endLine":58,"endColumn":6},{"ruleId":"1079","severity":2,"message":"1134","line":6,"column":14,"nodeType":"1042","messageId":"1081","endLine":6,"endColumn":26},{"ruleId":"1079","severity":2,"message":"1135","line":8,"column":7,"nodeType":"1042","messageId":"1081","endLine":8,"endColumn":17},{"ruleId":"1022","severity":2,"message":"1136","line":8,"column":22,"nodeType":"1024","messageId":"1025","endLine":8,"endColumn":33},{"ruleId":"1030","severity":2,"message":"1031","line":9,"column":3,"nodeType":"1032","messageId":"1033","endLine":11,"endColumn":11},{"ruleId":"1079","severity":2,"message":"1137","line":14,"column":14,"nodeType":"1042","messageId":"1081","endLine":14,"endColumn":29},{"ruleId":"1022","severity":2,"message":"1138","line":14,"column":34,"nodeType":"1024","messageId":"1025","endLine":14,"endColumn":43},{"ruleId":"1079","severity":2,"message":"1139","line":34,"column":14,"nodeType":"1042","messageId":"1081","endLine":34,"endColumn":27},{"ruleId":"1022","severity":2,"message":"1140","line":35,"column":3,"nodeType":"1024","messageId":"1025","endLine":35,"endColumn":10},{"ruleId":"1022","severity":2,"message":"1138","line":35,"column":12,"nodeType":"1024","messageId":"1025","endLine":35,"endColumn":21},{"ruleId":"1022","severity":2,"message":"1141","line":35,"column":23,"nodeType":"1024","messageId":"1025","endLine":35,"endColumn":33},{"ruleId":"1022","severity":2,"message":"1142","line":35,"column":35,"nodeType":"1024","messageId":"1025","endLine":35,"endColumn":44},{"ruleId":"1022","severity":2,"message":"1143","line":35,"column":46,"nodeType":"1024","messageId":"1025","endLine":35,"endColumn":55},{"ruleId":"1098","severity":2,"message":"1099","line":51,"column":61,"nodeType":"1042","messageId":"1100","endLine":51,"endColumn":62},{"ruleId":"1079","severity":2,"message":"1144","line":58,"column":14,"nodeType":"1042","messageId":"1081","endLine":58,"endColumn":34},{"ruleId":"1022","severity":2,"message":"1145","line":58,"column":39,"nodeType":"1024","messageId":"1025","endLine":58,"endColumn":45},{"ruleId":"1022","severity":2,"message":"1023","line":58,"column":47,"nodeType":"1024","messageId":"1025","endLine":58,"endColumn":56},{"ruleId":"1120","severity":2,"message":"1146","line":62,"column":7,"nodeType":"1108","messageId":"1122","endLine":62,"endColumn":19},{"ruleId":"1098","severity":2,"message":"1099","line":72,"column":52,"nodeType":"1042","messageId":"1100","endLine":72,"endColumn":53},{"ruleId":"1079","severity":2,"message":"1147","line":81,"column":14,"nodeType":"1042","messageId":"1081","endLine":81,"endColumn":27},{"ruleId":"1077","severity":2,"message":"1148","line":81,"column":32,"nodeType":"1042","messageId":"1069","endLine":81,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1149","line":81,"column":32,"nodeType":"1024","messageId":"1025","endLine":81,"endColumn":39},{"ruleId":"1067","severity":1,"message":"1148","line":81,"column":32,"nodeType":"1042","messageId":"1069","endLine":81,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1150","line":81,"column":41,"nodeType":"1024","messageId":"1025","endLine":81,"endColumn":48},{"ruleId":"1120","severity":2,"message":"1146","line":85,"column":7,"nodeType":"1108","messageId":"1122","endLine":85,"endColumn":19},{"ruleId":"1098","severity":2,"message":"1099","line":95,"column":25,"nodeType":"1042","messageId":"1100","endLine":95,"endColumn":26},{"ruleId":"1098","severity":2,"message":"1099","line":101,"column":70,"nodeType":"1042","messageId":"1100","endLine":101,"endColumn":71},{"ruleId":"1079","severity":2,"message":"1151","line":112,"column":14,"nodeType":"1042","messageId":"1081","endLine":112,"endColumn":31},{"ruleId":"1022","severity":2,"message":"1152","line":112,"column":36,"nodeType":"1024","messageId":"1025","endLine":112,"endColumn":44},{"ruleId":"1120","severity":2,"message":"1146","line":116,"column":7,"nodeType":"1108","messageId":"1122","endLine":116,"endColumn":19},{"ruleId":"1098","severity":2,"message":"1099","line":126,"column":25,"nodeType":"1042","messageId":"1100","endLine":126,"endColumn":26},{"ruleId":"1098","severity":2,"message":"1099","line":129,"column":74,"nodeType":"1042","messageId":"1100","endLine":129,"endColumn":75},{"ruleId":"1098","severity":2,"message":"1099","line":133,"column":78,"nodeType":"1042","messageId":"1100","endLine":133,"endColumn":79},{"ruleId":"1017","severity":2,"message":"1153","line":15,"column":20,"nodeType":"1019","endLine":15,"endColumn":55},{"ruleId":"1022","severity":2,"message":"1023","line":66,"column":13,"nodeType":"1024","messageId":"1025","endLine":66,"endColumn":17},{"ruleId":"1022","severity":2,"message":"1026","line":66,"column":19,"nodeType":"1024","messageId":"1025","endLine":66,"endColumn":28},{"ruleId":"1022","severity":2,"message":"1154","line":81,"column":15,"nodeType":"1024","messageId":"1025","endLine":81,"endColumn":24},{"ruleId":"1092","severity":1,"message":"1093","line":90,"column":5,"nodeType":"1046","messageId":"1094","endLine":90,"endColumn":16},{"ruleId":"1113","severity":2,"message":"1155","line":99,"column":12,"nodeType":"1115","messageId":"1116","endLine":106,"endColumn":4},{"ruleId":"1113","severity":2,"message":"1156","line":108,"column":10,"nodeType":"1115","messageId":"1116","endLine":115,"endColumn":4},{"ruleId":"1157","severity":2,"message":"1158","line":111,"column":17,"nodeType":"1159","messageId":"1094","endLine":111,"endColumn":46},{"ruleId":"1157","severity":2,"message":"1158","line":113,"column":32,"nodeType":"1159","messageId":"1094","endLine":113,"endColumn":41},{"ruleId":"1157","severity":2,"message":"1160","line":113,"column":32,"nodeType":"1159","messageId":"1094","endLine":113,"endColumn":37},{"ruleId":"1044","severity":2,"message":"1045","line":157,"column":22,"nodeType":"1046","messageId":"1047","endLine":157,"endColumn":83},{"ruleId":"1044","severity":2,"message":"1053","line":158,"column":28,"nodeType":"1046","messageId":"1047","endLine":158,"endColumn":44},{"ruleId":"1048","severity":2,"message":"1063","line":163,"column":11,"nodeType":"1064","messageId":"1051","endLine":163,"endColumn":49},{"ruleId":"1034","severity":2,"message":"1035","line":167,"column":11,"nodeType":"1036","messageId":"1037","endLine":175,"endColumn":14},{"ruleId":"1044","severity":2,"message":"1045","line":167,"column":11,"nodeType":"1046","messageId":"1047","endLine":167,"endColumn":30},{"ruleId":"1022","severity":2,"message":"1065","line":167,"column":22,"nodeType":"1042","messageId":"1025","endLine":167,"endColumn":30},{"ruleId":"1038","severity":2,"message":"1039","line":167,"column":58,"nodeType":"1066","endLine":175,"endColumn":12},{"ruleId":"1044","severity":2,"message":"1045","line":172,"column":25,"nodeType":"1046","messageId":"1047","endLine":172,"endColumn":86},{"ruleId":"1044","severity":2,"message":"1045","line":181,"column":21,"nodeType":"1046","messageId":"1047","endLine":181,"endColumn":82},{"ruleId":"1067","severity":1,"message":"1068","line":195,"column":26,"nodeType":"1042","messageId":"1069","endLine":195,"endColumn":29},{"ruleId":"1067","severity":1,"message":"1070","line":195,"column":31,"nodeType":"1042","messageId":"1069","endLine":195,"endColumn":34},{"ruleId":"1073","severity":2,"message":"1074","line":200,"column":9,"nodeType":"1075","messageId":"1076","endLine":205,"endColumn":10},{"ruleId":"1030","severity":2,"message":"1031","line":217,"column":17,"nodeType":"1032","messageId":"1033","endLine":217,"endColumn":47},{"ruleId":"1079","severity":2,"message":"1161","line":234,"column":13,"nodeType":"1042","messageId":"1081","endLine":234,"endColumn":20},{"ruleId":"1044","severity":2,"message":"1053","line":234,"column":25,"nodeType":"1046","messageId":"1047","endLine":234,"endColumn":38},{"ruleId":"1038","severity":2,"message":"1039","line":249,"column":27,"nodeType":"1066","endLine":251,"endColumn":6},{"ruleId":"1067","severity":1,"message":"1084","line":251,"column":14,"nodeType":"1042","messageId":"1069","endLine":251,"endColumn":18},{"ruleId":"1022","severity":2,"message":"1028","line":267,"column":13,"nodeType":"1024","messageId":"1025","endLine":267,"endColumn":24},{"ruleId":"1022","severity":2,"message":"1029","line":267,"column":26,"nodeType":"1024","messageId":"1025","endLine":267,"endColumn":40},{"ruleId":"1034","severity":2,"message":"1035","line":268,"column":5,"nodeType":"1036","messageId":"1037","endLine":271,"endColumn":8},{"ruleId":"1079","severity":2,"message":"1080","line":269,"column":15,"nodeType":"1042","messageId":"1081","endLine":269,"endColumn":25},{"ruleId":"1022","severity":2,"message":"1041","line":269,"column":15,"nodeType":"1024","messageId":"1025","endLine":269,"endColumn":25},{"ruleId":"1079","severity":2,"message":"1082","line":269,"column":27,"nodeType":"1042","messageId":"1081","endLine":269,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1043","line":269,"column":27,"nodeType":"1024","messageId":"1025","endLine":269,"endColumn":36},{"ruleId":"1038","severity":2,"message":"1039","line":270,"column":53,"nodeType":"1083","endLine":270,"endColumn":84},{"ruleId":"1022","severity":2,"message":"1162","line":275,"column":13,"nodeType":"1024","messageId":"1025","endLine":275,"endColumn":27},{"ruleId":"1079","severity":2,"message":"1163","line":276,"column":13,"nodeType":"1042","messageId":"1081","endLine":276,"endColumn":27},{"ruleId":"1022","severity":2,"message":"1164","line":277,"column":60,"nodeType":"1042","messageId":"1025","endLine":277,"endColumn":64},{"ruleId":"1022","severity":2,"message":"1164","line":277,"column":82,"nodeType":"1042","messageId":"1025","endLine":277,"endColumn":86},{"ruleId":"1022","severity":2,"message":"1165","line":277,"column":87,"nodeType":"1042","messageId":"1025","endLine":277,"endColumn":94},{"ruleId":"1117","severity":2,"message":"1118","line":278,"column":36,"nodeType":"1091","messageId":"1119","endLine":278,"endColumn":50},{"ruleId":"1022","severity":2,"message":"1166","line":278,"column":77,"nodeType":"1042","messageId":"1025","endLine":278,"endColumn":82},{"ruleId":"1022","severity":2,"message":"1167","line":278,"column":83,"nodeType":"1042","messageId":"1025","endLine":278,"endColumn":89},{"ruleId":"1098","severity":2,"message":"1099","line":300,"column":80,"nodeType":"1042","messageId":"1100","endLine":300,"endColumn":81},{"ruleId":"1022","severity":2,"message":"1101","line":350,"column":13,"nodeType":"1024","messageId":"1025","endLine":350,"endColumn":20},{"ruleId":"1079","severity":2,"message":"1168","line":351,"column":21,"nodeType":"1042","messageId":"1081","endLine":351,"endColumn":32},{"ruleId":"1022","severity":2,"message":"1104","line":353,"column":32,"nodeType":"1042","messageId":"1025","endLine":353,"endColumn":35},{"ruleId":"1098","severity":2,"message":"1099","line":353,"column":60,"nodeType":"1042","messageId":"1100","endLine":353,"endColumn":61},{"ruleId":"1169","severity":2,"message":"1170","line":5,"column":1,"nodeType":"1171","endLine":5,"endColumn":45},{"ruleId":"1169","severity":2,"message":"1172","line":6,"column":1,"nodeType":"1171","endLine":6,"endColumn":50},{"ruleId":"1169","severity":2,"message":"1170","line":7,"column":1,"nodeType":"1171","endLine":7,"endColumn":42},{"ruleId":"1169","severity":2,"message":"1170","line":8,"column":1,"nodeType":"1171","endLine":8,"endColumn":42},{"ruleId":"1169","severity":2,"message":"1170","line":9,"column":1,"nodeType":"1171","endLine":9,"endColumn":36},{"ruleId":"1169","severity":2,"message":"1170","line":10,"column":1,"nodeType":"1171","endLine":10,"endColumn":44},{"ruleId":"1067","severity":1,"message":"1173","line":19,"column":29,"nodeType":"1042","messageId":"1069","endLine":19,"endColumn":38},{"ruleId":"1022","severity":2,"message":"1145","line":32,"column":7,"nodeType":"1024","messageId":"1025","endLine":32,"endColumn":10},{"ruleId":"1022","severity":2,"message":"1174","line":32,"column":12,"nodeType":"1024","messageId":"1025","endLine":32,"endColumn":15},{"ruleId":"1022","severity":2,"message":"1175","line":32,"column":17,"nodeType":"1024","messageId":"1025","endLine":32,"endColumn":26},{"ruleId":"1022","severity":2,"message":"1176","line":32,"column":28,"nodeType":"1024","messageId":"1025","endLine":32,"endColumn":34},{"ruleId":"1022","severity":2,"message":"1177","line":32,"column":36,"nodeType":"1024","messageId":"1025","endLine":32,"endColumn":42},{"ruleId":"1022","severity":2,"message":"1178","line":35,"column":26,"nodeType":"1042","messageId":"1025","endLine":35,"endColumn":31},{"ruleId":"1022","severity":2,"message":"1179","line":35,"column":32,"nodeType":"1042","messageId":"1025","endLine":35,"endColumn":38},{"ruleId":"1131","severity":1,"message":"1132","line":41,"column":3,"nodeType":"1129","messageId":"1133","endLine":41,"endColumn":5},{"ruleId":"1030","severity":2,"message":"1031","line":41,"column":13,"nodeType":"1032","messageId":"1033","endLine":41,"endColumn":111},{"ruleId":"1131","severity":1,"message":"1132","line":43,"column":3,"nodeType":"1129","messageId":"1133","endLine":43,"endColumn":5},{"ruleId":"1131","severity":1,"message":"1132","line":45,"column":3,"nodeType":"1129","messageId":"1133","endLine":45,"endColumn":5},{"ruleId":"1131","severity":1,"message":"1132","line":47,"column":3,"nodeType":"1129","messageId":"1133","endLine":47,"endColumn":5},{"ruleId":"1131","severity":1,"message":"1132","line":49,"column":3,"nodeType":"1129","messageId":"1133","endLine":49,"endColumn":5},{"ruleId":"1180","severity":1,"message":"1181","line":51,"column":11,"nodeType":"1182","messageId":"1094","endLine":51,"endColumn":31},{"ruleId":"1131","severity":1,"message":"1132","line":52,"column":3,"nodeType":"1129","messageId":"1133","endLine":52,"endColumn":5},{"ruleId":"1183","severity":2,"message":"1184","line":52,"column":25,"nodeType":"1185","messageId":"1186","endLine":52,"endColumn":32,"fix":"1187"},{"ruleId":"1183","severity":2,"message":"1188","line":52,"column":32,"nodeType":"1189","messageId":"1186","endLine":52,"endColumn":39,"fix":"1190"},{"ruleId":"1131","severity":1,"message":"1132","line":54,"column":3,"nodeType":"1129","messageId":"1133","endLine":54,"endColumn":5},{"ruleId":"1169","severity":2,"message":"1170","line":7,"column":1,"nodeType":"1171","endLine":7,"endColumn":24},{"ruleId":"1169","severity":2,"message":"1191","line":8,"column":1,"nodeType":"1171","endLine":8,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1173","line":17,"column":29,"nodeType":"1042","messageId":"1069","endLine":17,"endColumn":38},{"ruleId":"1022","severity":2,"message":"1145","line":27,"column":13,"nodeType":"1024","messageId":"1025","endLine":27,"endColumn":16},{"ruleId":"1022","severity":2,"message":"1176","line":27,"column":18,"nodeType":"1024","messageId":"1025","endLine":27,"endColumn":24},{"ruleId":"1022","severity":2,"message":"1177","line":27,"column":26,"nodeType":"1024","messageId":"1025","endLine":27,"endColumn":32},{"ruleId":"1022","severity":2,"message":"1178","line":32,"column":27,"nodeType":"1042","messageId":"1025","endLine":32,"endColumn":32},{"ruleId":"1022","severity":2,"message":"1179","line":32,"column":33,"nodeType":"1042","messageId":"1025","endLine":32,"endColumn":39},{"ruleId":"1117","severity":2,"message":"1118","line":60,"column":20,"nodeType":"1091","messageId":"1119","endLine":60,"endColumn":34},{"ruleId":"1092","severity":1,"message":"1093","line":63,"column":9,"nodeType":"1046","messageId":"1094","endLine":63,"endColumn":20},{"ruleId":"1117","severity":2,"message":"1118","line":70,"column":27,"nodeType":"1091","messageId":"1119","endLine":70,"endColumn":41},{"ruleId":"1192","severity":2,"message":"1193","line":75,"column":26,"nodeType":"1194","messageId":"1195","endLine":75,"endColumn":43},{"ruleId":"1022","severity":2,"message":"1175","line":79,"column":15,"nodeType":"1024","messageId":"1025","endLine":79,"endColumn":24},{"ruleId":"1117","severity":2,"message":"1118","line":87,"column":27,"nodeType":"1091","messageId":"1119","endLine":87,"endColumn":41},{"ruleId":"1048","severity":2,"message":"1049","line":91,"column":13,"nodeType":"1050","messageId":"1051","endLine":91,"endColumn":34,"fix":"1196"},{"ruleId":"1197","severity":2,"message":"1198","line":93,"column":21,"nodeType":"1091","messageId":"1199","endLine":93,"endColumn":60},{"ruleId":"1192","severity":2,"message":"1200","line":97,"column":26,"nodeType":"1194","messageId":"1195","endLine":97,"endColumn":43},{"ruleId":"1022","severity":2,"message":"1175","line":102,"column":15,"nodeType":"1024","messageId":"1025","endLine":102,"endColumn":24},{"ruleId":"1022","severity":2,"message":"1175","line":115,"column":15,"nodeType":"1024","messageId":"1025","endLine":115,"endColumn":24},{"ruleId":"1022","severity":2,"message":"1145","line":122,"column":13,"nodeType":"1024","messageId":"1025","endLine":122,"endColumn":16},{"ruleId":"1022","severity":2,"message":"1177","line":122,"column":18,"nodeType":"1024","messageId":"1025","endLine":122,"endColumn":24},{"ruleId":"1022","severity":2,"message":"1178","line":126,"column":25,"nodeType":"1042","messageId":"1025","endLine":126,"endColumn":30},{"ruleId":"1022","severity":2,"message":"1179","line":126,"column":31,"nodeType":"1042","messageId":"1025","endLine":126,"endColumn":37},{"ruleId":"1048","severity":2,"message":"1063","line":128,"column":7,"nodeType":"1064","messageId":"1051","endLine":128,"endColumn":25},{"ruleId":"1030","severity":2,"message":"1031","line":136,"column":21,"nodeType":"1032","messageId":"1033","endLine":136,"endColumn":118},{"ruleId":"1169","severity":2,"message":"1170","line":5,"column":1,"nodeType":"1171","endLine":5,"endColumn":24},{"ruleId":"1169","severity":2,"message":"1191","line":6,"column":1,"nodeType":"1171","endLine":6,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1173","line":14,"column":29,"nodeType":"1042","messageId":"1069","endLine":14,"endColumn":38},{"ruleId":"1113","severity":2,"message":"1201","line":19,"column":12,"nodeType":"1115","messageId":"1116","endLine":36,"endColumn":4},{"ruleId":"1022","severity":2,"message":"1202","line":40,"column":7,"nodeType":"1024","messageId":"1025","endLine":40,"endColumn":10},{"ruleId":"1022","severity":2,"message":"1145","line":40,"column":12,"nodeType":"1024","messageId":"1025","endLine":40,"endColumn":15},{"ruleId":"1022","severity":2,"message":"1175","line":40,"column":17,"nodeType":"1024","messageId":"1025","endLine":40,"endColumn":26},{"ruleId":"1022","severity":2,"message":"1176","line":40,"column":28,"nodeType":"1024","messageId":"1025","endLine":40,"endColumn":34},{"ruleId":"1079","severity":2,"message":"1203","line":42,"column":13,"nodeType":"1042","messageId":"1081","endLine":42,"endColumn":17},{"ruleId":"1077","severity":2,"message":"1204","line":42,"column":13,"nodeType":"1042","messageId":"1069","endLine":42,"endColumn":17},{"ruleId":"1067","severity":1,"message":"1204","line":42,"column":13,"nodeType":"1042","messageId":"1069","endLine":42,"endColumn":17},{"ruleId":"1079","severity":2,"message":"1205","line":42,"column":31,"nodeType":"1042","messageId":"1081","endLine":42,"endColumn":36},{"ruleId":"1077","severity":2,"message":"1206","line":42,"column":31,"nodeType":"1042","messageId":"1069","endLine":42,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1206","line":42,"column":31,"nodeType":"1042","messageId":"1069","endLine":42,"endColumn":36},{"ruleId":"1030","severity":2,"message":"1031","line":46,"column":14,"nodeType":"1032","messageId":"1033","endLine":46,"endColumn":88},{"ruleId":"1169","severity":2,"message":"1170","line":5,"column":1,"nodeType":"1171","endLine":5,"endColumn":24},{"ruleId":"1169","severity":2,"message":"1191","line":6,"column":1,"nodeType":"1171","endLine":6,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1173","line":15,"column":29,"nodeType":"1042","messageId":"1069","endLine":15,"endColumn":38},{"ruleId":"1207","severity":2,"message":"1208","line":26,"column":7,"nodeType":"1024","messageId":"1209","endLine":26,"endColumn":23},{"ruleId":"1022","severity":2,"message":"1145","line":34,"column":15,"nodeType":"1024","messageId":"1025","endLine":34,"endColumn":18},{"ruleId":"1022","severity":2,"message":"1175","line":34,"column":20,"nodeType":"1024","messageId":"1025","endLine":34,"endColumn":29},{"ruleId":"1022","severity":2,"message":"1145","line":44,"column":7,"nodeType":"1024","messageId":"1025","endLine":44,"endColumn":10},{"ruleId":"1022","severity":2,"message":"1175","line":44,"column":12,"nodeType":"1024","messageId":"1025","endLine":44,"endColumn":21},{"ruleId":"1022","severity":2,"message":"1176","line":44,"column":23,"nodeType":"1024","messageId":"1025","endLine":44,"endColumn":29},{"ruleId":"1022","severity":2,"message":"1177","line":44,"column":31,"nodeType":"1024","messageId":"1025","endLine":44,"endColumn":37},{"ruleId":"1079","severity":2,"message":"1203","line":47,"column":12,"nodeType":"1042","messageId":"1081","endLine":47,"endColumn":16},{"ruleId":"1077","severity":2,"message":"1204","line":47,"column":12,"nodeType":"1042","messageId":"1069","endLine":47,"endColumn":16},{"ruleId":"1067","severity":1,"message":"1204","line":47,"column":12,"nodeType":"1042","messageId":"1069","endLine":47,"endColumn":16},{"ruleId":"1079","severity":2,"message":"1210","line":47,"column":24,"nodeType":"1042","messageId":"1081","endLine":47,"endColumn":29},{"ruleId":"1077","severity":2,"message":"1211","line":47,"column":24,"nodeType":"1042","messageId":"1069","endLine":47,"endColumn":29},{"ruleId":"1067","severity":1,"message":"1211","line":47,"column":24,"nodeType":"1042","messageId":"1069","endLine":47,"endColumn":29},{"ruleId":"1079","severity":2,"message":"1212","line":47,"column":31,"nodeType":"1042","messageId":"1081","endLine":47,"endColumn":36},{"ruleId":"1077","severity":2,"message":"1213","line":47,"column":31,"nodeType":"1042","messageId":"1069","endLine":47,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1213","line":47,"column":31,"nodeType":"1042","messageId":"1069","endLine":47,"endColumn":36},{"ruleId":"1214","severity":2,"message":"1215","line":49,"column":1,"nodeType":"1129","messageId":"1216","endLine":49,"endColumn":5,"fix":"1217"},{"ruleId":"1022","severity":2,"message":"1178","line":50,"column":26,"nodeType":"1042","messageId":"1025","endLine":50,"endColumn":31},{"ruleId":"1022","severity":2,"message":"1179","line":50,"column":32,"nodeType":"1042","messageId":"1025","endLine":50,"endColumn":38},{"ruleId":"1127","severity":1,"message":"1218","line":52,"column":1,"nodeType":"1129","messageId":"1130","endLine":52,"endColumn":143},{"ruleId":"1030","severity":2,"message":"1031","line":52,"column":58,"nodeType":"1032","messageId":"1033","endLine":52,"endColumn":141},{"ruleId":"1183","severity":2,"message":"1219","line":63,"column":69,"nodeType":"1189","messageId":"1186","endLine":63,"endColumn":77,"fix":"1220"},{"ruleId":"1183","severity":2,"message":"1221","line":63,"column":77,"nodeType":"1185","messageId":"1186","endLine":63,"endColumn":85,"fix":"1222"},{"ruleId":"1044","severity":2,"message":"1053","line":68,"column":15,"nodeType":"1046","messageId":"1047","endLine":68,"endColumn":34},{"ruleId":"1169","severity":2,"message":"1191","line":4,"column":1,"nodeType":"1171","endLine":4,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1173","line":12,"column":29,"nodeType":"1042","messageId":"1069","endLine":12,"endColumn":38},{"ruleId":"1223","severity":2,"message":"1224","line":16,"column":1,"nodeType":"1225","messageId":"1226","endLine":46,"endColumn":2},{"ruleId":"1022","severity":2,"message":"1145","line":19,"column":7,"nodeType":"1024","messageId":"1025","endLine":19,"endColumn":10},{"ruleId":"1022","severity":2,"message":"1175","line":19,"column":12,"nodeType":"1024","messageId":"1025","endLine":19,"endColumn":21},{"ruleId":"1022","severity":2,"message":"1176","line":19,"column":23,"nodeType":"1024","messageId":"1025","endLine":19,"endColumn":29},{"ruleId":"1022","severity":2,"message":"1177","line":19,"column":31,"nodeType":"1024","messageId":"1025","endLine":19,"endColumn":37},{"ruleId":"1079","severity":2,"message":"1203","line":21,"column":12,"nodeType":"1042","messageId":"1081","endLine":21,"endColumn":16},{"ruleId":"1077","severity":2,"message":"1204","line":21,"column":12,"nodeType":"1042","messageId":"1069","endLine":21,"endColumn":16},{"ruleId":"1067","severity":1,"message":"1204","line":21,"column":12,"nodeType":"1042","messageId":"1069","endLine":21,"endColumn":16},{"ruleId":"1079","severity":2,"message":"1210","line":21,"column":24,"nodeType":"1042","messageId":"1081","endLine":21,"endColumn":29},{"ruleId":"1077","severity":2,"message":"1211","line":21,"column":24,"nodeType":"1042","messageId":"1069","endLine":21,"endColumn":29},{"ruleId":"1067","severity":1,"message":"1211","line":21,"column":24,"nodeType":"1042","messageId":"1069","endLine":21,"endColumn":29},{"ruleId":"1079","severity":2,"message":"1212","line":21,"column":31,"nodeType":"1042","messageId":"1081","endLine":21,"endColumn":36},{"ruleId":"1077","severity":2,"message":"1213","line":21,"column":31,"nodeType":"1042","messageId":"1069","endLine":21,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1213","line":21,"column":31,"nodeType":"1042","messageId":"1069","endLine":21,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1178","line":24,"column":26,"nodeType":"1042","messageId":"1025","endLine":24,"endColumn":31},{"ruleId":"1022","severity":2,"message":"1179","line":24,"column":32,"nodeType":"1042","messageId":"1025","endLine":24,"endColumn":38},{"ruleId":"1030","severity":2,"message":"1031","line":27,"column":58,"nodeType":"1032","messageId":"1033","endLine":27,"endColumn":124},{"ruleId":"1169","severity":2,"message":"1170","line":5,"column":1,"nodeType":"1171","endLine":5,"endColumn":24},{"ruleId":"1169","severity":2,"message":"1191","line":6,"column":1,"nodeType":"1171","endLine":6,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1173","line":15,"column":29,"nodeType":"1042","messageId":"1069","endLine":15,"endColumn":38},{"ruleId":"1223","severity":2,"message":"1224","line":19,"column":1,"nodeType":"1225","messageId":"1226","endLine":43,"endColumn":2},{"ruleId":"1022","severity":2,"message":"1145","line":22,"column":7,"nodeType":"1024","messageId":"1025","endLine":22,"endColumn":10},{"ruleId":"1022","severity":2,"message":"1175","line":22,"column":12,"nodeType":"1024","messageId":"1025","endLine":22,"endColumn":21},{"ruleId":"1022","severity":2,"message":"1176","line":22,"column":23,"nodeType":"1024","messageId":"1025","endLine":22,"endColumn":29},{"ruleId":"1022","severity":2,"message":"1177","line":22,"column":31,"nodeType":"1024","messageId":"1025","endLine":22,"endColumn":37},{"ruleId":"1079","severity":2,"message":"1203","line":24,"column":12,"nodeType":"1042","messageId":"1081","endLine":24,"endColumn":16},{"ruleId":"1077","severity":2,"message":"1204","line":24,"column":12,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":16},{"ruleId":"1067","severity":1,"message":"1204","line":24,"column":12,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":16},{"ruleId":"1079","severity":2,"message":"1210","line":24,"column":24,"nodeType":"1042","messageId":"1081","endLine":24,"endColumn":29},{"ruleId":"1077","severity":2,"message":"1211","line":24,"column":24,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":29},{"ruleId":"1067","severity":1,"message":"1211","line":24,"column":24,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":29},{"ruleId":"1079","severity":2,"message":"1212","line":24,"column":31,"nodeType":"1042","messageId":"1081","endLine":24,"endColumn":36},{"ruleId":"1077","severity":2,"message":"1213","line":24,"column":31,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1213","line":24,"column":31,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1178","line":26,"column":26,"nodeType":"1042","messageId":"1025","endLine":26,"endColumn":31},{"ruleId":"1022","severity":2,"message":"1179","line":26,"column":32,"nodeType":"1042","messageId":"1025","endLine":26,"endColumn":38},{"ruleId":"1030","severity":2,"message":"1031","line":32,"column":7,"nodeType":"1032","messageId":"1033","endLine":40,"endColumn":19},{"ruleId":"1098","severity":2,"message":"1099","line":37,"column":68,"nodeType":"1042","messageId":"1100","endLine":37,"endColumn":69},{"ruleId":"1169","severity":2,"message":"1170","line":5,"column":1,"nodeType":"1171","endLine":5,"endColumn":24},{"ruleId":"1169","severity":2,"message":"1191","line":6,"column":1,"nodeType":"1171","endLine":6,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1173","line":15,"column":29,"nodeType":"1042","messageId":"1069","endLine":15,"endColumn":38},{"ruleId":"1223","severity":2,"message":"1224","line":19,"column":1,"nodeType":"1225","messageId":"1226","endLine":43,"endColumn":2},{"ruleId":"1022","severity":2,"message":"1145","line":22,"column":7,"nodeType":"1024","messageId":"1025","endLine":22,"endColumn":10},{"ruleId":"1022","severity":2,"message":"1175","line":22,"column":12,"nodeType":"1024","messageId":"1025","endLine":22,"endColumn":21},{"ruleId":"1022","severity":2,"message":"1176","line":22,"column":23,"nodeType":"1024","messageId":"1025","endLine":22,"endColumn":29},{"ruleId":"1022","severity":2,"message":"1177","line":22,"column":31,"nodeType":"1024","messageId":"1025","endLine":22,"endColumn":37},{"ruleId":"1079","severity":2,"message":"1203","line":24,"column":12,"nodeType":"1042","messageId":"1081","endLine":24,"endColumn":16},{"ruleId":"1077","severity":2,"message":"1204","line":24,"column":12,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":16},{"ruleId":"1067","severity":1,"message":"1204","line":24,"column":12,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":16},{"ruleId":"1079","severity":2,"message":"1210","line":24,"column":24,"nodeType":"1042","messageId":"1081","endLine":24,"endColumn":29},{"ruleId":"1077","severity":2,"message":"1211","line":24,"column":24,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":29},{"ruleId":"1067","severity":1,"message":"1211","line":24,"column":24,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":29},{"ruleId":"1079","severity":2,"message":"1212","line":24,"column":31,"nodeType":"1042","messageId":"1081","endLine":24,"endColumn":36},{"ruleId":"1077","severity":2,"message":"1213","line":24,"column":31,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":36},{"ruleId":"1067","severity":1,"message":"1213","line":24,"column":31,"nodeType":"1042","messageId":"1069","endLine":24,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1178","line":26,"column":26,"nodeType":"1042","messageId":"1025","endLine":26,"endColumn":31},{"ruleId":"1022","severity":2,"message":"1179","line":26,"column":32,"nodeType":"1042","messageId":"1025","endLine":26,"endColumn":38},{"ruleId":"1030","severity":2,"message":"1031","line":32,"column":7,"nodeType":"1032","messageId":"1033","endLine":40,"endColumn":19},{"ruleId":"1098","severity":2,"message":"1099","line":37,"column":68,"nodeType":"1042","messageId":"1100","endLine":37,"endColumn":69},{"ruleId":"1169","severity":2,"message":"1227","line":1,"column":1,"nodeType":"1171","endLine":1,"endColumn":29},{"ruleId":"1228","severity":2,"message":"1229","line":1,"column":1,"nodeType":"1230","endLine":11,"endColumn":3},{"ruleId":"1131","severity":1,"message":"1132","line":6,"column":2,"nodeType":"1129","messageId":"1133","endLine":6,"endColumn":4},{"ruleId":"1131","severity":1,"message":"1132","line":8,"column":2,"nodeType":"1129","messageId":"1133","endLine":8,"endColumn":4},{"ruleId":"1092","severity":1,"message":"1093","line":8,"column":5,"nodeType":"1046","messageId":"1094","endLine":8,"endColumn":16},{"ruleId":"1017","severity":2,"message":"1153","line":16,"column":20,"nodeType":"1019","endLine":16,"endColumn":55},{"ruleId":"1020","severity":2,"message":"1021","line":20,"column":30,"nodeType":"1019","endLine":20,"endColumn":53},{"ruleId":"1022","severity":2,"message":"1023","line":66,"column":13,"nodeType":"1024","messageId":"1025","endLine":66,"endColumn":17},{"ruleId":"1022","severity":2,"message":"1026","line":66,"column":19,"nodeType":"1024","messageId":"1025","endLine":66,"endColumn":28},{"ruleId":"1092","severity":1,"message":"1093","line":110,"column":7,"nodeType":"1046","messageId":"1094","endLine":110,"endColumn":18},{"ruleId":"1057","severity":2,"message":"1231","line":116,"column":9,"nodeType":"1042","messageId":"1059","endLine":116,"endColumn":20,"fix":"1232"},{"ruleId":"1057","severity":2,"message":"1233","line":147,"column":9,"nodeType":"1042","messageId":"1059","endLine":147,"endColumn":21,"fix":"1234"},{"ruleId":"1057","severity":2,"message":"1235","line":148,"column":11,"nodeType":"1042","messageId":"1059","endLine":148,"endColumn":15,"fix":"1236"},{"ruleId":"1057","severity":2,"message":"1237","line":155,"column":15,"nodeType":"1042","messageId":"1059","endLine":155,"endColumn":23,"fix":"1238"},{"ruleId":"1030","severity":2,"message":"1031","line":182,"column":7,"nodeType":"1032","messageId":"1033","endLine":192,"endColumn":13},{"ruleId":"1067","severity":1,"message":"1239","line":212,"column":26,"nodeType":"1042","messageId":"1069","endLine":212,"endColumn":29},{"ruleId":"1067","severity":1,"message":"1070","line":212,"column":31,"nodeType":"1042","messageId":"1069","endLine":212,"endColumn":34},{"ruleId":"1092","severity":1,"message":"1093","line":220,"column":9,"nodeType":"1046","messageId":"1094","endLine":220,"endColumn":20},{"ruleId":"1240","severity":2,"message":"1241","line":221,"column":9,"nodeType":"1242","messageId":"1243","endLine":221,"endColumn":16,"fix":"1244"},{"ruleId":"1079","severity":2,"message":"1245","line":248,"column":43,"nodeType":"1042","messageId":"1081","endLine":248,"endColumn":59},{"ruleId":"1079","severity":2,"message":"1246","line":248,"column":69,"nodeType":"1042","messageId":"1081","endLine":248,"endColumn":83},{"ruleId":"1098","severity":2,"message":"1099","line":252,"column":47,"nodeType":"1042","messageId":"1100","endLine":252,"endColumn":48},{"ruleId":"1098","severity":2,"message":"1099","line":257,"column":48,"nodeType":"1042","messageId":"1100","endLine":257,"endColumn":49},{"ruleId":"1106","severity":2,"message":"1107","line":301,"column":13,"nodeType":"1108","endLine":301,"endColumn":107},{"ruleId":"1247","severity":2,"message":"1248","line":301,"column":13,"nodeType":"1108","endLine":301,"endColumn":107},{"ruleId":"1249","severity":2,"message":"1250","line":301,"column":13,"nodeType":"1108","endLine":301,"endColumn":107},{"ruleId":"1251","severity":2,"message":"1252","line":306,"column":23,"nodeType":"1066","messageId":"1253","endLine":306,"endColumn":56},{"ruleId":"1254","severity":2,"message":"1255","line":311,"column":13,"nodeType":"1108","endLine":311,"endColumn":168},{"ruleId":"1256","severity":2,"message":"1257","line":311,"column":13,"nodeType":"1108","endLine":311,"endColumn":168},{"ruleId":"1251","severity":2,"message":"1252","line":311,"column":127,"nodeType":"1066","messageId":"1253","endLine":311,"endColumn":163},{"ruleId":"1106","severity":2,"message":"1107","line":312,"column":13,"nodeType":"1108","endLine":312,"endColumn":98},{"ruleId":"1247","severity":2,"message":"1248","line":312,"column":13,"nodeType":"1108","endLine":312,"endColumn":98},{"ruleId":"1249","severity":2,"message":"1250","line":312,"column":13,"nodeType":"1108","endLine":312,"endColumn":98},{"ruleId":"1022","severity":2,"message":"1258","line":25,"column":5,"nodeType":"1024","messageId":"1025","endLine":25,"endColumn":14},{"ruleId":"1022","severity":2,"message":"1259","line":25,"column":16,"nodeType":"1024","messageId":"1025","endLine":25,"endColumn":26},{"ruleId":"1022","severity":2,"message":"1260","line":25,"column":28,"nodeType":"1024","messageId":"1025","endLine":25,"endColumn":34},{"ruleId":"1022","severity":2,"message":"1261","line":25,"column":36,"nodeType":"1024","messageId":"1025","endLine":25,"endColumn":41},{"ruleId":"1057","severity":2,"message":"1262","line":43,"column":7,"nodeType":"1042","messageId":"1059","endLine":43,"endColumn":16,"fix":"1263"},{"ruleId":"1077","severity":2,"message":"1264","line":43,"column":19,"nodeType":"1042","messageId":"1069","endLine":43,"endColumn":20},{"ruleId":"1067","severity":1,"message":"1265","line":43,"column":19,"nodeType":"1042","messageId":"1069","endLine":43,"endColumn":20},{"ruleId":"1057","severity":2,"message":"1266","line":45,"column":7,"nodeType":"1042","messageId":"1059","endLine":45,"endColumn":15,"fix":"1267"},{"ruleId":"1022","severity":2,"message":"1268","line":46,"column":13,"nodeType":"1024","messageId":"1025","endLine":46,"endColumn":19},{"ruleId":"1054","severity":2,"message":"1269","line":47,"column":26,"nodeType":"1042","messageId":"1056","endLine":47,"endColumn":31},{"ruleId":"1061","severity":2,"message":"1270","line":47,"column":26,"nodeType":"1042","messageId":"1056","endLine":47,"endColumn":31},{"ruleId":"1077","severity":2,"message":"1271","line":51,"column":7,"nodeType":"1042","messageId":"1069","endLine":51,"endColumn":10},{"ruleId":"1067","severity":1,"message":"1271","line":51,"column":7,"nodeType":"1042","messageId":"1069","endLine":51,"endColumn":10},{"ruleId":"1022","severity":2,"message":"1272","line":51,"column":19,"nodeType":"1042","messageId":"1025","endLine":51,"endColumn":24},{"ruleId":"1030","severity":2,"message":"1031","line":63,"column":5,"nodeType":"1032","messageId":"1033","endLine":105,"endColumn":11},{"ruleId":"1092","severity":1,"message":"1093","line":114,"column":5,"nodeType":"1046","messageId":"1094","endLine":114,"endColumn":16},{"ruleId":"1092","severity":1,"message":"1093","line":117,"column":5,"nodeType":"1046","messageId":"1094","endLine":117,"endColumn":16},{"ruleId":"1022","severity":2,"message":"1268","line":9,"column":5,"nodeType":"1024","messageId":"1025","endLine":9,"endColumn":11},{"ruleId":"1022","severity":2,"message":"1140","line":9,"column":13,"nodeType":"1024","messageId":"1025","endLine":9,"endColumn":15},{"ruleId":"1022","severity":2,"message":"1273","line":9,"column":17,"nodeType":"1024","messageId":"1025","endLine":9,"endColumn":28},{"ruleId":"1022","severity":2,"message":"1260","line":9,"column":30,"nodeType":"1024","messageId":"1025","endLine":9,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1261","line":9,"column":38,"nodeType":"1024","messageId":"1025","endLine":9,"endColumn":43},{"ruleId":"1067","severity":1,"message":"1274","line":12,"column":21,"nodeType":"1042","messageId":"1069","endLine":12,"endColumn":23},{"ruleId":"1022","severity":2,"message":"1275","line":12,"column":37,"nodeType":"1042","messageId":"1025","endLine":12,"endColumn":48},{"ruleId":"1022","severity":2,"message":"1276","line":15,"column":15,"nodeType":"1042","messageId":"1025","endLine":15,"endColumn":21},{"ruleId":"1022","severity":2,"message":"1277","line":33,"column":25,"nodeType":"1042","messageId":"1025","endLine":33,"endColumn":28},{"ruleId":"1030","severity":2,"message":"1031","line":34,"column":5,"nodeType":"1032","messageId":"1033","endLine":48,"endColumn":11},{"ruleId":"1098","severity":2,"message":"1099","line":34,"column":55,"nodeType":"1042","messageId":"1100","endLine":34,"endColumn":56},{"ruleId":"1092","severity":1,"message":"1093","line":76,"column":5,"nodeType":"1046","messageId":"1094","endLine":76,"endColumn":16},{"ruleId":"1092","severity":1,"message":"1093","line":79,"column":5,"nodeType":"1046","messageId":"1094","endLine":79,"endColumn":16},{"ruleId":"1022","severity":2,"message":"1268","line":9,"column":5,"nodeType":"1024","messageId":"1025","endLine":9,"endColumn":11},{"ruleId":"1022","severity":2,"message":"1140","line":9,"column":13,"nodeType":"1024","messageId":"1025","endLine":9,"endColumn":15},{"ruleId":"1022","severity":2,"message":"1260","line":9,"column":17,"nodeType":"1024","messageId":"1025","endLine":9,"endColumn":23},{"ruleId":"1022","severity":2,"message":"1273","line":9,"column":25,"nodeType":"1024","messageId":"1025","endLine":9,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1261","line":9,"column":38,"nodeType":"1024","messageId":"1025","endLine":9,"endColumn":43},{"ruleId":"1077","severity":2,"message":"1264","line":12,"column":21,"nodeType":"1042","messageId":"1069","endLine":12,"endColumn":22},{"ruleId":"1067","severity":1,"message":"1265","line":12,"column":21,"nodeType":"1042","messageId":"1069","endLine":12,"endColumn":22},{"ruleId":"1022","severity":2,"message":"1275","line":12,"column":36,"nodeType":"1042","messageId":"1025","endLine":12,"endColumn":47},{"ruleId":"1022","severity":2,"message":"1276","line":15,"column":15,"nodeType":"1042","messageId":"1025","endLine":15,"endColumn":21},{"ruleId":"1092","severity":1,"message":"1093","line":16,"column":7,"nodeType":"1046","messageId":"1094","endLine":16,"endColumn":18},{"ruleId":"1092","severity":1,"message":"1093","line":23,"column":7,"nodeType":"1046","messageId":"1094","endLine":23,"endColumn":18},{"ruleId":"1057","severity":2,"message":"1278","line":37,"column":9,"nodeType":"1042","messageId":"1059","endLine":37,"endColumn":17,"fix":"1279"},{"ruleId":"1022","severity":2,"message":"1277","line":45,"column":25,"nodeType":"1042","messageId":"1025","endLine":45,"endColumn":28},{"ruleId":"1030","severity":2,"message":"1031","line":46,"column":5,"nodeType":"1032","messageId":"1033","endLine":68,"endColumn":11},{"ruleId":"1098","severity":2,"message":"1099","line":46,"column":55,"nodeType":"1042","messageId":"1100","endLine":46,"endColumn":56},{"ruleId":"1092","severity":1,"message":"1093","line":96,"column":5,"nodeType":"1046","messageId":"1094","endLine":96,"endColumn":16},{"ruleId":"1092","severity":1,"message":"1093","line":99,"column":5,"nodeType":"1046","messageId":"1094","endLine":99,"endColumn":16},{"ruleId":"1022","severity":2,"message":"1268","line":11,"column":5,"nodeType":"1024","messageId":"1025","endLine":11,"endColumn":11},{"ruleId":"1022","severity":2,"message":"1140","line":11,"column":13,"nodeType":"1024","messageId":"1025","endLine":11,"endColumn":15},{"ruleId":"1022","severity":2,"message":"1273","line":11,"column":17,"nodeType":"1024","messageId":"1025","endLine":11,"endColumn":28},{"ruleId":"1022","severity":2,"message":"1260","line":11,"column":30,"nodeType":"1024","messageId":"1025","endLine":11,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1261","line":11,"column":38,"nodeType":"1024","messageId":"1025","endLine":11,"endColumn":43},{"ruleId":"1030","severity":2,"message":"1031","line":14,"column":5,"nodeType":"1032","messageId":"1033","endLine":31,"endColumn":17},{"ruleId":"1022","severity":2,"message":"1275","line":26,"column":60,"nodeType":"1042","messageId":"1025","endLine":26,"endColumn":71},{"ruleId":"1092","severity":1,"message":"1093","line":40,"column":5,"nodeType":"1046","messageId":"1094","endLine":40,"endColumn":16},{"ruleId":"1092","severity":1,"message":"1093","line":43,"column":5,"nodeType":"1046","messageId":"1094","endLine":43,"endColumn":16},{"ruleId":"1022","severity":2,"message":"1268","line":11,"column":5,"nodeType":"1024","messageId":"1025","endLine":11,"endColumn":11},{"ruleId":"1022","severity":2,"message":"1258","line":11,"column":13,"nodeType":"1024","messageId":"1025","endLine":11,"endColumn":22},{"ruleId":"1022","severity":2,"message":"1261","line":11,"column":24,"nodeType":"1024","messageId":"1025","endLine":11,"endColumn":29},{"ruleId":"1022","severity":2,"message":"1260","line":11,"column":31,"nodeType":"1024","messageId":"1025","endLine":11,"endColumn":37},{"ruleId":"1077","severity":2,"message":"1264","line":25,"column":21,"nodeType":"1042","messageId":"1069","endLine":25,"endColumn":22},{"ruleId":"1067","severity":1,"message":"1265","line":25,"column":21,"nodeType":"1042","messageId":"1069","endLine":25,"endColumn":22},{"ruleId":"1048","severity":2,"message":"1049","line":29,"column":11,"nodeType":"1050","messageId":"1051","endLine":29,"endColumn":33,"fix":"1280"},{"ruleId":"1054","severity":2,"message":"1281","line":29,"column":11,"nodeType":"1042","messageId":"1056","endLine":29,"endColumn":16},{"ruleId":"1061","severity":2,"message":"1270","line":29,"column":11,"nodeType":"1042","messageId":"1056","endLine":29,"endColumn":16},{"ruleId":"1282","severity":2,"message":"1283","line":31,"column":7,"nodeType":"1042","messageId":"1284","endLine":31,"endColumn":12},{"ruleId":"1022","severity":2,"message":"1272","line":31,"column":21,"nodeType":"1042","messageId":"1025","endLine":31,"endColumn":26},{"ruleId":"1030","severity":2,"message":"1031","line":39,"column":5,"nodeType":"1032","messageId":"1033","endLine":66,"endColumn":11},{"ruleId":"1092","severity":1,"message":"1093","line":79,"column":5,"nodeType":"1046","messageId":"1094","endLine":79,"endColumn":16},{"ruleId":"1092","severity":1,"message":"1093","line":82,"column":5,"nodeType":"1046","messageId":"1094","endLine":82,"endColumn":16},{"ruleId":"1022","severity":2,"message":"1268","line":54,"column":15,"nodeType":"1024","messageId":"1025","endLine":54,"endColumn":21},{"ruleId":"1022","severity":2,"message":"1258","line":54,"column":23,"nodeType":"1024","messageId":"1025","endLine":54,"endColumn":32},{"ruleId":"1022","severity":2,"message":"1261","line":63,"column":13,"nodeType":"1024","messageId":"1025","endLine":63,"endColumn":18},{"ruleId":"1067","severity":1,"message":"1274","line":85,"column":13,"nodeType":"1042","messageId":"1069","endLine":85,"endColumn":15},{"ruleId":"1022","severity":2,"message":"1258","line":86,"column":13,"nodeType":"1024","messageId":"1025","endLine":86,"endColumn":22},{"ruleId":"1022","severity":2,"message":"1260","line":86,"column":24,"nodeType":"1024","messageId":"1025","endLine":86,"endColumn":30},{"ruleId":"1022","severity":2,"message":"1268","line":91,"column":13,"nodeType":"1024","messageId":"1025","endLine":91,"endColumn":19},{"ruleId":"1022","severity":2,"message":"1258","line":91,"column":21,"nodeType":"1024","messageId":"1025","endLine":91,"endColumn":30},{"ruleId":"1092","severity":1,"message":"1093","line":93,"column":5,"nodeType":"1046","messageId":"1094","endLine":93,"endColumn":16},{"ruleId":"1092","severity":1,"message":"1093","line":95,"column":5,"nodeType":"1046","messageId":"1094","endLine":95,"endColumn":16},{"ruleId":"1092","severity":1,"message":"1093","line":99,"column":7,"nodeType":"1046","messageId":"1094","endLine":99,"endColumn":18},{"ruleId":"1022","severity":2,"message":"1268","line":119,"column":13,"nodeType":"1024","messageId":"1025","endLine":119,"endColumn":19},{"ruleId":"1022","severity":2,"message":"1258","line":119,"column":21,"nodeType":"1024","messageId":"1025","endLine":119,"endColumn":30},{"ruleId":"1030","severity":2,"message":"1031","line":123,"column":7,"nodeType":"1032","messageId":"1033","endLine":160,"endColumn":9},{"ruleId":"1098","severity":2,"message":"1099","line":124,"column":15,"nodeType":"1042","messageId":"1100","endLine":124,"endColumn":16},{"ruleId":"1044","severity":2,"message":"1053","line":143,"column":15,"nodeType":"1046","messageId":"1047","endLine":143,"endColumn":32},{"ruleId":"1183","severity":2,"message":"1285","line":171,"column":42,"nodeType":"1189","messageId":"1186","endLine":171,"endColumn":57,"fix":"1286"},{"ruleId":"1183","severity":2,"message":"1287","line":171,"column":57,"nodeType":"1185","messageId":"1186","endLine":171,"endColumn":60,"fix":"1288"},{"ruleId":"1183","severity":2,"message":"1289","line":171,"column":60,"nodeType":"1189","messageId":"1186","endLine":171,"endColumn":75,"fix":"1290"},{"ruleId":"1092","severity":1,"message":"1093","line":221,"column":5,"nodeType":"1046","messageId":"1094","endLine":221,"endColumn":16},{"ruleId":"1092","severity":1,"message":"1093","line":224,"column":5,"nodeType":"1046","messageId":"1094","endLine":224,"endColumn":16},{"ruleId":"1030","severity":2,"message":"1031","line":17,"column":31,"nodeType":"1032","messageId":"1033","endLine":17,"endColumn":73},{"ruleId":"1291","severity":2,"message":"1292","line":4,"column":18,"nodeType":"1293","messageId":"1294","endLine":4,"endColumn":19,"fix":"1295"},{"ruleId":"1291","severity":2,"message":"1296","line":4,"column":78,"nodeType":"1293","messageId":"1297","endLine":4,"endColumn":79,"fix":"1298"},{"ruleId":"1291","severity":2,"message":"1292","line":5,"column":18,"nodeType":"1293","messageId":"1294","endLine":5,"endColumn":19,"fix":"1299"},{"ruleId":"1291","severity":2,"message":"1296","line":5,"column":67,"nodeType":"1293","messageId":"1297","endLine":5,"endColumn":68,"fix":"1300"},{"ruleId":"1291","severity":2,"message":"1292","line":12,"column":12,"nodeType":"1293","messageId":"1294","endLine":12,"endColumn":13,"fix":"1301"},{"ruleId":"1077","severity":2,"message":"1302","line":12,"column":57,"nodeType":"1042","messageId":"1069","endLine":12,"endColumn":61},{"ruleId":"1067","severity":1,"message":"1302","line":12,"column":57,"nodeType":"1042","messageId":"1069","endLine":12,"endColumn":61},{"ruleId":"1291","severity":2,"message":"1296","line":12,"column":61,"nodeType":"1293","messageId":"1297","endLine":12,"endColumn":62,"fix":"1303"},{"ruleId":"1291","severity":2,"message":"1292","line":12,"column":78,"nodeType":"1304","messageId":"1294","endLine":12,"endColumn":79,"fix":"1305"},{"ruleId":"1291","severity":2,"message":"1296","line":12,"column":125,"nodeType":"1304","messageId":"1297","endLine":12,"endColumn":126,"fix":"1306"},{"ruleId":"1030","severity":2,"message":"1031","line":13,"column":31,"nodeType":"1032","messageId":"1033","endLine":13,"endColumn":63},{"ruleId":"1291","severity":2,"message":"1292","line":17,"column":12,"nodeType":"1293","messageId":"1294","endLine":17,"endColumn":13,"fix":"1307"},{"ruleId":"1077","severity":2,"message":"1302","line":17,"column":61,"nodeType":"1042","messageId":"1069","endLine":17,"endColumn":65},{"ruleId":"1067","severity":1,"message":"1302","line":17,"column":61,"nodeType":"1042","messageId":"1069","endLine":17,"endColumn":65},{"ruleId":"1291","severity":2,"message":"1296","line":17,"column":65,"nodeType":"1293","messageId":"1297","endLine":17,"endColumn":66,"fix":"1308"},{"ruleId":"1291","severity":2,"message":"1292","line":17,"column":82,"nodeType":"1304","messageId":"1294","endLine":17,"endColumn":83,"fix":"1309"},{"ruleId":"1291","severity":2,"message":"1296","line":17,"column":133,"nodeType":"1304","messageId":"1297","endLine":17,"endColumn":134,"fix":"1310"},{"ruleId":"1291","severity":2,"message":"1292","line":22,"column":12,"nodeType":"1293","messageId":"1294","endLine":22,"endColumn":13,"fix":"1311"},{"ruleId":"1077","severity":2,"message":"1302","line":22,"column":57,"nodeType":"1042","messageId":"1069","endLine":22,"endColumn":61},{"ruleId":"1067","severity":1,"message":"1302","line":22,"column":57,"nodeType":"1042","messageId":"1069","endLine":22,"endColumn":61},{"ruleId":"1291","severity":2,"message":"1296","line":22,"column":61,"nodeType":"1293","messageId":"1297","endLine":22,"endColumn":62,"fix":"1312"},{"ruleId":"1291","severity":2,"message":"1292","line":22,"column":78,"nodeType":"1304","messageId":"1294","endLine":22,"endColumn":79,"fix":"1313"},{"ruleId":"1291","severity":2,"message":"1296","line":22,"column":125,"nodeType":"1304","messageId":"1297","endLine":22,"endColumn":126,"fix":"1314"},{"ruleId":"1291","severity":2,"message":"1292","line":27,"column":12,"nodeType":"1293","messageId":"1294","endLine":27,"endColumn":13,"fix":"1315"},{"ruleId":"1077","severity":2,"message":"1302","line":27,"column":54,"nodeType":"1042","messageId":"1069","endLine":27,"endColumn":58},{"ruleId":"1067","severity":1,"message":"1302","line":27,"column":54,"nodeType":"1042","messageId":"1069","endLine":27,"endColumn":58},{"ruleId":"1291","severity":2,"message":"1296","line":27,"column":58,"nodeType":"1293","messageId":"1297","endLine":27,"endColumn":59,"fix":"1316"},{"ruleId":"1291","severity":2,"message":"1292","line":27,"column":75,"nodeType":"1304","messageId":"1294","endLine":27,"endColumn":76,"fix":"1317"},{"ruleId":"1291","severity":2,"message":"1296","line":27,"column":119,"nodeType":"1304","messageId":"1297","endLine":27,"endColumn":120,"fix":"1318"},{"ruleId":"1291","severity":2,"message":"1292","line":32,"column":12,"nodeType":"1293","messageId":"1294","endLine":32,"endColumn":13,"fix":"1319"},{"ruleId":"1077","severity":2,"message":"1302","line":32,"column":56,"nodeType":"1042","messageId":"1069","endLine":32,"endColumn":60},{"ruleId":"1067","severity":1,"message":"1302","line":32,"column":56,"nodeType":"1042","messageId":"1069","endLine":32,"endColumn":60},{"ruleId":"1291","severity":2,"message":"1296","line":32,"column":60,"nodeType":"1293","messageId":"1297","endLine":32,"endColumn":61,"fix":"1320"},{"ruleId":"1291","severity":2,"message":"1292","line":32,"column":77,"nodeType":"1304","messageId":"1294","endLine":32,"endColumn":78,"fix":"1321"},{"ruleId":"1291","severity":2,"message":"1296","line":32,"column":123,"nodeType":"1304","messageId":"1297","endLine":32,"endColumn":124,"fix":"1322"},{"ruleId":"1291","severity":2,"message":"1292","line":37,"column":12,"nodeType":"1293","messageId":"1294","endLine":37,"endColumn":13,"fix":"1323"},{"ruleId":"1077","severity":2,"message":"1302","line":37,"column":58,"nodeType":"1042","messageId":"1069","endLine":37,"endColumn":62},{"ruleId":"1067","severity":1,"message":"1302","line":37,"column":58,"nodeType":"1042","messageId":"1069","endLine":37,"endColumn":62},{"ruleId":"1291","severity":2,"message":"1296","line":37,"column":62,"nodeType":"1293","messageId":"1297","endLine":37,"endColumn":63,"fix":"1324"},{"ruleId":"1291","severity":2,"message":"1292","line":37,"column":79,"nodeType":"1304","messageId":"1294","endLine":37,"endColumn":80,"fix":"1325"},{"ruleId":"1291","severity":2,"message":"1296","line":37,"column":127,"nodeType":"1304","messageId":"1297","endLine":37,"endColumn":128,"fix":"1326"},{"ruleId":"1291","severity":2,"message":"1292","line":43,"column":12,"nodeType":"1293","messageId":"1294","endLine":43,"endColumn":13,"fix":"1327"},{"ruleId":"1077","severity":2,"message":"1302","line":43,"column":49,"nodeType":"1042","messageId":"1069","endLine":43,"endColumn":53},{"ruleId":"1067","severity":1,"message":"1302","line":43,"column":49,"nodeType":"1042","messageId":"1069","endLine":43,"endColumn":53},{"ruleId":"1291","severity":2,"message":"1296","line":43,"column":53,"nodeType":"1293","messageId":"1297","endLine":43,"endColumn":54,"fix":"1328"},{"ruleId":"1291","severity":2,"message":"1292","line":43,"column":70,"nodeType":"1304","messageId":"1294","endLine":43,"endColumn":71,"fix":"1329"},{"ruleId":"1291","severity":2,"message":"1296","line":43,"column":109,"nodeType":"1304","messageId":"1297","endLine":43,"endColumn":110,"fix":"1330"},{"ruleId":"1291","severity":2,"message":"1292","line":48,"column":12,"nodeType":"1293","messageId":"1294","endLine":48,"endColumn":13,"fix":"1331"},{"ruleId":"1077","severity":2,"message":"1302","line":48,"column":49,"nodeType":"1042","messageId":"1069","endLine":48,"endColumn":53},{"ruleId":"1067","severity":1,"message":"1302","line":48,"column":49,"nodeType":"1042","messageId":"1069","endLine":48,"endColumn":53},{"ruleId":"1291","severity":2,"message":"1296","line":48,"column":53,"nodeType":"1293","messageId":"1297","endLine":48,"endColumn":54,"fix":"1332"},{"ruleId":"1291","severity":2,"message":"1292","line":48,"column":70,"nodeType":"1304","messageId":"1294","endLine":48,"endColumn":71,"fix":"1333"},{"ruleId":"1291","severity":2,"message":"1296","line":48,"column":109,"nodeType":"1304","messageId":"1297","endLine":48,"endColumn":110,"fix":"1334"},{"ruleId":"1092","severity":1,"message":"1093","line":34,"column":5,"nodeType":"1046","messageId":"1094","endLine":34,"endColumn":16},{"ruleId":"1022","severity":2,"message":"1335","line":38,"column":13,"nodeType":"1024","messageId":"1025","endLine":38,"endColumn":20},{"ruleId":"1022","severity":2,"message":"1336","line":39,"column":17,"nodeType":"1042","messageId":"1025","endLine":39,"endColumn":23},{"ruleId":"1092","severity":1,"message":"1093","line":40,"column":7,"nodeType":"1046","messageId":"1094","endLine":40,"endColumn":18},{"ruleId":"1030","severity":2,"message":"1031","line":41,"column":13,"nodeType":"1032","messageId":"1033","endLine":41,"endColumn":86},{"ruleId":"1092","severity":1,"message":"1093","line":43,"column":7,"nodeType":"1046","messageId":"1094","endLine":43,"endColumn":18},{"ruleId":"1022","severity":2,"message":"1337","line":44,"column":15,"nodeType":"1042","messageId":"1025","endLine":44,"endColumn":21},{"ruleId":"1338","severity":2,"message":"1339","line":53,"column":14,"nodeType":"1340","messageId":"1341","endLine":53,"endColumn":33,"fix":"1342"},{"ruleId":"1343","severity":2,"message":"1344","line":53,"column":34,"nodeType":"1340","messageId":"1345","endLine":58,"endColumn":11,"fix":"1346"},{"ruleId":"1347","severity":2,"message":"1348","line":58,"column":11,"nodeType":"1108","messageId":"1349","fix":"1350"},{"ruleId":"1351","severity":2,"message":"1352","line":86,"column":9,"nodeType":"1032","messageId":"1353","endLine":86,"endColumn":85},{"ruleId":"1354","severity":2,"message":"1355","line":1,"column":1,"nodeType":"1129","messageId":"1356","endLine":252,"endColumn":1},{"ruleId":"1022","severity":2,"message":"1357","line":13,"column":13,"nodeType":"1024","messageId":"1025","endLine":13,"endColumn":21},{"ruleId":"1022","severity":2,"message":"1358","line":13,"column":23,"nodeType":"1024","messageId":"1025","endLine":13,"endColumn":31},{"ruleId":"1022","severity":2,"message":"1359","line":20,"column":7,"nodeType":"1024","messageId":"1025","endLine":20,"endColumn":13},{"ruleId":"1022","severity":2,"message":"1360","line":20,"column":15,"nodeType":"1024","messageId":"1025","endLine":20,"endColumn":20},{"ruleId":"1022","severity":2,"message":"1361","line":20,"column":22,"nodeType":"1024","messageId":"1025","endLine":20,"endColumn":26},{"ruleId":"1022","severity":2,"message":"1362","line":20,"column":28,"nodeType":"1024","messageId":"1025","endLine":20,"endColumn":32},{"ruleId":"1022","severity":2,"message":"1140","line":20,"column":34,"nodeType":"1024","messageId":"1025","endLine":20,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1363","line":20,"column":38,"nodeType":"1024","messageId":"1025","endLine":20,"endColumn":44},{"ruleId":"1022","severity":2,"message":"1142","line":20,"column":46,"nodeType":"1024","messageId":"1025","endLine":20,"endColumn":50},{"ruleId":"1247","severity":2,"message":"1248","line":24,"column":7,"nodeType":"1108","endLine":24,"endColumn":97},{"ruleId":"1364","severity":2,"message":"1365","line":24,"column":7,"nodeType":"1108","endLine":24,"endColumn":97},{"ruleId":"1030","severity":2,"message":"1031","line":24,"column":7,"nodeType":"1032","messageId":"1033","endLine":30,"endColumn":12},{"ruleId":"1067","severity":1,"message":"1173","line":41,"column":29,"nodeType":"1042","messageId":"1069","endLine":41,"endColumn":38},{"ruleId":"1022","severity":2,"message":"1335","line":51,"column":13,"nodeType":"1024","messageId":"1025","endLine":51,"endColumn":20},{"ruleId":"1022","severity":2,"message":"1366","line":52,"column":25,"nodeType":"1042","messageId":"1025","endLine":52,"endColumn":33},{"ruleId":"1022","severity":2,"message":"1367","line":52,"column":34,"nodeType":"1042","messageId":"1025","endLine":52,"endColumn":42},{"ruleId":"1022","severity":2,"message":"1366","line":54,"column":36,"nodeType":"1042","messageId":"1025","endLine":54,"endColumn":44},{"ruleId":"1022","severity":2,"message":"1367","line":54,"column":45,"nodeType":"1042","messageId":"1025","endLine":54,"endColumn":53},{"ruleId":"1022","severity":2,"message":"1335","line":62,"column":13,"nodeType":"1024","messageId":"1025","endLine":62,"endColumn":20},{"ruleId":"1022","severity":2,"message":"1368","line":70,"column":13,"nodeType":"1042","messageId":"1025","endLine":70,"endColumn":17},{"ruleId":"1113","severity":2,"message":"1369","line":77,"column":9,"nodeType":"1115","messageId":"1116","endLine":79,"endColumn":4},{"ruleId":"1092","severity":1,"message":"1093","line":78,"column":5,"nodeType":"1046","messageId":"1094","endLine":78,"endColumn":16},{"ruleId":"1079","severity":2,"message":"1370","line":82,"column":13,"nodeType":"1042","messageId":"1081","endLine":82,"endColumn":24},{"ruleId":"1079","severity":2,"message":"1371","line":82,"column":26,"nodeType":"1042","messageId":"1081","endLine":82,"endColumn":40},{"ruleId":"1079","severity":2,"message":"1372","line":82,"column":42,"nodeType":"1042","messageId":"1081","endLine":82,"endColumn":53},{"ruleId":"1127","severity":1,"message":"1373","line":86,"column":1,"nodeType":"1129","messageId":"1130","endLine":86,"endColumn":130},{"ruleId":"1127","severity":1,"message":"1374","line":88,"column":1,"nodeType":"1129","messageId":"1130","endLine":88,"endColumn":139},{"ruleId":"1127","severity":1,"message":"1375","line":98,"column":1,"nodeType":"1129","messageId":"1130","endLine":98,"endColumn":135},{"ruleId":"1127","severity":1,"message":"1374","line":99,"column":1,"nodeType":"1129","messageId":"1130","endLine":99,"endColumn":139},{"ruleId":"1127","severity":1,"message":"1376","line":125,"column":1,"nodeType":"1129","messageId":"1130","endLine":125,"endColumn":141},{"ruleId":"1106","severity":2,"message":"1377","line":231,"column":15,"nodeType":"1108","endLine":231,"endColumn":213},{"ruleId":"1378","severity":2,"message":"1379","line":3,"column":3,"nodeType":"1042","messageId":"1380","endLine":3,"endColumn":4},{"ruleId":"1378","severity":2,"message":"1379","line":9,"column":3,"nodeType":"1042","messageId":"1380","endLine":9,"endColumn":4},{"ruleId":"1131","severity":1,"message":"1132","line":12,"column":1,"nodeType":"1129","messageId":"1133","endLine":12,"endColumn":3},{"ruleId":"1131","severity":1,"message":"1132","line":13,"column":1,"nodeType":"1129","messageId":"1133","endLine":13,"endColumn":3},{"ruleId":"1079","severity":2,"message":"1381","line":18,"column":9,"nodeType":"1042","messageId":"1081","endLine":18,"endColumn":14},{"ruleId":"1077","severity":2,"message":"1382","line":23,"column":34,"nodeType":"1042","messageId":"1069","endLine":23,"endColumn":35},{"ruleId":"1067","severity":1,"message":"1383","line":23,"column":34,"nodeType":"1042","messageId":"1069","endLine":23,"endColumn":35},{"ruleId":"1131","severity":1,"message":"1132","line":24,"column":1,"nodeType":"1129","messageId":"1133","endLine":24,"endColumn":3},{"ruleId":"1131","severity":1,"message":"1132","line":25,"column":1,"nodeType":"1129","messageId":"1133","endLine":25,"endColumn":3},{"ruleId":"1378","severity":2,"message":"1384","line":31,"column":2,"nodeType":"1042","messageId":"1380","endLine":31,"endColumn":5},{"ruleId":"1385","severity":2,"message":"1386","line":33,"column":2,"nodeType":"1387","messageId":"1388","endLine":37,"endColumn":3},{"ruleId":"1389","severity":2,"message":"1390","line":33,"column":2,"nodeType":"1387","messageId":"1391","endLine":37,"endColumn":3},{"ruleId":"1079","severity":2,"message":"1392","line":3,"column":7,"nodeType":"1042","messageId":"1081","endLine":3,"endColumn":14},{"ruleId":"1378","severity":2,"message":"1393","line":14,"column":3,"nodeType":"1042","messageId":"1380","endLine":14,"endColumn":6},{"ruleId":"1131","severity":1,"message":"1132","line":62,"column":1,"nodeType":"1129","messageId":"1133","endLine":62,"endColumn":3},{"ruleId":"1378","severity":2,"message":"1394","line":62,"column":4,"nodeType":"1042","messageId":"1380","endLine":62,"endColumn":8},{"ruleId":"1395","severity":2,"message":"1396","line":67,"column":8,"nodeType":"1042","messageId":"1397","endLine":67,"endColumn":9},{"ruleId":"1180","severity":1,"message":"1181","line":70,"column":6,"nodeType":"1182","messageId":"1094","endLine":75,"endColumn":21},{"ruleId":"1077","severity":2,"message":"1398","line":70,"column":33,"nodeType":"1042","messageId":"1069","endLine":70,"endColumn":37},{"ruleId":"1067","severity":1,"message":"1399","line":70,"column":33,"nodeType":"1042","messageId":"1069","endLine":70,"endColumn":37},{"ruleId":"1395","severity":2,"message":"1396","line":85,"column":8,"nodeType":"1042","messageId":"1397","endLine":85,"endColumn":9},{"ruleId":"1291","severity":2,"message":"1292","line":101,"column":50,"nodeType":"1304","messageId":"1294","endLine":101,"endColumn":51,"fix":"1400"},{"ruleId":"1291","severity":2,"message":"1292","line":104,"column":38,"nodeType":"1304","messageId":"1294","endLine":104,"endColumn":39,"fix":"1401"},{"ruleId":"1291","severity":2,"message":"1296","line":111,"column":26,"nodeType":"1304","messageId":"1297","endLine":111,"endColumn":27,"fix":"1402"},{"ruleId":"1291","severity":2,"message":"1296","line":117,"column":23,"nodeType":"1304","messageId":"1297","endLine":117,"endColumn":24,"fix":"1403"},{"ruleId":"1131","severity":1,"message":"1132","line":31,"column":1,"nodeType":"1129","messageId":"1133","endLine":31,"endColumn":3},{"ruleId":"1131","severity":1,"message":"1132","line":32,"column":1,"nodeType":"1129","messageId":"1133","endLine":32,"endColumn":3},{"ruleId":"1131","severity":1,"message":"1132","line":33,"column":1,"nodeType":"1129","messageId":"1133","endLine":33,"endColumn":3},{"ruleId":"1089","severity":2,"message":"1090","line":47,"column":9,"nodeType":"1091","endLine":47,"endColumn":19},{"ruleId":"1131","severity":1,"message":"1132","line":48,"column":1,"nodeType":"1129","messageId":"1133","endLine":48,"endColumn":3},{"ruleId":"1131","severity":1,"message":"1132","line":49,"column":1,"nodeType":"1129","messageId":"1133","endLine":49,"endColumn":3},{"ruleId":"1092","severity":1,"message":"1093","line":52,"column":11,"nodeType":"1046","messageId":"1094","endLine":52,"endColumn":22},{"ruleId":"1404","severity":1,"message":"1405","line":54,"column":25,"nodeType":"1091","endLine":54,"endColumn":76},{"ruleId":"1092","severity":1,"message":"1093","line":55,"column":13,"nodeType":"1046","messageId":"1094","endLine":55,"endColumn":24},{"ruleId":"1092","severity":1,"message":"1093","line":63,"column":11,"nodeType":"1046","messageId":"1094","endLine":63,"endColumn":22},{"ruleId":"1404","severity":1,"message":"1405","line":64,"column":18,"nodeType":"1091","endLine":64,"endColumn":75},{"ruleId":"1092","severity":1,"message":"1093","line":66,"column":11,"nodeType":"1046","messageId":"1094","endLine":66,"endColumn":22},{"ruleId":"1092","severity":1,"message":"1093","line":69,"column":11,"nodeType":"1046","messageId":"1094","endLine":69,"endColumn":22},{"ruleId":"1092","severity":1,"message":"1093","line":73,"column":7,"nodeType":"1046","messageId":"1094","endLine":73,"endColumn":18},{"ruleId":"1092","severity":1,"message":"1093","line":77,"column":7,"nodeType":"1046","messageId":"1094","endLine":77,"endColumn":18},{"ruleId":"1131","severity":1,"message":"1132","line":5,"column":1,"nodeType":"1129","messageId":"1133","endLine":5,"endColumn":3},{"ruleId":"1117","severity":2,"message":"1118","line":5,"column":16,"nodeType":"1091","messageId":"1119","endLine":5,"endColumn":30},{"ruleId":"1131","severity":1,"message":"1132","line":10,"column":1,"nodeType":"1129","messageId":"1133","endLine":10,"endColumn":3},{"ruleId":"1131","severity":1,"message":"1132","line":17,"column":2,"nodeType":"1129","messageId":"1133","endLine":17,"endColumn":4},{"ruleId":"1117","severity":2,"message":"1118","line":17,"column":18,"nodeType":"1091","messageId":"1119","endLine":17,"endColumn":32},{"ruleId":"1117","severity":2,"message":"1118","line":19,"column":16,"nodeType":"1091","messageId":"1119","endLine":19,"endColumn":30},{"ruleId":"1117","severity":2,"message":"1118","line":27,"column":25,"nodeType":"1091","messageId":"1119","endLine":27,"endColumn":39},{"ruleId":"1131","severity":1,"message":"1132","line":28,"column":1,"nodeType":"1129","messageId":"1133","endLine":28,"endColumn":3},{"ruleId":"1017","severity":2,"message":"1018","line":13,"column":20,"nodeType":"1019","endLine":13,"endColumn":52},{"ruleId":"1022","severity":2,"message":"1023","line":76,"column":13,"nodeType":"1024","messageId":"1025","endLine":76,"endColumn":17},{"ruleId":"1022","severity":2,"message":"1026","line":76,"column":19,"nodeType":"1024","messageId":"1025","endLine":76,"endColumn":28},{"ruleId":"1022","severity":2,"message":"1406","line":93,"column":13,"nodeType":"1024","messageId":"1025","endLine":93,"endColumn":25},{"ruleId":"1022","severity":2,"message":"1407","line":93,"column":27,"nodeType":"1024","messageId":"1025","endLine":93,"endColumn":42},{"ruleId":"1034","severity":2,"message":"1035","line":97,"column":5,"nodeType":"1036","messageId":"1037","endLine":113,"endColumn":8},{"ruleId":"1079","severity":2,"message":"1080","line":103,"column":15,"nodeType":"1042","messageId":"1081","endLine":103,"endColumn":25},{"ruleId":"1022","severity":2,"message":"1408","line":103,"column":15,"nodeType":"1024","messageId":"1025","endLine":103,"endColumn":25},{"ruleId":"1079","severity":2,"message":"1409","line":103,"column":27,"nodeType":"1042","messageId":"1081","endLine":103,"endColumn":39},{"ruleId":"1022","severity":2,"message":"1410","line":103,"column":27,"nodeType":"1024","messageId":"1025","endLine":103,"endColumn":39},{"ruleId":"1079","severity":2,"message":"1082","line":103,"column":41,"nodeType":"1042","messageId":"1081","endLine":103,"endColumn":50},{"ruleId":"1022","severity":2,"message":"1411","line":103,"column":41,"nodeType":"1024","messageId":"1025","endLine":103,"endColumn":50},{"ruleId":"1030","severity":2,"message":"1031","line":104,"column":13,"nodeType":"1032","messageId":"1033","endLine":104,"endColumn":33},{"ruleId":"1038","severity":2,"message":"1039","line":104,"column":53,"nodeType":"1083","endLine":104,"endColumn":84},{"ruleId":"1044","severity":2,"message":"1053","line":138,"column":18,"nodeType":"1046","messageId":"1047","endLine":138,"endColumn":34},{"ruleId":"1044","severity":2,"message":"1045","line":139,"column":22,"nodeType":"1046","messageId":"1047","endLine":139,"endColumn":83},{"ruleId":"1048","severity":2,"message":"1063","line":144,"column":11,"nodeType":"1064","messageId":"1051","endLine":144,"endColumn":46},{"ruleId":"1022","severity":2,"message":"1065","line":147,"column":19,"nodeType":"1024","messageId":"1025","endLine":147,"endColumn":27},{"ruleId":"1034","severity":2,"message":"1035","line":148,"column":11,"nodeType":"1036","messageId":"1037","endLine":160,"endColumn":14},{"ruleId":"1038","severity":2,"message":"1039","line":148,"column":47,"nodeType":"1066","endLine":160,"endColumn":12},{"ruleId":"1044","severity":2,"message":"1045","line":153,"column":25,"nodeType":"1046","messageId":"1047","endLine":153,"endColumn":86},{"ruleId":"1044","severity":2,"message":"1045","line":165,"column":23,"nodeType":"1046","messageId":"1047","endLine":165,"endColumn":84},{"ruleId":"1077","severity":2,"message":"1412","line":183,"column":26,"nodeType":"1042","messageId":"1069","endLine":183,"endColumn":28},{"ruleId":"1067","severity":1,"message":"1413","line":183,"column":26,"nodeType":"1042","messageId":"1069","endLine":183,"endColumn":28},{"ruleId":"1077","severity":2,"message":"1414","line":183,"column":30,"nodeType":"1042","messageId":"1069","endLine":183,"endColumn":32},{"ruleId":"1067","severity":1,"message":"1415","line":183,"column":30,"nodeType":"1042","messageId":"1069","endLine":183,"endColumn":32},{"ruleId":"1416","severity":2,"message":"1417","line":187,"column":9,"nodeType":null,"messageId":"1418","endLine":187,"endColumn":14,"fix":"1419"},{"ruleId":"1054","severity":2,"message":"1420","line":187,"column":15,"nodeType":"1042","messageId":"1056","endLine":187,"endColumn":16},{"ruleId":"1061","severity":2,"message":"1072","line":187,"column":15,"nodeType":"1042","messageId":"1056","endLine":187,"endColumn":16},{"ruleId":"1073","severity":2,"message":"1074","line":188,"column":9,"nodeType":"1075","messageId":"1076","endLine":193,"endColumn":10},{"ruleId":"1054","severity":2,"message":"1420","line":205,"column":18,"nodeType":"1042","messageId":"1056","endLine":205,"endColumn":19},{"ruleId":"1061","severity":2,"message":"1072","line":205,"column":18,"nodeType":"1042","messageId":"1056","endLine":205,"endColumn":19},{"ruleId":"1044","severity":2,"message":"1053","line":271,"column":24,"nodeType":"1046","messageId":"1047","endLine":271,"endColumn":41},{"ruleId":"1034","severity":2,"message":"1035","line":282,"column":5,"nodeType":"1036","messageId":"1037","endLine":285,"endColumn":8},{"ruleId":"1044","severity":2,"message":"1045","line":282,"column":5,"nodeType":"1046","messageId":"1047","endLine":282,"endColumn":30},{"ruleId":"1022","severity":2,"message":"1029","line":282,"column":16,"nodeType":"1042","messageId":"1025","endLine":282,"endColumn":30},{"ruleId":"1079","severity":2,"message":"1080","line":283,"column":15,"nodeType":"1042","messageId":"1081","endLine":283,"endColumn":25},{"ruleId":"1022","severity":2,"message":"1041","line":283,"column":15,"nodeType":"1024","messageId":"1025","endLine":283,"endColumn":25},{"ruleId":"1079","severity":2,"message":"1082","line":283,"column":27,"nodeType":"1042","messageId":"1081","endLine":283,"endColumn":36},{"ruleId":"1022","severity":2,"message":"1043","line":283,"column":27,"nodeType":"1024","messageId":"1025","endLine":283,"endColumn":36},{"ruleId":"1044","severity":2,"message":"1045","line":283,"column":41,"nodeType":"1046","messageId":"1047","endLine":283,"endColumn":63},{"ruleId":"1022","severity":2,"message":"1028","line":283,"column":52,"nodeType":"1042","messageId":"1025","endLine":283,"endColumn":63},{"ruleId":"1038","severity":2,"message":"1039","line":284,"column":53,"nodeType":"1083","endLine":284,"endColumn":84},{"ruleId":"1044","severity":2,"message":"1053","line":289,"column":17,"nodeType":"1046","messageId":"1047","endLine":289,"endColumn":30},{"ruleId":"1240","severity":2,"message":"1241","line":315,"column":7,"nodeType":"1242","messageId":"1243","endLine":315,"endColumn":14,"fix":"1421"},{"ruleId":"1067","severity":1,"message":"1084","line":316,"column":14,"nodeType":"1042","messageId":"1069","endLine":316,"endColumn":18},{"ruleId":"1048","severity":2,"message":"1063","line":343,"column":9,"nodeType":"1064","messageId":"1051","endLine":343,"endColumn":43},{"ruleId":"1048","severity":2,"message":"1063","line":345,"column":9,"nodeType":"1064","messageId":"1051","endLine":345,"endColumn":39},{"ruleId":"1044","severity":2,"message":"1045","line":364,"column":24,"nodeType":"1046","messageId":"1047","endLine":364,"endColumn":42},{"ruleId":"1022","severity":2,"message":"1101","line":364,"column":35,"nodeType":"1042","messageId":"1025","endLine":364,"endColumn":42},{"ruleId":"1022","severity":2,"message":"1104","line":364,"column":43,"nodeType":"1042","messageId":"1025","endLine":364,"endColumn":46},{"ruleId":"1044","severity":2,"message":"1053","line":376,"column":58,"nodeType":"1046","messageId":"1047","endLine":376,"endColumn":79},{"ruleId":"1127","severity":1,"message":"1422","line":444,"column":1,"nodeType":"1129","messageId":"1130","endLine":444,"endColumn":133},{"ruleId":"1044","severity":2,"message":"1045","line":444,"column":36,"nodeType":"1046","messageId":"1047","endLine":444,"endColumn":55},{"ruleId":"1022","severity":2,"message":"1423","line":444,"column":47,"nodeType":"1042","messageId":"1025","endLine":444,"endColumn":55},{"ruleId":"1127","severity":1,"message":"1424","line":517,"column":1,"nodeType":"1129","messageId":"1130","endLine":517,"endColumn":131},{"ruleId":"1109","severity":2,"message":"1110","line":523,"column":23,"nodeType":"1108","endLine":523,"endColumn":86},{"ruleId":"1109","severity":2,"message":"1110","line":533,"column":23,"nodeType":"1108","endLine":533,"endColumn":86},{"ruleId":"1425","severity":1,"message":"1426","line":27,"column":33,"nodeType":"1427","messageId":"1428","endLine":27,"endColumn":36,"suggestions":"1429"},{"ruleId":"1425","severity":1,"message":"1426","line":28,"column":20,"nodeType":"1427","messageId":"1428","endLine":28,"endColumn":23,"suggestions":"1430"},{"ruleId":"1425","severity":1,"message":"1426","line":36,"column":54,"nodeType":"1427","messageId":"1428","endLine":36,"endColumn":57,"suggestions":"1431"},{"ruleId":"1425","severity":1,"message":"1426","line":55,"column":28,"nodeType":"1427","messageId":"1428","endLine":55,"endColumn":31,"suggestions":"1432"},{"ruleId":"1425","severity":1,"message":"1426","line":13,"column":50,"nodeType":"1427","messageId":"1428","endLine":13,"endColumn":53,"suggestions":"1433"},{"ruleId":"1067","severity":1,"message":"1434","line":19,"column":17,"nodeType":"1042","messageId":"1069","endLine":19,"endColumn":24},{"ruleId":"1067","severity":1,"message":"1435","line":19,"column":26,"nodeType":"1042","messageId":"1069","endLine":19,"endColumn":32},{"ruleId":"1425","severity":1,"message":"1426","line":27,"column":28,"nodeType":"1427","messageId":"1428","endLine":27,"endColumn":31,"suggestions":"1436"},{"ruleId":"1425","severity":1,"message":"1426","line":47,"column":20,"nodeType":"1427","messageId":"1428","endLine":47,"endColumn":23,"suggestions":"1437"},{"ruleId":"1425","severity":1,"message":"1426","line":49,"column":26,"nodeType":"1427","messageId":"1428","endLine":49,"endColumn":29,"suggestions":"1438"},{"ruleId":"1425","severity":1,"message":"1426","line":30,"column":30,"nodeType":"1427","messageId":"1428","endLine":30,"endColumn":33,"suggestions":"1439"},{"ruleId":"1425","severity":1,"message":"1426","line":31,"column":29,"nodeType":"1427","messageId":"1428","endLine":31,"endColumn":32,"suggestions":"1440"},{"ruleId":"1425","severity":1,"message":"1426","line":38,"column":55,"nodeType":"1427","messageId":"1428","endLine":38,"endColumn":58,"suggestions":"1441"},{"ruleId":"1127","severity":1,"message":"1376","line":59,"column":1,"nodeType":"1129","messageId":"1130","endLine":59,"endColumn":141},{"ruleId":"1425","severity":1,"message":"1426","line":59,"column":56,"nodeType":"1427","messageId":"1428","endLine":59,"endColumn":59,"suggestions":"1442"},{"ruleId":"1425","severity":1,"message":"1426","line":59,"column":86,"nodeType":"1427","messageId":"1428","endLine":59,"endColumn":89,"suggestions":"1443"},{"ruleId":"1020","severity":2,"message":"1021","line":22,"column":22,"nodeType":"1019","endLine":22,"endColumn":33},{"ruleId":"1034","severity":2,"message":"1035","line":61,"column":5,"nodeType":"1036","messageId":"1037","endLine":67,"endColumn":8},{"ruleId":"1038","severity":2,"message":"1039","line":61,"column":17,"nodeType":"1066","endLine":67,"endColumn":6},{"ruleId":"1425","severity":1,"message":"1426","line":4,"column":31,"nodeType":"1427","messageId":"1428","endLine":4,"endColumn":34,"suggestions":"1444"},{"ruleId":"1425","severity":1,"message":"1426","line":5,"column":29,"nodeType":"1427","messageId":"1428","endLine":5,"endColumn":32,"suggestions":"1445"},{"ruleId":"1425","severity":1,"message":"1426","line":6,"column":18,"nodeType":"1427","messageId":"1428","endLine":6,"endColumn":21,"suggestions":"1446"},{"ruleId":"1131","severity":1,"message":"1132","line":32,"column":2,"nodeType":"1129","messageId":"1133","endLine":32,"endColumn":4},{"ruleId":"1092","severity":1,"message":"1093","line":32,"column":5,"nodeType":"1046","messageId":"1094","endLine":32,"endColumn":16},{"ruleId":"1425","severity":1,"message":"1426","line":4,"column":34,"nodeType":"1427","messageId":"1428","endLine":4,"endColumn":37,"suggestions":"1447"},{"ruleId":"1425","severity":1,"message":"1426","line":5,"column":18,"nodeType":"1427","messageId":"1428","endLine":5,"endColumn":21,"suggestions":"1448"},{"ruleId":"1425","severity":1,"message":"1426","line":6,"column":27,"nodeType":"1427","messageId":"1428","endLine":6,"endColumn":30,"suggestions":"1449"},{"ruleId":"1131","severity":1,"message":"1132","line":9,"column":1,"nodeType":"1129","messageId":"1133","endLine":9,"endColumn":3},{"ruleId":"1131","severity":1,"message":"1132","line":8,"column":1,"nodeType":"1129","messageId":"1133","endLine":8,"endColumn":3},{"ruleId":"1425","severity":1,"message":"1426","line":8,"column":29,"nodeType":"1427","messageId":"1428","endLine":8,"endColumn":32,"suggestions":"1450"},{"ruleId":"1131","severity":1,"message":"1132","line":9,"column":1,"nodeType":"1129","messageId":"1133","endLine":9,"endColumn":3},{"ruleId":"1425","severity":1,"message":"1426","line":9,"column":28,"nodeType":"1427","messageId":"1428","endLine":9,"endColumn":31,"suggestions":"1451"},{"ruleId":"1131","severity":1,"message":"1132","line":35,"column":2,"nodeType":"1129","messageId":"1133","endLine":35,"endColumn":4},{"ruleId":"1131","severity":1,"message":"1132","line":36,"column":2,"nodeType":"1129","messageId":"1133","endLine":36,"endColumn":4},{"ruleId":"1131","severity":1,"message":"1132","line":39,"column":2,"nodeType":"1129","messageId":"1133","endLine":39,"endColumn":4},{"ruleId":"1425","severity":1,"message":"1426","line":4,"column":27,"nodeType":"1427","messageId":"1428","endLine":4,"endColumn":30,"suggestions":"1452"},{"ruleId":"1425","severity":1,"message":"1426","line":5,"column":17,"nodeType":"1427","messageId":"1428","endLine":5,"endColumn":20,"suggestions":"1453"},{"ruleId":"1425","severity":1,"message":"1426","line":6,"column":24,"nodeType":"1427","messageId":"1428","endLine":6,"endColumn":27,"suggestions":"1454"},{"ruleId":"1425","severity":1,"message":"1426","line":8,"column":27,"nodeType":"1427","messageId":"1428","endLine":8,"endColumn":30,"suggestions":"1455"},{"ruleId":"1425","severity":1,"message":"1426","line":9,"column":26,"nodeType":"1427","messageId":"1428","endLine":9,"endColumn":29,"suggestions":"1456"},{"ruleId":"1131","severity":1,"message":"1132","line":18,"column":1,"nodeType":"1129","messageId":"1133","endLine":18,"endColumn":3},{"ruleId":"1131","severity":1,"message":"1132","line":29,"column":4,"nodeType":"1129","messageId":"1133","endLine":29,"endColumn":6},{"ruleId":"1131","severity":1,"message":"1132","line":35,"column":3,"nodeType":"1129","messageId":"1133","endLine":35,"endColumn":5},{"ruleId":"1131","severity":1,"message":"1132","line":36,"column":3,"nodeType":"1129","messageId":"1133","endLine":36,"endColumn":5},{"ruleId":"1131","severity":1,"message":"1132","line":37,"column":2,"nodeType":"1129","messageId":"1133","endLine":37,"endColumn":4},{"ruleId":"1131","severity":1,"message":"1132","line":38,"column":3,"nodeType":"1129","messageId":"1133","endLine":38,"endColumn":5},{"ruleId":"1131","severity":1,"message":"1132","line":39,"column":3,"nodeType":"1129","messageId":"1133","endLine":39,"endColumn":5},{"ruleId":"1131","severity":1,"message":"1132","line":44,"column":3,"nodeType":"1129","messageId":"1133","endLine":44,"endColumn":5},{"ruleId":"1131","severity":1,"message":"1132","line":45,"column":3,"nodeType":"1129","messageId":"1133","endLine":45,"endColumn":5},{"ruleId":"1131","severity":1,"message":"1132","line":46,"column":1,"nodeType":"1129","messageId":"1133","endLine":46,"endColumn":3},{"ruleId":"1131","severity":1,"message":"1132","line":47,"column":3,"nodeType":"1129","messageId":"1133","endLine":47,"endColumn":5},{"ruleId":"1131","severity":1,"message":"1132","line":48,"column":3,"nodeType":"1129","messageId":"1133","endLine":48,"endColumn":5},{"ruleId":"1131","severity":1,"message":"1132","line":53,"column":2,"nodeType":"1129","messageId":"1133","endLine":53,"endColumn":4},{"ruleId":"1092","severity":1,"message":"1093","line":53,"column":5,"nodeType":"1046","messageId":"1094","endLine":53,"endColumn":16},{"ruleId":"1077","severity":2,"message":"1457","line":1,"column":8,"nodeType":"1042","messageId":"1069","endLine":1,"endColumn":13},{"ruleId":"1067","severity":1,"message":"1457","line":1,"column":8,"nodeType":"1042","messageId":"1069","endLine":1,"endColumn":13},{"ruleId":"1180","severity":1,"message":"1181","line":41,"column":11,"nodeType":"1182","messageId":"1094","endLine":41,"endColumn":61},{"ruleId":"1048","severity":2,"message":"1049","line":41,"column":17,"nodeType":"1050","messageId":"1051","endLine":41,"endColumn":60,"fix":"1458"},{"ruleId":"1180","severity":1,"message":"1181","line":357,"column":15,"nodeType":"1182","messageId":"1094","endLine":357,"endColumn":78},{"ruleId":"1180","severity":1,"message":"1181","line":417,"column":11,"nodeType":"1182","messageId":"1094","endLine":417,"endColumn":46},{"ruleId":"1180","severity":1,"message":"1181","line":418,"column":11,"nodeType":"1182","messageId":"1094","endLine":418,"endColumn":59},{"ruleId":"1425","severity":1,"message":"1426","line":603,"column":71,"nodeType":"1427","messageId":"1428","endLine":603,"endColumn":74,"suggestions":"1459"},{"ruleId":"1073","severity":2,"message":"1074","line":680,"column":9,"nodeType":"1075","messageId":"1076","endLine":745,"endColumn":10},{"ruleId":"1460","severity":2,"message":"1461","line":685,"column":13,"nodeType":"1462","messageId":"1463","endLine":685,"endColumn":120,"fix":"1464"},{"ruleId":"1180","severity":1,"message":"1181","line":702,"column":17,"nodeType":"1182","messageId":"1094","endLine":702,"endColumn":150},{"ruleId":"1465","severity":2,"message":"1466","line":702,"column":23,"nodeType":"1050","messageId":"1467","endLine":702,"endColumn":149},{"ruleId":"1079","severity":2,"message":"1468","line":702,"column":23,"nodeType":"1042","messageId":"1081","endLine":702,"endColumn":34},{"ruleId":"1469","severity":2,"message":"1470","line":702,"column":37,"nodeType":"1083","messageId":"1471","endLine":702,"endColumn":149},{"ruleId":"1214","severity":2,"message":"1215","line":703,"column":1,"nodeType":"1129","messageId":"1216","endLine":703,"endColumn":17,"fix":"1472"},{"ruleId":"1180","severity":1,"message":"1181","line":714,"column":17,"nodeType":"1182","messageId":"1094","endLine":714,"endColumn":38},{"ruleId":"1079","severity":2,"message":"1473","line":714,"column":21,"nodeType":"1042","messageId":"1081","endLine":714,"endColumn":29},{"ruleId":"1214","severity":2,"message":"1215","line":715,"column":1,"nodeType":"1129","messageId":"1216","endLine":715,"endColumn":17,"fix":"1474"},{"ruleId":"1192","severity":2,"message":"1193","line":721,"column":23,"nodeType":"1194","messageId":"1195","endLine":721,"endColumn":26},{"ruleId":"1378","severity":2,"message":"1475","line":721,"column":23,"nodeType":"1042","messageId":"1380","endLine":721,"endColumn":24},{"ruleId":"1214","severity":2,"message":"1215","line":731,"column":1,"nodeType":"1129","messageId":"1216","endLine":731,"endColumn":17,"fix":"1476"},{"ruleId":"1425","severity":1,"message":"1426","line":805,"column":43,"nodeType":"1427","messageId":"1428","endLine":805,"endColumn":46,"suggestions":"1477"},{"ruleId":"1214","severity":2,"message":"1215","line":831,"column":1,"nodeType":"1129","messageId":"1216","endLine":831,"endColumn":5,"fix":"1478"},{"ruleId":"1214","severity":2,"message":"1215","line":936,"column":1,"nodeType":"1129","messageId":"1216","endLine":936,"endColumn":5,"fix":"1479"},{"ruleId":"1480","severity":2,"message":"1481","line":938,"column":18,"nodeType":"1182","messageId":"1482","endLine":939,"endColumn":1,"fix":"1483"},{"ruleId":"1480","severity":2,"message":"1481","line":941,"column":39,"nodeType":"1182","messageId":"1482","endLine":942,"endColumn":1,"fix":"1484"},{"ruleId":"1073","severity":2,"message":"1074","line":943,"column":7,"nodeType":"1075","messageId":"1076","endLine":1019,"endColumn":8},{"ruleId":"1416","severity":2,"message":"1485","line":943,"column":7,"nodeType":null,"messageId":"1418","endLine":943,"endColumn":13,"fix":"1486"},{"ruleId":"1416","severity":2,"message":"1485","line":954,"column":11,"nodeType":null,"messageId":"1418","endLine":954,"endColumn":17,"fix":"1487"},{"ruleId":"1480","severity":2,"message":"1481","line":956,"column":36,"nodeType":"1036","messageId":"1482","endLine":957,"endColumn":1,"fix":"1488"},{"ruleId":"1480","severity":2,"message":"1481","line":957,"column":54,"nodeType":"1036","messageId":"1482","endLine":958,"endColumn":1,"fix":"1489"},{"ruleId":"1192","severity":2,"message":"1193","line":958,"column":15,"nodeType":"1194","messageId":"1195","endLine":958,"endColumn":22},{"ruleId":"1180","severity":1,"message":"1181","line":966,"column":15,"nodeType":"1182","messageId":"1094","endLine":966,"endColumn":134},{"ruleId":"1465","severity":2,"message":"1466","line":966,"column":21,"nodeType":"1050","messageId":"1467","endLine":966,"endColumn":133},{"ruleId":"1079","severity":2,"message":"1468","line":966,"column":21,"nodeType":"1042","messageId":"1081","endLine":966,"endColumn":32},{"ruleId":"1469","severity":2,"message":"1470","line":966,"column":35,"nodeType":"1083","messageId":"1471","endLine":966,"endColumn":133},{"ruleId":"1180","severity":1,"message":"1181","line":967,"column":15,"nodeType":"1182","messageId":"1094","endLine":967,"endColumn":138},{"ruleId":"1465","severity":2,"message":"1490","line":967,"column":21,"nodeType":"1050","messageId":"1467","endLine":967,"endColumn":137},{"ruleId":"1079","severity":2,"message":"1491","line":967,"column":21,"nodeType":"1042","messageId":"1081","endLine":967,"endColumn":34},{"ruleId":"1469","severity":2,"message":"1470","line":967,"column":37,"nodeType":"1083","messageId":"1471","endLine":967,"endColumn":137},{"ruleId":"1214","severity":2,"message":"1215","line":968,"column":1,"nodeType":"1129","messageId":"1216","endLine":968,"endColumn":15,"fix":"1492"},{"ruleId":"1192","severity":2,"message":"1193","line":974,"column":17,"nodeType":"1194","messageId":"1195","endLine":974,"endColumn":24},{"ruleId":"1180","severity":1,"message":"1181","line":982,"column":15,"nodeType":"1182","messageId":"1094","endLine":982,"endColumn":36},{"ruleId":"1079","severity":2,"message":"1473","line":982,"column":19,"nodeType":"1042","messageId":"1081","endLine":982,"endColumn":27},{"ruleId":"1192","severity":2,"message":"1193","line":988,"column":21,"nodeType":"1194","messageId":"1195","endLine":988,"endColumn":24},{"ruleId":"1378","severity":2,"message":"1475","line":988,"column":21,"nodeType":"1042","messageId":"1380","endLine":988,"endColumn":22},{"ruleId":"1493","severity":2,"message":"1494","line":1002,"column":30,"nodeType":"1159","messageId":"1495","endLine":1002,"endColumn":48,"fix":"1496"},{"ruleId":"1497","severity":2,"message":"1498","line":1032,"column":7,"nodeType":"1024","messageId":"1499","endLine":1032,"endColumn":21,"fix":"1500"},"import/no-unresolved","Unable to resolve path to module '../utils/jadn-editor/locale/en'.","Literal","import/max-dependencies","Maximum number of dependencies (15) exceeded.","react/prop-types","'info' is missing in props validation","Property","missingPropType","'siteTitle' is missing in props validation","'convertSchema' is missing in props validation","'validSchema' is missing in props validation","'validateSchema' is missing in props validation","react/jsx-filename-extension","JSX not allowed in files with extension '.js'","JSXElement","noJSXWithExtension","promise/catch-or-return","Expected catch() or return","ExpressionStatement","terminationMethod","promise/always-return","Each then() should return a value or throw","IfStatement","'validSchema.valid_bool' is missing in props validation","Identifier","'validSchema.valid_msg' is missing in props validation","react/destructuring-assignment","Must use destructuring props assignment","MemberExpression","useDestructAssignment","prefer-destructuring","Use object destructuring.","VariableDeclarator","preferDestructuring",{"range":"1501","text":"1502"},"Must use destructuring state assignment","no-shadow","'format' is already declared in the upper scope on line 15 column 17.","noShadow","prefer-const","'format' is never reassigned. Use 'const' instead.","useConst",{"range":"1503","text":"1504"},"@typescript-eslint/no-shadow","'format' is already declared in the upper scope.","Use array destructuring.","AssignmentExpression","'loadFile' is missing in props validation","ArrowFunctionExpression","@typescript-eslint/no-unused-vars","'_fr' is defined but never used.","unusedVar","'_ev' is defined but never used.","'e' is already declared in the upper scope on line 189 column 14.","'e' is already declared in the upper scope.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'ind' is assigned a value but never used.","@typescript-eslint/naming-convention","Variable name `valid_bool` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","doesNotMatchFormat","Variable name `valid_msg` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","ConditionalExpression","'_err' is defined but never used.","'convertedSchema' is missing in props validation","'convertedSchema.convert' is missing in props validation",{"range":"1505","text":"1506"},"'convertedSchema.fmt' is missing in props validation","compat/compat","fetch is not supported in op_mini all, IE 11","CallExpression","no-console","Unexpected console statement.","unexpected","'convertedSchema.convert.replace' is missing in props validation","'e' is already declared in the upper scope on line 388 column 12.","'e' is already declared in the upper scope on line 423 column 22.","react/no-array-index-key","Do not use Array index in keys","noArrayIndex","'schemas' is missing in props validation","'schemaOpts' is never reassigned. Use 'const' instead.",{"range":"1507","text":"1508"},"'schemas.map' is missing in props validation","'conversions' is missing in props validation","jsx-a11y/anchor-is-valid","Anchor used as a button. Anchors are primarily expected to navigate. Use the button element instead. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/label-has-associated-control","A form label must be associated with a control.","'dispatch' is defined but never used. Allowed unused args must match /^_[^_]/u.","'dispatch' is defined but never used.","class-methods-use-this","Expected 'this' to be used by class method 'body_format'.","FunctionExpression","missingThis","no-prototype-builtins","Do not access Object.prototype method 'hasOwnProperty' from target object.","prototypeBuildIn","react/jsx-pascal-case","Imported JSX component Constructor_Template must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Enum_Template must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Function_Template must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Card_Template must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Toggle_Template must be in PascalCase or SCREAMING_SNAKE_CASE","max-len","This line has a length of 155. Maximum allowed is 128.","Program","max","no-mixed-spaces-and-tabs","Mixed spaces and tabs.","mixedSpacesAndTabs","Variable name `under_escape` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","Variable name `JADN_Table` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'children' is missing in props validation","Variable name `Toggle_Template` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'header' is missing in props validation","Variable name `Card_Template` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'id' is missing in props validation","'title' is missing in props validation","'text' is missing in props validation","'body' is missing in props validation","Variable name `Constructor_Template` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'def' is missing in props validation","Imported JSX component JADN_Table must be in PascalCase or SCREAMING_SNAKE_CASE","Variable name `Enum_Template` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'name' is assigned a value but never used.","'name' is missing in props validation","'en' is missing in props validation","Variable name `Function_Template` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'fun' is missing in props validation","Unable to resolve path to module '../../utils/jadn-editor/locale/en'.","'setSchema' is missing in props validation","Expected 'this' to be used by class method 'validUUID'.","Expected 'this' to be used by class method 'genUUID'.","no-bitwise","Unexpected use of '|'.","BinaryExpression","Unexpected use of '&'.","Variable name `url_str` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'selectedSchema' is missing in props validation","Variable name `command_record` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'selectedSchema.meta' is missing in props validation","'selectedSchema.meta.exports' is missing in props validation","'selectedSchema.types' is missing in props validation","'selectedSchema.types.filter' is missing in props validation","Variable name `ver_tooltip` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","import/no-cycle","Dependency cycle detected.","ImportDeclaration","Dependency cycle via ../..:4","'_dispatch' is defined but never used.","'idx' is missing in props validation","'optChange' is missing in props validation","'parent' is missing in props validation","'schema' is missing in props validation","'schema.types' is missing in props validation","'schema.types.filter' is missing in props validation","no-case-declarations","Unexpected lexical declaration in case block.","VariableDeclaration","react/jsx-one-expression-per-line","`Array: ` must be placed on a new line","JSXText","moveToNewLine",{"range":"1509","text":"1510"},"`{ arr }` must be placed on a new line","JSXExpressionContainer",{"range":"1511","text":"1512"},"Dependency cycle via ./field:1","no-plusplus","Unary operator '++' used.","UpdateExpression","unexpectedUnaryOp",{"range":"1513","text":"1514"},"prefer-spread","Use the spread operator instead of '.apply()'.","preferSpread","Unary operator '--' used.","Expected 'this' to be used by class method 'inputOpts'.","'arr' is missing in props validation","Variable name `_idx` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'_idx' is assigned a value but never used.","Variable name `_opts` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'_opts' is assigned a value but never used.","react/no-unused-state","Unused state field: 'selectedBase'","unusedStateField","Variable name `_type` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'_type' is assigned a value but never used.","Variable name `_args` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'_args' is assigned a value but never used.","no-trailing-spaces","Trailing spaces not allowed.","trailingSpace",{"range":"1515","text":"1516"},"This line has a length of 142. Maximum allowed is 128.","`{ name }` must be placed on a new line",{"range":"1517","text":"1518"},"` options` must be placed on a new line",{"range":"1519","text":"1520"},"react/prefer-stateless-function","Component should be written as a pure function","ClassDeclaration","componentShouldBePure","Dependency cycle via ./types/basicField:5","import/prefer-default-export","Prefer default export.","ExportNamedDeclaration","'metaEditors' is never reassigned. Use 'const' instead.",{"range":"1521","text":"1522"},"'typesEditors' is never reassigned. Use 'const' instead.",{"range":"1523","text":"1524"},"'type' is never reassigned. Use 'const' instead.",{"range":"1525","text":"1526"},"'tmpTypes' is never reassigned. Use 'const' instead.",{"range":"1527","text":"1528"},"'_rf' is defined but never used.","no-useless-return","Unnecessary return statement.","ReturnStatement","unnecessaryReturn",{"range":"1529","text":"1530"},"Variable name `download_tooltip` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","Variable name `upload_tooltip` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","jsx-a11y/click-events-have-key-events","Visible, non-interactive elements with click handlers must have at least one keyboard listener.","jsx-a11y/no-static-element-interactions","Static HTML elements with event handlers require a role.","no-return-assign","Arrow function should not return assignment.","arrowAssignment","jsx-a11y/control-has-associated-label","A control must be associated with a text label.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'dataIndex' is missing in props validation","'enumerated' is missing in props validation","'remove' is missing in props validation","'value' is missing in props validation","'removeAll' is never reassigned. Use 'const' instead.",{"range":"1531","text":"1532"},"'e' is defined but never used. Allowed unused args must match /^_[^_]/u.","'e' is defined but never used.","'onChange' is never reassigned. Use 'const' instead.",{"range":"1533","text":"1534"},"'change' is missing in props validation","'value' is already declared in the upper scope on line 25 column 36.","'value' is already declared in the upper scope.","'val' is assigned a value but never used.","'value.split' is missing in props validation","'placeholder' is missing in props validation","'_e' is defined but never used.","'id.toLowerCase' is missing in props validation","'value.length' is missing in props validation","'value.map' is missing in props validation","'tmpValue' is never reassigned. Use 'const' instead.",{"range":"1535","text":"1536"},{"range":"1537","text":"1538"},"'value' is already declared in the upper scope on line 11 column 24.","no-const-assign","'value' is constant.","const","`{ values.type }` must be placed on a new line",{"range":"1539","text":"1540"},"` - ` must be placed on a new line",{"range":"1541","text":"1542"},"`{ values.name }` must be placed on a new line",{"range":"1543","text":"1544"},"object-curly-newline","Expected a line break after this opening brace.","ObjectPattern","expectedLinebreakAfterOpeningBrace",{"range":"1545","text":"1546"},"Expected a line break before this closing brace.","expectedLinebreakBeforeClosingBrace",{"range":"1547","text":"1546"},{"range":"1548","text":"1546"},{"range":"1549","text":"1546"},{"range":"1550","text":"1546"},"'rest' is assigned a value but never used.",{"range":"1551","text":"1546"},"ObjectExpression",{"range":"1552","text":"1546"},{"range":"1553","text":"1546"},{"range":"1554","text":"1546"},{"range":"1555","text":"1546"},{"range":"1556","text":"1546"},{"range":"1557","text":"1546"},{"range":"1558","text":"1546"},{"range":"1559","text":"1546"},{"range":"1560","text":"1546"},{"range":"1561","text":"1546"},{"range":"1562","text":"1546"},{"range":"1563","text":"1546"},{"range":"1564","text":"1546"},{"range":"1565","text":"1546"},{"range":"1566","text":"1546"},{"range":"1567","text":"1546"},{"range":"1568","text":"1546"},{"range":"1569","text":"1546"},{"range":"1570","text":"1546"},{"range":"1571","text":"1546"},{"range":"1572","text":"1546"},{"range":"1573","text":"1546"},{"range":"1574","text":"1546"},{"range":"1575","text":"1546"},{"range":"1576","text":"1546"},{"range":"1577","text":"1546"},{"range":"1578","text":"1546"},{"range":"1579","text":"1546"},{"range":"1580","text":"1546"},{"range":"1581","text":"1546"},"'history' is missing in props validation","'history.length' is missing in props validation","'history.goBack' is missing in props validation","react/jsx-first-prop-new-line","Property should be placed on a new line","JSXAttribute","propOnNewLine",{"range":"1582","text":"1546"},"react/jsx-max-props-per-line","Prop `style` must be placed on a new line","newLine",{"range":"1583","text":"1584"},"react/jsx-closing-bracket-location","The closing bracket must be aligned with the line containing the opening tag (expected column 9 on the next line)","bracketLocation",{"range":"1585","text":"1586"},"react/button-has-type","Missing an explicit type attribute for button","missingType","max-classes-per-file","File has too many classes (2). Maximum allowed is 1.","maximumExceeded","'dropdown' is missing in props validation","'external' is missing in props validation","'active' is missing in props validation","'click' is missing in props validation","'href' is missing in props validation","'icon' is missing in props validation","'target' is missing in props validation","jsx-a11y/no-noninteractive-element-interactions","Non-interactive elements should not be assigned mouse or keyboard event listeners.","'history.location' is missing in props validation","'history.location.pathname' is missing in props validation","'history.push' is missing in props validation","Expected 'this' to be used by class method 'toggle'.","Variable name `about_modal` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","Variable name `features_modal` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","Variable name `state_modal` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","This line has a length of 129. Maximum allowed is 128.","This line has a length of 138. Maximum allowed is 128.","This line has a length of 134. Maximum allowed is 128.","This line has a length of 140. Maximum allowed is 128.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-param-reassign","Assignment to function parameter 'c'.","assignmentToFunctionParam","Variable name `tmp_e` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'i' is defined but never used. Allowed unused args must match /^_[^_]/u.","'i' is defined but never used.","Assignment to function parameter 'str'.","guard-for-in","The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype.","ForInStatement","wrap","no-restricted-syntax","for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.","restrictedSyntax","Variable name `srt_fmt` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","Assignment to function parameter 'ind'.","Assignment to function parameter 'jadn'.","no-undef","'$' is not defined.","undef","'key1' is defined but never used. Allowed unused args must match /^_[^_]/u.","'key1' is defined but never used.",{"range":"1587","text":"1546"},{"range":"1588","text":"1546"},{"range":"1589","text":"1546"},{"range":"1590","text":"1546"},"promise/no-nesting","Avoid nesting promises.","'validMessage' is missing in props validation","'validateMessage' is missing in props validation","'validMessage.valid_bool' is missing in props validation","Variable name `message_json` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","'validMessage.message_json' is missing in props validation","'validMessage.valid_msg' is missing in props validation","'fr' is defined but never used. Allowed unused args must match /^_[^_]/u.","'fr' is defined but never used.","'pr' is defined but never used. Allowed unused args must match /^_[^_]/u.","'pr' is defined but never used.","keyword-spacing","Expected space(s) after \"catch\".","expectedAfter",{"range":"1591","text":"1592"},"'e' is already declared in the upper scope on line 177 column 14.",{"range":"1593","text":"1594"},"This line has a length of 132. Maximum allowed is 128.","'messages' is missing in props validation","This line has a length of 130. Maximum allowed is 128.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["1595","1596"],["1597","1598"],["1599","1600"],["1601","1602"],["1603","1604"],"'_action' is defined but never used.","'_state' is defined but never used.",["1605","1606"],["1607","1608"],["1609","1610"],["1611","1612"],["1613","1614"],["1615","1616"],["1617","1618"],["1619","1620"],["1621","1622"],["1623","1624"],["1625","1626"],["1627","1628"],["1629","1630"],["1631","1632"],["1633","1634"],["1635","1636"],["1637","1638"],["1639","1640"],["1641","1642"],["1643","1644"],["1645","1646"],"'React' is defined but never used.",{"range":"1647","text":"1648"},["1649","1650"],"spaced-comment","Expected exception block, space or tab after '//' in comment.","Line","expectedExceptionAfter",{"range":"1651","text":"1592"},"no-underscore-dangle","Unexpected dangling '_' in '_adjustment'.","unexpectedUnderscore","Variable name `_adjustment` must match one of the following formats: PascalCase, UPPER_CASE, camelCase","no-nested-ternary","Do not nest ternary expressions.","noNestedTernary",{"range":"1652","text":"1516"},"Variable name `ind_bool` must match one of the following formats: PascalCase, UPPER_CASE, camelCase",{"range":"1653","text":"1516"},"Assignment to function parameter 'i'.",{"range":"1654","text":"1516"},["1655","1656"],{"range":"1657","text":"1516"},{"range":"1658","text":"1516"},"semi","Missing semicolon.","missingSemi",{"range":"1659","text":"1660"},{"range":"1661","text":"1660"},"Expected space(s) after \"switch\".",{"range":"1662","text":"1592"},{"range":"1663","text":"1592"},{"range":"1664","text":"1660"},{"range":"1665","text":"1660"},"Unexpected dangling '_' in '_adjustmentII'.","Variable name `_adjustmentII` must match one of the following formats: PascalCase, UPPER_CASE, camelCase",{"range":"1666","text":"1516"},"prefer-template","Unexpected string concatenation.","unexpectedStringConcatenation",{"range":"1667","text":"1668"},"object-shorthand","Expected property shorthand.","expectedPropertyShorthand",{"range":"1669","text":"1670"},[4435,4471],"{selected} = this.state[type]",[4550,4566],"const format = {};",[9892,9917],"{fmt} = convertedSchema",[14376,14457],"const schemaOpts =  schemas.map(s=> <option key={ s } value={ s } >{ s }</option>);",[1762,1769],"\nArray:",[1769,1776],"\n{' '}\n{ arr }\n",[2392,2413],"{opts} = prevState",[1057,1061],"",[1962,1970],"\n{ name }",[1970,1978],"\n{' '}\noptions\n",[3493,4323],"const metaEditors = Object.keys(schema.meta || {}).map((k, i) => {\n      return this.keys.meta[k].editor({\n        key: i,\n        value: schema.meta[k],\n        placeholder: k,\n        change: val => this.setState(prevState => ({\n          schema: {\n            ...prevState.schema,\n            meta: {\n              ...prevState.schema.meta,\n              ...this.keys.meta[k].edit(val)\n            }\n          }\n        })),\n        remove: id => {\n          if (id in schema.meta) {\n            this.setState(prevState => {\n              const tmpMeta = { ...prevState.schema.meta };\n              delete tmpMeta[id];\n              return {\n                schema: {\n                  ...prevState.schema,\n                  meta: tmpMeta\n                }\n              };\n            });\n          }\n        }\n      });\n    });",[4329,5289],"const typesEditors = (schema.types || []).map((def, i) => {\n      let type = def[1].toLowerCase();\n\n      return this.keys.types[type].editor({\n        key: i,\n        value: def,\n        dataIndex: i,\n        change: (val, idx) => this.setState(prevState => {\n          let tmpTypes = [ ...prevState.schema.types ];\n          tmpTypes[idx] = this.keys.types[val.type.toLowerCase()].edit(val);\n          return {\n            schema: {\n              ...prevState.schema,\n              types: tmpTypes\n            }\n          };\n        }),\n        remove: idx => {\n          if (schema.types.length >= idx) {\n            this.setState(prevState => {\n              const tmpTypes = [ ...prevState.schema.types ];\n              tmpTypes.splice(idx, 1);\n              return {\n                schema: {\n                  ...prevState.schema,\n                  types: tmpTypes\n                }\n              };\n            });\n          }\n        }\n      });\n    });",[4393,4425],"const type = def[1].toLowerCase();",[4598,4643],"const tmpTypes = [ ...prevState.schema.types ];",[5982,6291],"(_rf, _ev) => {\n      const data = atob(fileReader.result.split(',')[1]);\n      try {\n        this.setState({\n          schema: JSON.parse(data)\n        });\n      } catch (err) {\n        toast(<p>Schema cannot be loaded</p>, {type: toast.TYPE.WARNING});\n        console.log(err);\n        \n      }\n    }",[901,940],"const removeAll = e => remove(dataIndex);",[944,1346],"const onChange = e => {\n    const { change } = props;\n    const { placeholder, value } = e.target;\n    const key = placeholder.toLowerCase();\n    let val = value;\n    if (key === 'options') {\n      val = value.split(/,\\s+?/);\n    }\n\n    values[key] = value;\n    if (change) {\n      const tmpVals = Object.values(values);\n      tmpVals[0] = Number(tmpVals[0]);\n      change(tmpVals, dataIndex);\n    }\n  };",[1041,1069],"const tmpValue = [ ...value ];",[739,761],"{value} = e.target",[4673,4688],"\n{ values.type }",[4688,4691],"\n{' '}\n-",[4691,4706],"\n{' '}\n{ values.name }\n",[108,108],"\n",[167,167],[233,233],[281,281],[428,428],[476,476],[494,494],[540,540],[663,663],[715,715],[733,733],[783,783],[898,898],[946,946],[964,964],[1010,1010],[1119,1119],[1164,1164],[1182,1182],[1225,1225],[1338,1338],[1385,1385],[1403,1403],[1448,1448],[1565,1565],[1614,1614],[1632,1632],[1679,1679],[1815,1815],[1855,1855],[1873,1873],[1911,1911],[2026,2026],[2066,2066],[2084,2084],[2122,2122],[1401,1402],[1402,1548],"className='mx-auto'\nstyle={{\n          height: '9em',\n          width: '9em',\n          fontSize: '1em',\n          position: 'relative'\n        }}",[1548,1549],"\n        >",[2646,2646],[2772,2772],[3002,3002],[3169,3169],[5204,5204]," ",[8938,9221],"data => {\n      this.setState(prevState => ({\n        [t]: {\n          ...prevState[t],\n          [t]: data.data,\n          format: fileExt === 'jadn' ? 'json' : data.fileExt\n        }\n      }));\n      if (t === 'schema') {\n        this.loadDecodeTypes();\n      }\n      \n    }",{"messageId":"1671","fix":"1672","desc":"1673"},{"messageId":"1674","fix":"1675","desc":"1676"},{"messageId":"1671","fix":"1677","desc":"1673"},{"messageId":"1674","fix":"1678","desc":"1676"},{"messageId":"1671","fix":"1679","desc":"1673"},{"messageId":"1674","fix":"1680","desc":"1676"},{"messageId":"1671","fix":"1681","desc":"1673"},{"messageId":"1674","fix":"1682","desc":"1676"},{"messageId":"1671","fix":"1683","desc":"1673"},{"messageId":"1674","fix":"1684","desc":"1676"},{"messageId":"1671","fix":"1685","desc":"1673"},{"messageId":"1674","fix":"1686","desc":"1676"},{"messageId":"1671","fix":"1687","desc":"1673"},{"messageId":"1674","fix":"1688","desc":"1676"},{"messageId":"1671","fix":"1689","desc":"1673"},{"messageId":"1674","fix":"1690","desc":"1676"},{"messageId":"1671","fix":"1691","desc":"1673"},{"messageId":"1674","fix":"1692","desc":"1676"},{"messageId":"1671","fix":"1693","desc":"1673"},{"messageId":"1674","fix":"1694","desc":"1676"},{"messageId":"1671","fix":"1695","desc":"1673"},{"messageId":"1674","fix":"1696","desc":"1676"},{"messageId":"1671","fix":"1697","desc":"1673"},{"messageId":"1674","fix":"1698","desc":"1676"},{"messageId":"1671","fix":"1699","desc":"1673"},{"messageId":"1674","fix":"1700","desc":"1676"},{"messageId":"1671","fix":"1701","desc":"1673"},{"messageId":"1674","fix":"1702","desc":"1676"},{"messageId":"1671","fix":"1703","desc":"1673"},{"messageId":"1674","fix":"1704","desc":"1676"},{"messageId":"1671","fix":"1705","desc":"1673"},{"messageId":"1674","fix":"1706","desc":"1676"},{"messageId":"1671","fix":"1707","desc":"1673"},{"messageId":"1674","fix":"1708","desc":"1676"},{"messageId":"1671","fix":"1709","desc":"1673"},{"messageId":"1674","fix":"1710","desc":"1676"},{"messageId":"1671","fix":"1711","desc":"1673"},{"messageId":"1674","fix":"1712","desc":"1676"},{"messageId":"1671","fix":"1713","desc":"1673"},{"messageId":"1674","fix":"1714","desc":"1676"},{"messageId":"1671","fix":"1715","desc":"1673"},{"messageId":"1674","fix":"1716","desc":"1676"},{"messageId":"1671","fix":"1717","desc":"1673"},{"messageId":"1674","fix":"1718","desc":"1676"},{"messageId":"1671","fix":"1719","desc":"1673"},{"messageId":"1674","fix":"1720","desc":"1676"},{"messageId":"1671","fix":"1721","desc":"1673"},{"messageId":"1674","fix":"1722","desc":"1676"},{"messageId":"1671","fix":"1723","desc":"1673"},{"messageId":"1674","fix":"1724","desc":"1676"},{"messageId":"1671","fix":"1725","desc":"1673"},{"messageId":"1674","fix":"1726","desc":"1676"},[1205,1248],"{dataset} = child as HTMLDivElement",{"messageId":"1671","fix":"1727","desc":"1673"},{"messageId":"1674","fix":"1728","desc":"1676"},[23779,23779],[24633,24649],[25112,25128],[25932,25948],{"messageId":"1671","fix":"1729","desc":"1673"},{"messageId":"1674","fix":"1730","desc":"1676"},[28906,28910],[32507,32511],[32552,32552],";",[32672,32672],[32686,32686],[33046,33046],[33120,33120],[33174,33174],[33743,33757],[35296,35314],"`${token.string  } `",[36248,36262],"markup","suggestUnknown",{"range":"1731","text":"1732"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"1731","text":"1733"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"1734","text":"1732"},{"range":"1734","text":"1733"},{"range":"1735","text":"1732"},{"range":"1735","text":"1733"},{"range":"1736","text":"1732"},{"range":"1736","text":"1733"},{"range":"1737","text":"1732"},{"range":"1737","text":"1733"},{"range":"1738","text":"1732"},{"range":"1738","text":"1733"},{"range":"1739","text":"1732"},{"range":"1739","text":"1733"},{"range":"1740","text":"1732"},{"range":"1740","text":"1733"},{"range":"1741","text":"1732"},{"range":"1741","text":"1733"},{"range":"1742","text":"1732"},{"range":"1742","text":"1733"},{"range":"1743","text":"1732"},{"range":"1743","text":"1733"},{"range":"1744","text":"1732"},{"range":"1744","text":"1733"},{"range":"1745","text":"1732"},{"range":"1745","text":"1733"},{"range":"1746","text":"1732"},{"range":"1746","text":"1733"},{"range":"1747","text":"1732"},{"range":"1747","text":"1733"},{"range":"1748","text":"1732"},{"range":"1748","text":"1733"},{"range":"1749","text":"1732"},{"range":"1749","text":"1733"},{"range":"1750","text":"1732"},{"range":"1750","text":"1733"},{"range":"1751","text":"1732"},{"range":"1751","text":"1733"},{"range":"1752","text":"1732"},{"range":"1752","text":"1733"},{"range":"1753","text":"1732"},{"range":"1753","text":"1733"},{"range":"1754","text":"1732"},{"range":"1754","text":"1733"},{"range":"1755","text":"1732"},{"range":"1755","text":"1733"},{"range":"1756","text":"1732"},{"range":"1756","text":"1733"},{"range":"1757","text":"1732"},{"range":"1757","text":"1733"},{"range":"1758","text":"1732"},{"range":"1758","text":"1733"},{"range":"1759","text":"1732"},{"range":"1759","text":"1733"},{"range":"1760","text":"1732"},{"range":"1760","text":"1733"},[754,757],"unknown","never",[779,782],[1092,1095],[1545,1548],[517,520],[863,866],[1376,1379],[1329,1332],[845,848],[879,882],[1153,1156],[1820,1823],[1850,1853],[110,113],[144,147],[167,170],[117,120],[140,143],[172,175],[171,174],[204,207],[109,112],[131,134],[160,163],[202,205],[233,236],[21029,21032],[28154,28157]]