/*
title:        Stateless Packet Filtering Profile
package:      http://oasis-open.org/openc2/oc2slpf/v1.1
version:      0-wd01
description:  Data definitions for Stateless Packet Filtering (SLPF) functions
exports:      OpenC2-Command, OpenC2-Response
*/

OpenC2-Command ::= RECORD {
    action      Action,              -- The task or activity to be performed
    target      Target,              -- The object referenced by the Action
    args        Args OPTIONAL,       -- Additional information that applies to the Command
    actuator    Actuator OPTIONAL,   -- The profile that defines the Command
    command_id  Command-ID OPTIONAL  -- An identifier of this Command
}

OpenC2-Response ::= MAP {
    status       [1]  Status-Code,      -- Integer status code
    status_text  [2]  STRING OPTIONAL,  -- Free-form description of the Response status
    results      [3]  Results OPTIONAL  -- Results returned by the invoked Command
}

Action ::= ENUMERATED {  -- Actions used in this profile
    query   (3),   -- Initiate a request for information
    deny    (6),   -- Prevent a certain event or action from completion, such as preventing a flow from reaching a destination or preventing access
    allow   (8),   -- Permit access to or execution of a Target
    update  (16),  -- Instruct a component to retrieve, install, process, and operate in accordance with a software update, reconfiguration, or other update
    delete  (20)   -- Remove an entity (e.g., data, files, flows)
}

Target ::= CHOICE {                            -- Targets used in this profile
    features         [9]     Features,         -- A set of items used with the query Action to determine an Actuator's capabilities
    file             [10]    File,             -- Properties of a file
    ipv4_net         [13]    IPv4-Net,         -- An IPv4 address range including CIDR prefix length
    ipv6_net         [14]    IPv6-Net,         -- An IPv6 address range including prefix length
    ipv4_connection  [15]    IPv4-Connection,  -- A 5-tuple of source and destination IPv4 address ranges, source and destination ports, and protocol
    ipv6_connection  [16]    IPv6-Connection,  -- A 5-tuple of source and destination IPv6 address ranges, source and destination ports, and protocol
    slpf             [1024]  AP-Target         -- Targets defined in this profile
}

Actuator ::= MAP (Size (1..MAX)) {
    slpf  [1024]  AP-Specifiers OPTIONAL  -- Actuator Specifiers defined in this profile
}

Args ::= MAP (Size (1..MAX)) {
    start_time          [1]     Date-Time OPTIONAL,      -- The specific date/time to initiate the Command
    stop_time           [2]     Date-Time OPTIONAL,      -- The specific date/time to terminate the Command
    duration            [3]     Duration OPTIONAL,       -- The length of time for an Command to be in effect
    response_requested  [4]     Response-Type OPTIONAL,  -- The type of Response required for the Command: none, ack, status, complete
    slpf                [1024]  AP-Args OPTIONAL         -- Command Arguments defined in this profile
}

Results ::= MAP (Size (1..MAX)) {                     -- Response Results
    versions    [1]     Results$Versions OPTIONAL,    -- List of OpenC2 language versions supported by this Actuator
    profiles    [2]     Results$Profiles OPTIONAL,    -- List of profiles supported by this Actuator
    pairs       [3]     Action-Targets OPTIONAL,      -- List of targets applicable to each supported Action
    rate_limit  [4]     Results$rate-limit OPTIONAL,  -- Maximum number of requests per minute supported by design or policy
    args        [5]     Results$Args OPTIONAL,        -- List of supported Command Arguments
    slpf        [1024]  AP-Results OPTIONAL           -- Results defined in this profile
}

Action-Targets ::= MAP {  -- Targets applicable to each action
    query   [3]   Action-targets$Query,
    deny    [6]   Action-targets$Deny,
    allow   [8]   Action-targets$Allow,
    update  [16]  Action-targets$Update,
    delete  [20]  Action-targets$Delete
}

Query-Targets ::= ENUMERATED {
    features  (1)  --
}

Allow-Deny-Targets ::= ENUMERATED {
    ipv4_net         (1),  --
    ipv6_net         (2),  --
    ipv4_connection  (3),  --
    ipv6_connection  (4)   --
}

Update-Targets ::= ENUMERATED {
    file  (1)  --
}

Delete-Targets ::= ENUMERATED {
    slpf/rule_number  (1)  --
}

AP-Target ::= CHOICE {         -- SLPF targets
    rule_number  [1]  Rule-ID  -- Immutable identifier assigned when a rule is created. Identifies a rule to be deleted
}

AP-Specifiers ::= MAP {                                   -- SLPF actuator specifiers (may be empty)
    hostname     [1]  STRING OPTIONAL,                    -- RFC 1123 hostname (can be a domain name or IP address) for a particular device with SLPF functionality
    named_group  [2]  STRING OPTIONAL,                    -- User defined collection of devices with SLPF functionality
    asset_id     [3]  STRING OPTIONAL,                    -- Unique identifier for a particular SLPF
    asset_tuple  [4]  Ap-specifiers$Asset_tuple OPTIONAL  -- Unique tuple identifier for a particular SLPF consisting of a list of up to 10 strings
}

AP-Args ::= MAP (Size (1..MAX)) {              -- SLPF command arguments
    drop_process  [1]  Drop-Process OPTIONAL,  -- Specifies how to handle denied packets
    persistent    [2]  BOOLEAN OPTIONAL,       -- Normal operations assume any changes to a device are to be implemented persistently. Setting the persistent modifier to FALSE results in a change that is not persistent in the event of a reboot or restart
    direction     [3]  Direction OPTIONAL,     -- Specifies whether to apply rules to incoming or outgoing traffic. If omitted, rules are applied to both
    insert_rule   [4]  Rule-ID OPTIONAL        -- Specifies the identifier of the rule within a list, typically used in a top-down rule list
}

AP-Results ::= MAP {                    -- SLPF results defined in this profile
    rule_number  [1]  Rule-ID OPTIONAL  -- Rule identifier returned from allow or deny Command.
}

Drop-Process ::= ENUMERATED {
    none       (1),  -- Drop the packet and do not send a notification to the source of the packet
    reject     (2),  -- Drop the packet and send an ICMP host unreachable (or equivalent) to the source of the packet
    false_ack  (3)   -- Drop the traffic and send a false acknowledgement
}

Direction ::= ENUMERATED {
    both     (1),  -- Apply rules to all traffic
    ingress  (2),  -- Apply rules to incoming traffic only
    egress   (3)   -- Apply rules to outgoing traffic only
}

Rule-ID ::= INTEGER (0..MAX) {  -- Access rule identifier
}

Status-Code ::= ENUMERATED.ID {
    Processing           (102),  -- an interim Response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it
    OK                   (200),  -- the Command has succeeded
    Created              (201),  -- the Command has succeeded and a new resource has been created as a result of it
    Bad Request          (400),  -- the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)
    Unauthorized         (401),  -- the Command Message lacks valid authentication credentials for the target resource or authorization has been refused for the submitted credentials
    Forbidden            (403),  -- the Consumer understood the Command but refuses to authorize it
    Not Found            (404),  -- the Consumer has not found anything matching the Command
    Internal Error       (500),  -- the Consumer encountered an unexpected condition that prevented it from performing the Command
    Not Implemented      (501),  -- the Consumer does not support the functionality required to perform the Command
    Service Unavailable  (503)   -- the Consumer is currently unable to perform the Command due to a temporary overloading or maintenance of the Consumer
}

Features ::= ARRAY_OF (Feature) (Size (0..10)) %unique: True% {  -- An array of zero to ten names used to query an Actuator for its supported capabilities.
}

File ::= MAP (Size (1..MAX)) {
    name    [1]  STRING OPTIONAL,  -- The name of the file as defined in the file system
    path    [2]  STRING OPTIONAL,  -- The absolute path to the location of the file in the file system
    hashes  [3]  Hashes OPTIONAL   -- One or more cryptographic hash codes of the file contents
}

IPv4-Net ::= ARRAY (CONSTRAINED BY {ipv4-net}) {  -- IPv4 address and prefix length
    ipv4_addr      [1]  IPv4-Addr,        -- IPv4 address as defined in [RFC0791]
    prefix_length  [2]  INTEGER OPTIONAL  -- CIDR prefix-length. If omitted, refers to a single host address.
}

IPv4-Connection ::= RECORD (Size (1..MAX)) {  -- 5-tuple that specifies a tcp/ip connection
    src_addr  IPv4-Net OPTIONAL,    -- IPv4 source address range
    src_port  Port OPTIONAL,        -- Source service per [RFC6335]
    dst_addr  IPv4-Net OPTIONAL,    -- IPv4 destination address range
    dst_port  Port OPTIONAL,        -- Destination service per [RFC6335]
    protocol  L4-Protocol OPTIONAL  -- Layer 4 protocol (e.g., TCP) - see L4-Protocol section
}

IPv6-Net ::= ARRAY (CONSTRAINED BY {ipv6-net}) {  -- IPv6 address and prefix length
    ipv6_addr      [1]  IPv6-Addr,        -- IPv6 address as defined in [RFC8200]
    prefix_length  [2]  INTEGER OPTIONAL  -- prefix length. If omitted, refers to a single host address
}

IPv6-Connection ::= RECORD (Size (1..MAX)) {  -- 5-tuple that specifies a tcp/ip connection
    src_addr  IPv6-Net OPTIONAL,    -- IPv6 source address range
    src_port  Port OPTIONAL,        -- Source service per [RFC6335]
    dst_addr  IPv6-Net OPTIONAL,    -- IPv6 destination address range
    dst_port  Port OPTIONAL,        -- Destination service per [RFC6335]
    protocol  L4-Protocol OPTIONAL  -- Layer 4 protocol (e.g., TCP) - [Section 3.4.2.10]
}

Date-Time ::= INTEGER (0..MAX) {  -- Date and Time
}

Duration ::= INTEGER (0..MAX) {  -- A length of time
}

Feature ::= ENUMERATED {  -- Specifies the results to be returned from a query features Command
    versions    (1),  -- List of OpenC2 Language versions supported by this Actuator
    profiles    (2),  -- List of profiles supported by this Actuator
    pairs       (3),  -- List of supported Actions and applicable Targets
    rate_limit  (4),  -- Maximum number of Commands per minute supported by design or policy
    args        (5)   -- List of supported Command Argumemnts
}

Hashes ::= MAP (Size (1..MAX)) {  -- Cryptographic hash values
    md5     [1]  Hashes$md5,    -- MD5 hash as defined in [RFC1321]
    sha1    [2]  Hashes$sha1,   -- SHA1 hash as defined in [RFC6234]
    sha256  [3]  Hashes$sha256  -- SHA256 hash as defined in [RFC6234]
}

IPv4-Addr ::= BINARY (CONSTRAINED BY {ipv4-addr}) {  -- 32 bit IPv4 address as defined in [RFC0791]
}

IPv6-Addr ::= BINARY (CONSTRAINED BY {ipv6-addr}) {  -- 128 bit IPv6 address as defined in [RFC8200]
}

L4-Protocol ::= ENUMERATED {  -- Value of the protocol (IPv4) or next header (IPv6) field in an IP packet. Any IANA value, [RFC5237]
    icmp  (1),   -- Internet Control Message Protocol - [RFC0792]
    tcp   (6),   -- Transmission Control Protocol - [RFC0793]
    udp   (17),  -- User Datagram Protocol - [RFC0768]
    sctp  (132)  -- Stream Control Transmission Protocol - [RFC4960]
}

Port ::= INTEGER (0..65535) {  -- Transport Protocol Port Number, [RFC6335]
}

Response-Type ::= ENUMERATED {
    none      (0),  -- No response
    ack       (1),  -- Respond when Command received
    status    (2),  -- Respond with progress toward Command completion
    complete  (3)   -- Respond when all aspects of Command completed
}

Version ::= STRING {  -- Major.Minor version number
}

Namespace ::= STRING (CONSTRAINED BY {uri}) {  -- Unique name of an Actuator Profile
}

Command-ID ::= STRING (PATTERN ("^\S{0,36}$")) {  -- Command Identifier
}

Results$Versions ::= ARRAY_OF (Version) (Size (1..10)) %unique: True% {  -- List of OpenC2 language versions supported by this Actuator
}

Results$Profiles ::= ARRAY_OF (Namespace) (Size (1..MAX)) %unique: True% {  -- List of profiles supported by this Actuator
}

Results$Args ::= ARRAY_OF (Enumerated) (Size (1..MAX)) {  -- List of supported Command Arguments
}

Action-targets$Query ::= ARRAY_OF (Query-Targets) (Size (1..10)) %unique: True% {
}

Action-targets$Deny ::= ARRAY_OF (Allow-Deny-Targets) (Size (1..10)) %unique: True% {
}

Action-targets$Allow ::= ARRAY_OF (Allow-Deny-Targets) (Size (1..10)) %unique: True% {
}

Action-targets$Update ::= ARRAY_OF (Update-Targets) (Size (1..10)) %unique: True% {
}

Action-targets$Delete ::= ARRAY_OF (Delete-Targets) (Size (1..10)) %unique: True% {
}

Ap-specifiers$Asset_tuple ::= ARRAY_OF (String) (Size (1..10)) {  -- Unique tuple identifier for a particular SLPF consisting of a list of up to 10 strings
}

Results$rate-limit ::= REAL {  -- Maximum number of requests per minute supported by design or policy
}

Hashes$md5 ::= BINARY (CONSTRAINED BY {x}) (Size (16..16)) {  -- MD5 hash as defined in [RFC1321]
}

Hashes$sha1 ::= BINARY (CONSTRAINED BY {x}) (Size (20..20)) {  -- SHA1 hash as defined in [RFC6234]
}

Hashes$sha256 ::= BINARY (CONSTRAINED BY {x}) (Size (32..32)) {  -- SHA256 hash as defined in [RFC6234]
}
