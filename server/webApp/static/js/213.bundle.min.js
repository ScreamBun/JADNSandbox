"use strict";(self.webpackChunkclient=self.webpackChunkclient||[]).push([[213],{2213:(a,e,i)=>{i.r(e),i.d(e,{default:()=>r});var t,o=i(2928),s=i(9460);i(7294);const r=function(){return t||(t=(0,o.Z)("div",{className:"card"},void 0,(0,o.Z)("div",{className:"card-header p-2"},void 0,(0,o.Z)("h5",{className:"m-0"},void 0,"About")),(0,o.Z)("div",{className:"card-body p-2"},void 0,(0,o.Z)("div",{className:"row"},void 0,(0,o.Z)("div",{className:"col-md-12"},void 0,(0,o.Z)("p",{className:"mt-2"},void 0,"The ",(0,o.Z)("b",{},void 0," JADN Sandbox ")," provides the ability to create, convert, translate, transform, and validate JADN compliant schemas. In addition, the app provides the ability to create and validate data against a schema, as well as, generate test data based on the provided schema.  Within JADN Sandbox users can interact with the JADN information modeling tools and create schemas or data based on their application or systems needs or just to learn more about JADN with a hands on approach."))),(0,o.Z)("div",{className:"row"},void 0,(0,o.Z)("div",{className:"col-md-8 pr-1"},void 0,(0,o.Z)("ul",{className:"list-group"},void 0,(0,o.Z)("li",{className:"list-group-item bg-primary"},void 0,(0,o.Z)("b",{},void 0,"FAQ")),(0,o.Z)("li",{className:"list-group-item"},void 0,(0,o.Z)("p",{},void 0,(0,o.Z)("b",{},void 0,"What is JADN?")),(0,o.Z)("p",{},void 0,"JSON Abstract Data Notation (JADN) is an information modeling language.  It has several purposes including defining data structures, validating data instances, informing user interfaces working with structured data, and facilitating protocol internationalization. JADN specifications consist of two parts:"),(0,o.Z)("ol",{},void 0,(0,o.Z)("li",{},void 0,"Abstract type definitions that are independent of data format. "),(0,o.Z)("li",{},void 0,"Serialization rules that define how to represent type instances using specific data formats. "))),(0,o.Z)("li",{className:"list-group-item"},void 0,(0,o.Z)("p",{},void 0,(0,o.Z)("b",{},void 0,"What is a Schema?")),(0,o.Z)("p",{},void 0,"A Schema itself is a structured information object that can be serialized and transferred between applications, documented in multiple formats such as text-based interface definition languages, property tables or diagrams, and translated into concrete schemas used to validate specific data formats.  A schema provides the guidelines for information or data used within a system. ")),(0,o.Z)("li",{className:"list-group-item"},void 0,(0,o.Z)("p",{},void 0,(0,o.Z)("b",{},void 0,"What is a JIDL?")),(0,o.Z)("p",{},void 0,'JADN Interface Definition Language (IDL) is a textual representation of JADN type definitions" definition in the JADN spec. JIDL provides a human readable format of the JADN information model.')))),(0,o.Z)("div",{className:"col-md-4 pl-1"},void 0,(0,o.Z)("ul",{className:"list-group"},void 0,(0,o.Z)("li",{className:"list-group-item bg-primary"},void 0,(0,o.Z)("b",{},void 0,"References")),(0,o.Z)("li",{className:"list-group-item"},void 0,(0,o.Z)("a",{href:s.Sp,target:"_blank",rel:"noreferrer"},void 0,"JADN Specification Doc")),(0,o.Z)("li",{className:"list-group-item"},void 0,(0,o.Z)("a",{href:s.R9,target:"_blank",rel:"noreferrer"},void 0,"Information Modeling with JADN (work in progress)")),(0,o.Z)("li",{className:"list-group-item"},void 0,(0,o.Z)("a",{href:s.sI,target:"_blank",rel:"noreferrer"},void 0,"JADN Sandbox Source Code")),(0,o.Z)("li",{className:"list-group-item"},void 0,(0,o.Z)("a",{href:s.Ao,target:"_blank",rel:"noreferrer"},void 0,"JADN Python Package")),(0,o.Z)("li",{className:"list-group-item"},void 0,(0,o.Z)("a",{href:s.uZ,target:"_blank",rel:"noreferrer"},void 0,"OpenC2"),(0,o.Z)("ul",{className:"list-group list-group-flush"},void 0,(0,o.Z)("li",{className:"list-group-item"},void 0,(0,o.Z)("a",{href:s.mB,target:"_blank",rel:"noreferrer"},void 0,"FAQ")))),(0,o.Z)("li",{className:"list-group-item"},void 0,(0,o.Z)("a",{href:s.NB,target:"_blank",rel:"noreferrer"},void 0,"Sandbox ReadMe"),(0,o.Z)("ul",{className:"list-group list-group-flush"},void 0,(0,o.Z)("li",{className:"list-group-item"},void 0,(0,o.Z)("a",{href:s.Po,target:"_blank",rel:"noreferrer"},void 0,"Walkthrough PDF"))))))))))}}}]);
//# sourceMappingURL=213.bundle.min.js.map