{"version":3,"file":"js/converter.bundle.min.js","mappings":"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","sources":["webpack://client/webpack/runtime/chunk loaded","webpack://client/./src/actions/convert.ts","webpack://client/./src/actions/util.ts","webpack://client/./src/actions/validate.ts","webpack://client/./src/components/converter/index.tsx","webpack://client/./src/components/dependencies/css/toggle-switch.scss?3209","webpack://client/./src/components/dependencies/css/toggle-switch.scss?8a97","webpack://client/webpack/bootstrap","webpack://client/webpack/runtime/compat get default export","webpack://client/webpack/runtime/define property getters","webpack://client/webpack/runtime/global","webpack://client/webpack/runtime/hasOwnProperty shorthand","webpack://client/webpack/runtime/make namespace object","webpack://client/webpack/runtime/node module decorator","webpack://client/webpack/runtime/runtimeId","webpack://client/webpack/runtime/jsonp chunk loading","webpack://client/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// Actions for convert API\nimport { createAction } from 'redux-api-middleware';\nimport { ActionFailureResult, ActionRequestResult, ActionSuccessResult } from './interfaces';\n\n// API Base URL\nconst baseAPI = '/api/convert';\n\n// Helper Functions\n// None\n\n// API Calls\n// GET - /api/convert/ - convert basic info\nconst INFO_REQUEST = '@@convert/INFO_REQUEST';\nexport const INFO_SUCCESS = '@@convert/INFO_SUCCESS';\nexport const INFO_FAILURE = '@@convert/INFO_FAILURE';\nexport const info = () => createAction({\n  endpoint: `${baseAPI}/`,\n  method: 'GET',\n  types: [\n    INFO_REQUEST, INFO_SUCCESS, INFO_FAILURE\n  ]\n});\n\nexport interface InfoSuccessAction extends ActionSuccessResult {\n  type: typeof INFO_SUCCESS;\n  payload: {\n    conversions: Record<string, any>;\n    schemas: Array<any>;\n  };\n}\n\n// POST - /api/convert/ - convert the given schema to a different format\nconst CONVERT_REQUEST = '@@convert/CONVERT_REQUEST';\nexport const CONVERT_SUCCESS = '@@convert/CONVERT_SUCCESS';\nexport const CONVERT_FAILURE = '@@convert/CONVERT_FAILURE';\nexport const convertSchema = (schema: Record<string, any>, t: string, comments: boolean) => createAction({\n  endpoint: `${baseAPI}/`,\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    schema,\n    'convert-to': t,\n    comments\n  }),\n  types: [\n    CONVERT_REQUEST, CONVERT_SUCCESS, CONVERT_FAILURE\n  ]\n});\n\nexport interface ConvertSchemaSuccessAction extends ActionSuccessResult {\n  type: typeof CONVERT_SUCCESS;\n  payload: {\n    schema: Record<string, any>;\n  };\n}\n\n// Request Actions\nexport interface ConvertRequestActions extends ActionRequestResult {\n  type: typeof INFO_REQUEST | typeof CONVERT_REQUEST;\n}\n\n// Failure Actions\nexport interface ConvertFailureActions extends ActionFailureResult {\n  type: typeof INFO_FAILURE | typeof CONVERT_FAILURE;\n}\n\nexport type ConvertActions = (\n  ConvertRequestActions | ConvertFailureActions |\n  // Success Actions\n  InfoSuccessAction | ConvertSchemaSuccessAction\n);\n","// Actions for utils API\nimport { createAction } from 'redux-api-middleware';\nimport { ActionFailureResult, ActionRequestResult, ActionSuccessResult } from './interfaces';\n\n// API Base URL\nconst baseAPI = '/api';\n\n// Helper Functions\n// None\n\n// API Calls\n// GET /api/ - basic server info\nconst INFO_REQUEST = '@@util/INFO_REQUEST';\nexport const INFO_SUCCESS = '@@util/INFO_SUCCESS';\nexport const INFO_FAILURE = '@@util/INFO_FAILURE';\nexport const info = () => createAction({\n  endpoint: `${baseAPI}/`,\n  method: 'GET',\n  types: [\n    INFO_REQUEST, INFO_SUCCESS, INFO_FAILURE\n  ]\n});\n\nexport interface InfoSuccessAction extends ActionSuccessResult {\n  type: typeof INFO_SUCCESS;\n  payload: {\n    title: string;\n    message: string;\n  };\n}\n\n// GET - /api/load/{TYPE}/{FILE} - load a file from the server\nconst LOAD_REQUEST = '@@util/LOAD_REQUEST';\nexport const LOAD_SUCCESS = '@@util/LOAD_SUCCESS';\nexport const LOAD_FAILURE = '@@util/LOAD_FAILURE';\nexport const load = (type: string, file: string) => createAction({\n  endpoint: `${baseAPI}/load/${type}/${file}`,\n  method: 'GET',\n  types: [\n    LOAD_REQUEST, LOAD_SUCCESS, LOAD_FAILURE\n  ]\n});\n\nexport interface LoadSuccessAction extends ActionSuccessResult {\n  type: typeof LOAD_SUCCESS;\n  payload: {\n    type: 'messages' | 'schemas';\n    file: string;\n    data: Record<string, any>;\n  };\n}\n\n// Request Actions\nexport interface UtilRequestActions extends ActionRequestResult {\n  type: typeof INFO_REQUEST | typeof LOAD_REQUEST;\n}\n\n// Failure Actions\nexport interface UtilFailureActions extends ActionFailureResult {\n  type: typeof INFO_FAILURE | typeof LOAD_FAILURE;\n}\n\nexport type UtilActions = (\n  UtilRequestActions | UtilFailureActions |\n  // Success Actions\n  InfoSuccessAction | LoadSuccessAction\n);\n","// Actions for validate API\nimport { createAction } from 'redux-api-middleware';\nimport { ActionFailureResult, ActionRequestResult, ActionSuccessResult } from './interfaces';\n\n// General Actions\nexport const VALIDATE_FAILURE = '@@validate/VALIDATE_FAILURE';\n\n// API Base URL\nconst baseAPI = '/api/validate';\n\n// Helper Functions\n// None\n\n// API Calls\n// GET - /api/validate/ - get basic validate info\nconst INFO_REQUEST = '@@validate/INFO_REQUEST';\nexport const INFO_SUCCESS = '@@validate/INFO_SUCCESS';\nexport const INFO_FAILURE = '@@validate/INFO_FAILURE';\nexport const info = () => createAction({\n  endpoint: `${baseAPI}/`,\n  method: 'GET',\n  types: [\n    INFO_REQUEST, INFO_SUCCESS, INFO_FAILURE\n  ]\n});\n\nexport interface InfoSuccessAction extends ActionSuccessResult {\n  type: typeof INFO_SUCCESS;\n  payload: {\n    messages: Record<string, any>;\n    schemas: Record<string, any>;\n  };\n}\n\n// POST - /api/validate/schema - validate the given schema\nconst VALIDATE_SCHEMA_REQUEST = '@@validate/VALIDATE_SCHEMA_REQUEST';\nexport const VALIDATE_SCHEMA_SUCCESS = '@@validate/VALIDATE_SCHEMA_SUCCESS';\nexport const validateSchema = (schema: Record<string, any>) => createAction({\n  endpoint: `${baseAPI}/schema`,\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    schema\n  }),\n  types: [\n    VALIDATE_SCHEMA_REQUEST, VALIDATE_SCHEMA_SUCCESS, VALIDATE_FAILURE\n  ]\n});\n\nexport interface ValidateSchemaSuccessAction extends ActionSuccessResult {\n  type: typeof VALIDATE_SCHEMA_SUCCESS;\n}\n\n// POST - /api/validate - validate teh given message against the given schema\nconst VALIDATE_MESSAGE_REQUEST = '@@validate/VALIDATE_MESSAGE_REQUEST';\nexport const VALIDATE_MESSAGE_SUCCESS = '@@validate/VALIDATE_MESSAGE_SUCCESS';\nexport const validateMessage = (schema: Record<string, any>, message: Record<string, any>, format: string, decode: string) => createAction({\n  endpoint: `${baseAPI}/`,\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    schema,\n    message,\n    'message-format': format,\n    'message-decode': decode\n  }),\n  types: [\n    VALIDATE_MESSAGE_REQUEST, VALIDATE_MESSAGE_SUCCESS, VALIDATE_FAILURE\n  ]\n});\n\nexport interface ValidateMessageSuccessAction extends ActionSuccessResult {\n  type: typeof VALIDATE_MESSAGE_SUCCESS;\n}\n\n// Request Actions\nexport interface UtilRequestActions extends ActionRequestResult {\n  type: typeof INFO_REQUEST | typeof VALIDATE_SCHEMA_REQUEST | typeof VALIDATE_MESSAGE_REQUEST;\n}\n\n// Failure Actions\nexport interface UtilFailureActions extends ActionFailureResult {\n  type: typeof INFO_FAILURE | typeof VALIDATE_FAILURE;\n}\n\nexport type ValidateActions = (\n  UtilRequestActions | UtilFailureActions |\n  // Success Actions\n  InfoSuccessAction | ValidateSchemaSuccessAction | ValidateMessageSuccessAction\n);\n","import React, {\n  ChangeEvent, Component, FormEvent, MouseEvent\n} from 'react';\nimport { Dispatch } from 'redux';\nimport { ConnectedProps, connect } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { toast } from 'react-toastify';\nimport PopoutWindow from 'react-popout';\nimport FileSaver from 'file-saver';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck, faFileDownload, faFilePdf, faTimes, faWindowMaximize\n} from '@fortawesome/free-solid-svg-icons';\nimport { Button, Form, Tooltip } from 'reactstrap';\nimport HTMLParser from 'html-react-parser';\nimport locale from 'react-json-editor/dist/locale/en';\n\nimport { SchemaJADN } from '../generate/schema/interface';\nimport {\n  ToggleSwitch, escaped2cbor, format, hexify, loadURL, minify, validURL\n} from '../utils';\nimport JSONInput from '../utils/jadn-editor';\nimport { ConvertActions, UtilActions, ValidateActions } from '../../actions';\nimport { RootState } from '../../reducers';\n\n\n// Interface\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface ConverterProps {}\n\ninterface ConverterState {\n  convTooltip: boolean;\n  convertDownloadTooltip: boolean;\n  pdfDownloadTooltip: boolean;\n  viewSchemaTooltip: boolean;\n  schemaOptsDropdown: boolean;\n  message: {\n    data: string;\n    format: string;\n    json: Record<string, any>;\n    message: string;\n    file: boolean;\n    url: boolean;\n    urlStr: ''\n  };\n  schema: {\n    schema: SchemaJADN,\n    selected: string;\n    comments: boolean;\n    file: boolean;\n    url: boolean;\n    urlStr: ''\n  };\n  convert: {\n    selected: string;\n    html: boolean;\n    popup?: PopoutWindow\n  };\n}\n\ntype StateTypes = 'message'|'message-json'|'schema'\ntype MimeType = 'cddl'|'html'|'jadn'|'json'|'md'|'proto3'|'rng'|'thrift';\n\n// Redux Connector\nfunction mapStateToProps(state: RootState) {\n  return {\n    schemas: state.Convert.schemas || [],\n    loadedSchemas: state.Util.loaded.schemas || [],\n    validSchema: state.Validate.valid.schema || {},\n    conversions: state.Convert.conversions || {},\n    convertedSchema: state.Convert.converted || {},\n    siteTitle: state.Util.site_title\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    info: () => dispatch(ConvertActions.info()),\n    convertSchema: (s: Record<string, any>, t: string, c: boolean) => dispatch(ConvertActions.convertSchema(s, t, c)),\n    loadFile: (t: string, f: string) => dispatch(UtilActions.load(t, f)),\n    validateSchema: (s: Record<string, any>) => dispatch(ValidateActions.validateSchema(s))\n  };\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype ConnectorProps = ConnectedProps<typeof connector>;\ntype ConverterConnectedProps = ConverterProps & ConnectorProps;\n\n// Component\nclass Converter extends Component<ConverterConnectedProps, ConverterState> {\n  meta: {\n    title: string;\n    canonical: string;\n  }\n\n  schemaHeight = '40em';\n  downloadMime: Record<MimeType, string> = {\n    cddl: 'text/plain',\n    html: 'text/html',\n    md: 'text/plain',\n    jadn: 'application/json',\n    json: 'application/json',\n    proto3: 'text/x-c',\n    rng: 'application/xml',\n    thrift: 'text/plain'\n  }\n\n  constructor(props: ConverterConnectedProps) {\n    super(props);\n    this.downloadPDF = this.downloadPDF.bind(this);\n    this.fileChange = this.fileChange.bind(this);\n    this.selectChange = this.selectChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.viewPage = this.viewPage.bind(this);\n\n    this.state = {\n      convTooltip: false,\n      convertDownloadTooltip: false,\n      pdfDownloadTooltip: false,\n      viewSchemaTooltip: false,\n      schemaOptsDropdown: false,\n      message: {\n        data: '',\n        format: '',\n        json: {},\n        message: '',\n        file: false,\n        url: false,\n        urlStr: ''\n      },\n      schema: {\n        schema: {\n          placeholder: 'Paste JADN schema here'\n        },\n        selected: 'empty',\n        comments: true,\n        file: false,\n        url: false,\n        urlStr: ''\n      },\n      convert: {\n        selected: 'empty',\n        html: false\n      }\n    };\n\n    const { info, siteTitle } = this.props;\n    this.meta = {\n      title: `${siteTitle} | Convert`,\n      canonical: `${window.location.origin}${window.location.pathname}`\n    };\n    info();\n  }\n\n  shouldComponentUpdate(nextProps: ConverterConnectedProps, nextState: ConverterState) {\n    const propsUpdate = this.props !== nextProps;\n    const stateUpdate = this.state !== nextState;\n    return propsUpdate || stateUpdate;\n  }\n\n  submitForm(e: FormEvent<HTMLFormElement>) {\n    const { convertSchema, validSchema,  validateSchema} = this.props;\n    const { convert, schema } = this.state;\n    e.preventDefault();\n\n    let schemaObj = schema.schema;\n    if (typeof(schema.schema) === 'string') {\n      try {\n        schemaObj = JSON.parse(schema);\n      } catch (err) {\n        toast(<p>{ err.message }</p>, {type: toast.TYPE.WARNING});\n        return false;\n      }\n    }\n\n    validateSchema(schemaObj).then(() => {\n      if (validSchema.valid_bool) {\n        convertSchema(\n          schema.schema,\n          convert.selected,\n          schema.comments ? 'all' : 'none'\n        );\n      } else {\n        toast(<p>{ validSchema.valid_msg }</p>, {type: toast.TYPE[validSchema.valid_bool ? 'INFO' : 'WARNING']});\n      }\n    });\n\n    return false;\n  }\n\n  selectChange(e: ChangeEvent<HTMLSelectElement>) {\n    const { id, value } = e.target;\n    const type = id.split('-')[0];\n    const updateArr: Record<string, any> = {\n      selected: value,\n      file: value === 'file',\n      url: value === 'url'\n    };\n\n    if (value === 'empty' && type === 'message') {\n      updateArr.format = '';\n      updateArr.decode = '';\n    }\n\n    this.setState(prevState => ({\n      ...prevState,\n      [type]: {\n        ...prevState[type],\n        ...updateArr\n      }\n    }), () => {\n      // eslint-disable-next-line react/destructuring-assignment\n      const loaded = this.props[`loaded${type[0].toUpperCase()}${type.slice(1)}s`];\n      // eslint-disable-next-line react/destructuring-assignment\n      const { selected } = this.state[type];\n\n      if (!['', 'empty', null, 'file', 'url'].includes(selected)) {\n        const fmt: Record<string, any> = {};\n        if (type === 'message') {\n          // eslint-disable-next-line prefer-destructuring\n          fmt.format = selected.split('.')[1];\n        }\n\n        if (!Object.keys(loaded).includes(selected)) {\n          const { loadFile } = this.props;\n          loadFile(`${type}s`, selected).then(() => {\n            this.setState(prevState => ({\n              ...prevState,\n              [type]: {\n                ...prevState[type],\n                ...fmt,\n                [type]: loaded[selected]\n              }\n            }));\n          });\n        } else {\n          this.setState(prevState => ({\n            ...prevState,\n            [type]: {\n              ...prevState[type],\n              [type]: loaded[selected]\n            }\n          }));\n        }\n      }\n    });\n  }\n\n  fileChange(e: ChangeEvent<HTMLInputElement>) {\n    const { files, id } = e.target;\n    const [ file ] = files;\n    const prefix = id.split('-')[0];\n    const type = file.name.split('.')[1];\n    const fileReader = new FileReader();\n\n    fileReader.onload = (fr: FileReader, _ev: ProgressEvent<FileReader>) => {\n      let data = atob(fr.result.split(',')[1]);\n      try {\n        data = JSON.stringify(JSON.parse(data), null, 2);\n      } catch (err) {\n        switch (type) {\n          case 'cbor':\n            data = escaped2cbor(hexify(data));\n            break;\n          // no default\n        }\n      }\n\n      if (prefix === 'schema') {\n        try {\n          this.setState(prevState => ({\n            schema: {\n              ...prevState.schema,\n              schema: JSON.parse(data)\n            }\n          }));\n        } catch (err) {\n          toast(<p>Schema cannot be loaded</p>, {type: toast.TYPE.WARNING});\n        }\n      } else if (prefix === 'message') {\n        this.setState(prevState => ({\n          message: {\n            ...prevState.message,\n            format: type === 'jadn' ? 'json' : type,\n            message: data\n          }\n        }));\n      }\n    };\n    fileReader.readAsDataURL(file);\n  }\n\n  format(t: StateTypes, i = 2) {\n    const { message } = this.state;\n    if (t === 'message' || t === 'message-json') {\n      const fmt = t === 'message' ? message.format : 'json';\n      let msg = t === 'message' ? message.message : JSON.stringify(message.json);\n      msg = format(msg, fmt, i);\n\n      if (msg.startsWith('Error')) {\n        toast(<p>{ `${t.charAt(0).toUpperCase() + t.slice(1)} ${msg}` }</p>, {type: toast.TYPE.WARNING});\n        return;\n      }\n\n      this.setState(prevState => ({ message: { ...prevState.message, [t === 'message' ? 'message' : 'json']: msg }}));\n    } else if (t === 'schema') {\n      try {\n        this.setState(prevState => ({ schema: {...prevState.schema, schema: prevState.schema.schema }}));\n      } catch (e) {\n        const msg = `${t.charAt(0).toUpperCase()}${t.slice(1)} Invalid, cannot format: ${(e as Error).message}`;\n        toast(<p>{ msg }</p>, {type: toast.TYPE.WARNING});\n      }\n    }\n  }\n\n  minify(t: StateTypes) {\n    const { message } = this.state;\n    if (t === 'message' || t === 'message-json') {\n      const fmt = t === 'message' ? message.format : 'json';\n      let msg = t === 'message' ? message.message : JSON.stringify(message.json);\n      msg = minify(msg, fmt);\n\n      if (msg.startsWith('Error')) {\n        toast(<p>{ `${t.charAt(0).toUpperCase() + t.slice(1)} {msg}` }</p>, {type: toast.TYPE.WARNING});\n        return;\n      }\n      this.setState(prevState => ({ message: {...prevState.message, [t === 'message' ? 'message' : 'json']: msg }}));\n    } else if (t === 'schema') {\n      try {\n        this.setState(prevState => ({ schema: {...prevState.schema, schema: prevState.schema.schema }}));\n      } catch (e) {\n        const msg = `${t.charAt(0).toUpperCase() + t.slice(1)} Invalid, cannot format: ${(e as Error).message}`;\n        toast(<p>{ msg }</p>, {type: toast.TYPE.WARNING});\n      }\n    }\n  }\n\n  verifySchema() {\n    const { validSchema, validateSchema } = this.props;\n    const { schema } = this.state;\n    let schemaObj = schema.schema;\n    if (typeof(schema.schema) === 'string') {\n      try {\n        schemaObj = JSON.parse(schema);\n      } catch (err) {\n        toast(<p>{ err.message }</p>, {type: toast.TYPE.WARNING});\n        return;\n      }\n    }\n\n    validateSchema(schemaObj).then(() => {\n      const { valid_bool, valid_msg } = validSchema;\n      toast(<p>{ valid_msg }</p>, {type: toast.TYPE[valid_bool ? 'INFO' : 'WARNING']});\n    });\n  }\n\n  loadURL(t: 'message'|'schema') {\n    // eslint-disable-next-line react/destructuring-assignment\n    const { urlStr } = this.state[t];\n\n    if (!validURL(urlStr)) {\n      toast(<p>Invalid URL, cannot load from a non valid location</p>, {type: toast.TYPE.WARNING});\n      return;\n    }\n\n    const file = urlStr.substring(urlStr.lastIndexOf('/') + 1);\n    const fileExt = file.substring(file.lastIndexOf('.') + 1);\n\n    if (!['json', 'jadn'].includes(fileExt) && t === 'schema') {\n      toast(<p>This file cannot be loaded as a schema, only JADN/JSON files are valid</p>, {type: toast.TYPE.WARNING});\n      return;\n    }\n\n    loadURL(urlStr).then((data) => {\n      const d = data as Record<string, any>;\n      this.setState(prevState => ({\n        ...prevState,\n        [t]: {\n          ...prevState[t],\n          [t]: d.data,\n          format: fileExt === 'jadn' ? 'json' : d.fileExt\n        }\n      }));\n    }).catch(_err => {\n      toast(<p>Invalid url, please check what you typed</p>, {type: toast.TYPE.WARNING});\n    });\n  }\n\n  downloadConfig() {\n    const { convertedSchema } = this.props;\n    const { convert } = this.state;\n    const rtn = {\n      content: '',\n      file: ''\n    };\n\n    if (convertedSchema.convert) {\n      const schema = convertedSchema.convert;\n      const fmt = convertedSchema.fmt as MimeType;\n      rtn.file = `schema.${fmt}`;\n\n      if (fmt in this.downloadMime) {\n        rtn.content = `data:${this.downloadMime[fmt]};charset=utf-8,${encodeURIComponent(schema)}`;\n      } else {\n        rtn.content = `data:text/plain;charset=utf-8,${encodeURIComponent('Theres some issues....')}`;\n      }\n\n      if (fmt === 'html' && convert.html === false) {\n        setTimeout(() => this.setState(prevState => ({\n          convert: {\n            ...prevState.convert,\n            html: true\n          }\n        })), 100);\n      } else if (fmt !== 'html' && convert.html !== false) {\n        setTimeout(() => this.setState(prevState => ({\n          convert: {\n            ...prevState.convert,\n            html: false\n          }\n        })), 100);\n      }\n    }\n    return rtn;\n  }\n\n  downloadPDF(e: MouseEvent<HTMLButtonElement>) {\n    const { schema } = this.state;\n    e.preventDefault();\n\n    fetch('/api/convert/pdf', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        schema: schema.schema\n      })\n    }).then(\n      rsp => rsp.blob()\n    ).then(data => {\n      FileSaver.saveAs(data, 'schema.pdf');\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  viewPage(e: MouseEvent<HTMLButtonElement>) {\n    const { convertedSchema } = this.props;\n    e.preventDefault();\n    const nulls = ['', ' ', null, undefined];\n    const htmlTmp = HTMLParser(convertedSchema.convert.replace(/^\\s+/gm, '').replace(/\\s+$/gm, '')) as JSX.Element;\n\n    // CSS Theme\n    let theme = htmlTmp.props.children.filter(c => c.type === 'head');\n    theme = (theme.length === 1 ? theme[0].props.children : []).filter(c => nulls.indexOf(c) === -1);\n    theme = theme.filter(t => t.type === 'style');\n    theme = theme.length === 1 ? theme[0] : {};\n\n    // HTML Schema\n    let schema = htmlTmp.props.children.filter(c => c.type === 'body');\n    schema = schema.length === 1 ? schema[0].props.children : [];\n\n    // Remove whitespace - non objects\n    const filter = elm => {\n      if (typeof(elm) === 'string') {\n        return (!elm || elm.match(/^[\\r\\n\\s]*?$/m) ? '' : elm);\n      }\n      if (elm.props && elm.props.children) {\n        if (typeof(elm.props.children) === 'string') {\n          return elm;\n        }\n        return React.cloneElement(elm, {\n          children: elm.props.children.map(c => {\n            if (typeof(c) === 'string' && !c.match(/^[\\r\\n\\s]*?$/gm)) {\n              return c;\n            }\n            return filter(c);\n          }).filter(c => !nulls.includes(c))\n        });\n      }\n      let tmp = elm.map(el => filter(el)).filter(el => !nulls.includes(el));\n      tmp = tmp.map((el, i) => {\n        let children = filter(el.props.children);\n        try {\n          children = children.filter(c => !nulls.includes(c));\n        } catch (err) {\n          console.log(err);\n        }\n        return React.cloneElement(el, {\n          key: i,\n          children\n        });\n      });\n      return tmp.length === 1 ? tmp[0] : tmp;\n    };\n\n    const sizeDivisor = 1.5;\n    schema = filter(schema);\n    this.setState(prevState => ({\n      ...prevState,\n      convert: {\n        ...prevState.convert,\n        popup: (\n          <PopoutWindow\n            title=\"HTML Schema\"\n            center=\"screen\"\n            options={\n              {\n                width: (_opt: Record<string, any>, win: Window) => win.outerWidth / sizeDivisor,\n                height:(_opt: Record<string, any>, win: Window) => win.outerHeight / sizeDivisor,\n                top: (opt: Record<string, any>, win: Window) => (win.innerHeight - opt.height(opt, win)) / sizeDivisor + win.screenY,\n                left: (opt: Record<string, any>, win: Window) => (win.innerWidth - opt.width(opt, win)) / sizeDivisor + win.screenX\n              }\n            }\n            onClosing={ () => this.setState(prevState1 => ({ convert: { ...prevState1.convert, popup: null } })) }\n          >\n            <div>\n              { theme }\n              { schema }\n            </div>\n          </PopoutWindow>\n        )\n      }\n    }));\n  }\n\n  jadn() {\n    const { schemas } = this.props;\n    const { schema } = this.state;\n    // <option value=\"{{ opt }}\" {% if request.form['schema-list'] === opt %}selected=\"\"{% endif %}>{{ opt }}</option>\n    const schemaOpts = schemas.map(s=> <option key={ s } value={ s } >{ s }</option>);\n\n    return (\n      <fieldset className=\"col-6 p-0 float-left\">\n        <legend>JADN Schema</legend>\n        <div className=\"card\">\n          <div className=\"form-control border card-body p-0\" style={{ height: this.schemaHeight }}>\n            <JSONInput\n              id='jadn_schema'\n              placeholder={ schema.schema }\n              onChange={\n                val => {\n                  if (val.jsObject) {\n                    this.setState(prevState => ({ schema: { ...prevState.schema, schema: val.jsObject }}));\n                  }\n                }\n              }\n              theme='light_mitsuketa_tribute'\n              locale={ locale }\n              reset={ false }\n              height='100%'\n              width='100%'\n            />\n          </div>\n\n          <div className=\"card-footer pb-3\">\n            <Button color='secondary' onClick={ () => this.verifySchema() } className='float-right mr-2'>Verify</Button>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-5 px-1 mb-0\">\n                <select id=\"schema-list\" name=\"schema-list\" className=\"form-control mb-0\" defaultValue=\"empty\" onChange={ this.selectChange }>\n                  <option value=\"empty\">Schema</option>\n                  <optgroup label=\"Testers\">\n                    { schemaOpts }\n                  </optgroup>\n                  <optgroup label=\"Custom\">\n                    <option value=\"file\">File...</option>\n                    <option value=\"url\">URL...</option>\n                  </optgroup>\n                </select>\n              </div>\n\n              <div id=\"schema-file-group\" className={ `form-group col-md-6 px-1 mb-0${schema.file ? '' : ' d-none'}` } >\n                <input type=\"file\" className=\"btn btn-light form-control-file\" id=\"schema-file\" name=\"schema-file\" accept=\".jadn\" onChange={ this.fileChange } />\n              </div>\n\n              <div id=\"schema-url-group\" className={ `form-group col-md-6 px-1 mb-0${schema.url ? '' : ' d-none'}` }>\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend\">\n                    <Button color=\"info\" onClick={ () => this.loadURL('schema') }>Load URL</Button>\n                  </div>\n                  <input type=\"text\" className=\"form-control\" defaultValue='' onChange={ (e) => this.setState(prevState => ({ schema: { ...prevState.schema, urlStr: e.target.value }})) } />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-12 m-1\" />\n      </fieldset>\n    );\n  }\n\n  converted() {\n    const { conversions, convertedSchema } = this.props;\n    const {\n      convert, convertDownloadTooltip, pdfDownloadTooltip, schema, viewSchemaTooltip\n    } = this.state;\n    const download = this.downloadConfig();\n\n    // <option value=\"{{ options.convs[conv] }}\" {% if request.form['convert-to'] === options.convs[conv] %}selected=\"\"{% endif %}>{{ conv }}</option>\n    const convertOpts =  Object.entries(conversions).map(([d, c], i) => <option key={ i } value={ c } >{ d }</option>);\n\n    return (\n      <fieldset className=\"col-6 p-0 float-left\">\n        <legend>Converted Schema</legend>\n        <div className=\"card\">\n          <div className=\"form-control card-body p-0\" style={{ height: this.schemaHeight }}>\n            <textarea\n              placeholder=\"Converted JADN schema\"\n              style={{\n                resize: 'none',\n                outline: 'none',\n                width: '100%',\n                padding: '10px',\n                border: 'none',\n                height: '100%'\n              }}\n              value={ convertedSchema.convert || '' }\n              readOnly\n            />\n          </div>\n\n          <div className='card-footer'>\n            <a id='convertDownloadTooltip' className={ `btn btn-sm btn-primary float-right${convertedSchema.convert ? '' : ' disabled'}` } href={ download.content } download={ download.file } target=\"_blank\" rel=\"noreferrer\">\n              <FontAwesomeIcon icon={ faFileDownload } size='2x' />\n            </a>\n            <Tooltip placement=\"bottom\" isOpen={ convertDownloadTooltip } target=\"convertDownloadTooltip\" toggle={ () => this.setState(prevState => ({ convertDownloadTooltip: !prevState.convertDownloadTooltip })) }>\n              Download converted schema\n            </Tooltip>\n\n            <div className={ `btn-group btn-group-sm float-right mr-2${convert.html ? '' : ' d-none'}` }>\n              <Button id=\"viewSchemaTooltip\" color=\"info\" href=\"#\" onClick={ this.viewPage }>\n                <FontAwesomeIcon icon={ faWindowMaximize } size='2x' />\n              </Button>\n              <Tooltip placement=\"bottom\" isOpen={ viewSchemaTooltip } target=\"viewSchemaTooltip\" toggle={ () => this.setState(prevState => ({ viewSchemaTooltip: !prevState.viewSchemaTooltip })) }>\n                View Schema in new window\n              </Tooltip>\n\n              <Button id=\"pdfDownloadTooltip\" color=\"info\" href=\"#\" onClick={ this.downloadPDF }>\n                <FontAwesomeIcon icon={ faFilePdf } size='2x' />\n              </Button>\n              <Tooltip placement=\"bottom\" isOpen={ pdfDownloadTooltip } target=\"pdfDownloadTooltip\" toggle={ () => this.setState(prevState => ({ pdfDownloadTooltip: !prevState.pdfDownloadTooltip })) }>\n                Download PDF of the schema\n              </Tooltip>\n            </div>\n            { convert.popup }\n            <div className=\"form-row ml-1 mb-0\">\n              <div className=\"form-group col-md-6 px-1 mb-0\">\n                <select id=\"convert-to\" name=\"convert-to\" className=\"form-control\" defaultValue=\"empty\" onChange={ e => this.setState(prevState => ({ convert: { ...prevState.convert, selected: e.target.value } })) }>\n                  <option value=\"empty\">Convert To...</option>\n                  { convertOpts }\n                </select>\n              </div>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\" htmlFor=\"comments\">Comments</label>\n                <ToggleSwitch\n                  className=\"form-check-input\"\n                  icons={{\n                    checked: <FontAwesomeIcon icon={ faCheck } />,\n                    unchecked: <FontAwesomeIcon icon={ faTimes } />\n                  }}\n                  defaultChecked={ schema.comments }\n                  onToggle={\n                    val => {\n                      this.setState(prevState => ({\n                        schema: {\n                          ...prevState.schema,\n                          comments: val\n                        }\n                      }));\n                    }\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-12 m-1\" />\n      </fieldset>\n    );\n  }\n\n  render() {\n    const { convTooltip } = this.state;\n    const { canonical, title } = this.meta;\n    return (\n      <div className='row mx-auto'>\n        <Helmet>\n          <title>{ title }</title>\n          <link rel=\"canonical\" href={ canonical } />\n        </Helmet>\n        <Form className=\"mx-auto col-12\" onSubmit={ this.submitForm }>\n          <div className=\"form-row\">\n            { this.jadn() }\n            { this.converted() }\n          </div>\n          <div className=\"col-12\" />\n          <div className=\"form-group\">\n            <Button outline color=\"primary\" type=\"submit\" id=\"convTooltip\">Convert</Button>\n            <Tooltip placement=\"bottom\" isOpen={ convTooltip } target=\"convTooltip\" toggle={ () => this.setState(prevState => ({ convTooltip: !prevState.convTooltip })) }>\n              Convert the given JADN schema to the selected format\n            </Tooltip>\n            <Button outline color=\"danger\" type=\"reset\" onClick={ () => { this.setState(prevState => ({ schema: { ...prevState.schema, schema: {}, conv: '' }})); } } >Reset</Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Converter);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[10].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./toggle-switch.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[10].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./toggle-switch.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.j = 545;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t545: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkclient\"] = self[\"webpackChunkclient\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216,493], () => (__webpack_require__(1019)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","baseAPI","info","createAction","endpoint","method","types","convertSchema","schema","t","comments","headers","body","JSON","stringify","load","type","file","VALIDATE_FAILURE","validateSchema","mapStateToProps","state","schemas","Convert","loadedSchemas","Util","loaded","validSchema","Validate","valid","conversions","convertedSchema","converted","siteTitle","site_title","mapDispatchToProps","dispatch","ConvertActions","s","c","loadFile","f","UtilActions","ValidateActions","connect","Converter","props","meta","schemaHeight","downloadMime","cddl","html","md","jadn","json","proto3","rng","thrift","downloadPDF","bind","fileChange","selectChange","submitForm","viewPage","convTooltip","convertDownloadTooltip","pdfDownloadTooltip","viewSchemaTooltip","schemaOptsDropdown","message","data","format","url","urlStr","placeholder","selected","convert","title","canonical","window","location","origin","pathname","nextProps","nextState","propsUpdate","this","stateUpdate","e","preventDefault","schemaObj","parse","err","toast","then","valid_bool","valid_msg","target","id","value","split","updateArr","decode","setState","prevState","toUpperCase","slice","includes","fmt","Object","keys","files","prefix","name","fileReader","FileReader","onload","fr","_ev","atob","result","escaped2cbor","hexify","readAsDataURL","i","msg","startsWith","charAt","minify","validURL","substring","lastIndexOf","fileExt","loadURL","d","_err","rtn","content","encodeURIComponent","setTimeout","fetch","rsp","blob","FileSaver","console","log","nulls","undefined","htmlTmp","HTMLParser","replace","theme","children","filter","length","indexOf","sizeDivisor","elm","match","React","map","tmp","el","key","popup","center","options","width","_opt","win","outerWidth","height","outerHeight","top","opt","innerHeight","screenY","left","innerWidth","screenX","onClosing","prevState1","schemaOpts","className","style","onChange","val","jsObject","locale","reset","color","onClick","verifySchema","defaultValue","label","accept","download","downloadConfig","convertOpts","entries","resize","outline","padding","border","readOnly","href","rel","icon","faFileDownload","size","placement","isOpen","toggle","faWindowMaximize","faFilePdf","htmlFor","icons","checked","faCheck","unchecked","faTimes","defaultChecked","onToggle","onSubmit","conv","Component","___CSS_LOADER_EXPORT___","push","module","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","__webpack_exports__"],"sourceRoot":""}